{"idx":"MY9f2a47b5-b88f-4f5c-8016-3b9f27f22048","name":"SAS_EGP_V8_V7","treename":"sas_egp_v8_v7","children":[{"idx":"MY35e4a655-bb59-4844-b4ed-31c18e7f4cb7","name":"Main JS","custparents":[{"idx":"MY9f2a47b5-b88f-4f5c-8016-3b9f27f22048"},{"idx":"MYfbf81a98-e2bc-4bbc-ab38-c884301f34fa"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// jsdom and jquery must be used together</div><div class=\"ql-code-block\">const jsdom = require(\"jsdom\");</div><div class=\"ql-code-block\">const { window } = new jsdom.JSDOM(`...`);</div><div class=\"ql-code-block\">var $ = require(\"jquery\")(window);</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">// https://www.npmjs.com/package/adm-zip</div><div class=\"ql-code-block\">const AdmZip = require('adm-zip');</div><div class=\"ql-code-block\">const { config } = require('process');</div><div class=\"ql-code-block\">// const { Console } = require('console');</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">const targetzip_v7 = new AdmZip();</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">const thev8EGP = \"data/in/sample_a_v8.egp\";</div><div class=\"ql-code-block\">// const thev8EGP = \"data/in/do_not_git/v8 and v7 samples/sample3_v8.egp\";</div><div class=\"ql-code-block\">// make a zip instance of the thesrc v8 egp file</div><div class=\"ql-code-block\" data-language=\"plain\">const thesrczip_v8 = new AdmZip(thev8EGP);</div><div class=\"ql-code-block\" data-language=\"plain\"><br></div><div class=\"ql-code-block\">(async () =&gt; {</div><div class=\"ql-code-block\">    </div><div class=\"ql-code-block\">    // option 1: convert a v8 egp to v7</div><div class=\"ql-code-block\">    await convert_egp_v8_to_v7();</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // or option2: manually make a v7 egp</div><div class=\"ql-code-block\">    // await make_v7_egp_manually()</div><div class=\"ql-code-block\">})()</div><div class=\"ql-code-block\"><br></div></div><p>t///</p>","children":[{"idx":"MY1b27bf09-97ec-4aa8-b738-941d8f45aa4e","name":"convert_egp_v8_v7()","custparents":[{"idx":"MY35e4a655-bb59-4844-b4ed-31c18e7f4cb7"},{"idx":"MY3372cfd2-0de3-4681-9647-8e62f883b0a1"}],"children":[],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// convert a v8 egp file to v7</div><div class=\"ql-code-block\">async function convert_egp_v8_to_v7() {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1. get xml script and v8_doms_obj from a src egp</div><div class=\"ql-code-block\">    let { doms_obj_v8, theoriginsrcxmlstr_v8 } = await get_xml_from_v8_egp(thesrczip_v8)</div><div class=\"ql-code-block\">    // console.log('line33', thesrcxmlstr_v8.substr(0, 100), v8_doms_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // save the thesrcxmlstr_v8 as a local file (for viewing the contents during coding)</div><div class=\"ql-code-block\">    let thetargetv8xmlfile = 'data/out/do_not_git/projectxml_src_egpv8.xml'</div><div class=\"ql-code-block\">    // await mymodules.saveLocalTxtFile(theoriginsrcxmlstr_v8, thetargetv8xmlfile, 'utf16le');</div><div class=\"ql-code-block\">    await saveLocalTxtFile(theoriginsrcxmlstr_v8, thetargetv8xmlfile, 'utf16le');</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. from the source v8 egp file, get settings for the Project from the v8 egp file</div><div class=\"ql-code-block\">    let config_project_v8 = await get_project_config_from_src_v8_egp(doms_obj_v8)</div><div class=\"ql-code-block\">    // // change the project label to '__testv7' (this is for testing only)</div><div class=\"ql-code-block\">    // config_project_v8.Element.Label = '__testv7'</div><div class=\"ql-code-block\">    // initiate a v7 doms obj, and apply project configuations from the source v8 file</div><div class=\"ql-code-block\">    let { doms_obj_v7, thesrcxmlstr_v7 } = await init_v7_doms_obj(config_project_v8)</div><div class=\"ql-code-block\">    // console.log ('line76', doms_obj_v7.find('Element').prop('outerHTML') )</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3 converting PFDs from v8 egp to v7</div><div class=\"ql-code-block\">    let { config_pfd, result_doms_obj_add_PFD } = await convert_pfd_v8_to_v7(doms_obj_v8, config_project_v8, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_PFD</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 4. add EGTreeNode for wrapping all programs/tasks for ProjectTreeView. (it is named add_ as there is no egtrenode in v8)</div><div class=\"ql-code-block\">    let { config_programs, result_doms_obj_add_EGTreeNode_program } = await add_egtreenode_program_v8_to_v7(doms_obj_v7, config_pfd)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_EGTreeNode_program</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 5. converting CodeTask components and files from v8 to v7</div><div class=\"ql-code-block\">    let { config_task, result_doms_obj_add_task } = await convert_task_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_task</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 6 shortcuts to external files</div><div class=\"ql-code-block\">    let { config_shortcuttofile, result_doms_obj_add_shortcuttofile } = await convert_shortcuttofile_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_shortcuttofile</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 7 converting note components and files from v8 to v7</div><div class=\"ql-code-block\">    let { config_note, result_doms_obj_add_note } = await convert_note_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_note</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 8 // converting CodeTask components and files from v8 to v7</div><div class=\"ql-code-block\">    let { config_egtask, result_doms_obj_add_egtask } = await convert_egtask_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_egtask</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 9 links between componets (e.g., betwen CodeTasks, or a Codetask and a note)</div><div class=\"ql-code-block\">    let { config_link, result_doms_obj_add_link } = await convert_link_v8_to_v7(doms_obj_v8, doms_obj_v7)</div><div class=\"ql-code-block\">    doms_obj_v7 = result_doms_obj_add_link</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    write_to_v7_egp(doms_obj_v7, thesrcxmlstr_v7, config_project_v8)</div><div class=\"ql-code-block\">}; //async function convert_v8_to_v7</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"MY9bf2684f-1dba-43a5-82c4-eff2e2f50937","name":"substeps","custparents":[{"idx":"MY1b27bf09-97ec-4aa8-b738-941d8f45aa4e"}],"children":[{"idx":"MYf88fda08-048c-47d6-84a5-1c29244542cf","name":"1. make v8_doms_obj : get_xml_from_v8_egp()","custparents":[{"idx":"MY9bf2684f-1dba-43a5-82c4-eff2e2f50937"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// get xml script and v8_doms_obj from a src egp</div><div class=\"ql-code-block\">async function get_xml_from_v8_egp(thesrczip_v8) {</div><div class=\"ql-code-block\">    //*** read the v8 egp data */</div><div class=\"ql-code-block\">    // based on 01 extract_projectxml_from_egp.js, and 12_convert_xml_v8_to_v7.js</div><div class=\"ql-code-block\">    // 1. read the script of project.xml from thesrczip</div><div class=\"ql-code-block\">    let thesrcxmlfile_v8 = 'project.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr_v8 = await thesrczip_v8.readAsText(thesrcxmlfile_v8, encoding); // 'utf-16' type is called 'utf16le'</div><div class=\"ql-code-block\">    // 2. remove the head line '&lt;encoding=\"utf-16\"?&gt;', and clean the srcxml ()</div><div class=\"ql-code-block\">    let thebodyxmlstr_v8 = thesrcxmlstr_v8.split('encoding=\"utf-16\"?&gt;')[1]</div><div class=\"ql-code-block\">    let thesrcxmlstr_v8_cleaned = cleanxmlstr(thebodyxmlstr_v8)</div><div class=\"ql-code-block\">    // 3. make a doms_obj for the cleaned src xml</div><div class=\"ql-code-block\">    let v8_doms_obj = $(thesrcxmlstr_v8_cleaned)</div><div class=\"ql-code-block\">    // console.log('line47', v8_doms_obj)</div><div class=\"ql-code-block\">    return { 'doms_obj_v8': v8_doms_obj, 'theoriginsrcxmlstr_v8': thesrcxmlstr_v8 }</div><div class=\"ql-code-block\">}; //async function get_xml_from_v8_egp</div></div><p>t///</p>","children":[{"idx":"MYa23b9a7d-d526-4a33-91bc-a7f91ce1caf4","name":"2a. Save v8 project.xml to local","custparents":[{"idx":"MYf88fda08-048c-47d6-84a5-1c29244542cf"}],"NodeDescription":"<p>///t</p><p>For testing purpose:</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// // save the thesrcxmlstr_v8 as a local file (for viewing the contents during coding)</div><div class=\"ql-code-block\">    let thetargetv8xmlfile = 'data/out/do_not_git/projectxml_src_egpv8.xml'</div><div class=\"ql-code-block\">    // await mymodules.saveLocalTxtFile(theoriginsrcxmlstr_v8, thetargetv8xmlfile, 'utf16le');</div><div class=\"ql-code-block\">    await saveLocalTxtFile(theoriginsrcxmlstr_v8, thetargetv8xmlfile, 'utf16le');</div></div><p><br></p><p>t///</p>"},{"idx":"MYbeb2a6f4-a7d4-41ee-8086-58477fdccbd1","name":"2. get project config: get_project_config_ from_src_v8_egp()","custparents":[{"idx":"MYf88fda08-048c-47d6-84a5-1c29244542cf"}],"children":[{"idx":"MY848eab00-39ab-4da7-9da1-f19a8e44f766","name":"3. init v7 dom: init_v7_doms_obj()","custparents":[{"idx":"MYbeb2a6f4-a7d4-41ee-8086-58477fdccbd1"}],"children":[{"idx":"MY9f79cc09-a059-4bff-996b-970dd9c6e4c7","name":"4. convert v8 components to v7","custparents":[{"idx":"MY848eab00-39ab-4da7-9da1-f19a8e44f766"}],"children":[{"idx":"MYa68bd148-2437-4e82-9997-d46289fbe0aa","name":"5. save the v7 egp: write_to_v7_egp()","custparents":[{"idx":"MY9f79cc09-a059-4bff-996b-970dd9c6e4c7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// cleanup the target xlm and write to the target v7 egp</div><div class=\"ql-code-block\">async function write_to_v7_egp(doms_obj_v7, thesrcxmlstr_v7, config_project) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let targetxmlstr_cleaned = await cleanup_targetxml(doms_obj_v7, thesrcxmlstr_v7)</div><div class=\"ql-code-block\">    // remove lines only containing spaces and line breakers</div><div class=\"ql-code-block\">    let targetxmlstr = remove_spaces_linebreakers(targetxmlstr_cleaned)</div><div class=\"ql-code-block\">    // console.log(targetxmlstr)</div><div class=\"ql-code-block\">    targetxmlstr = '&lt;?xml version=\"1.0\" encoding=\"utf-16\"?&gt;\\n' + targetxmlstr</div><div class=\"ql-code-block\">    let thetargetxmlfile = 'data/out/do_not_git/projectxml_converted_egpv7.xml'</div><div class=\"ql-code-block\">    // await mymodules.saveLocalTxtFile(targetxmlstr, thetargetxmlfile, 'utf16le');</div><div class=\"ql-code-block\">    await saveLocalTxtFile(targetxmlstr, thetargetxmlfile, 'utf16le');</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // using Buffer to import the xml with utf16 encoding</div><div class=\"ql-code-block\">    targetzip_v7.addFile('project.xml', Buffer.from(targetxmlstr, \"utf16le\"))</div><div class=\"ql-code-block\">    // writeZip the targetzip_v7 instead of the original (theZip)</div><div class=\"ql-code-block\">    let target_filename = get_filename(thev8EGP).name</div><div class=\"ql-code-block\">    // await targetzip_v7.writeZip(\"data/out/do_not_git/\" + config_project.Element.Label + \"_tov7.egp\")</div><div class=\"ql-code-block\">    await targetzip_v7.writeZip(\"data/out/do_not_git/\" + target_filename + \"_tov7.egp\")</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function write_to_v7_egp</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY76143519-2f1c-4431-adf3-00d6758f0fb3","name":"substeps","custparents":[{"idx":"MYa68bd148-2437-4e82-9997-d46289fbe0aa"}],"children":[{"idx":"MY49c544c2-a69e-4e5a-9572-c34b23586e2f","name":"1. clean up target xml: cleanup_targetxml()","custparents":[{"idx":"MY76143519-2f1c-4431-adf3-00d6758f0fb3"}],"children":[{"idx":"MY5e42ceb2-ab64-421e-b9b4-4331defe0e07","name":"2. remove lines of no contents: remove_spaces_linebreakers()","custparents":[{"idx":"MY49c544c2-a69e-4e5a-9572-c34b23586e2f"}],"children":[{"idx":"MYfb483152-aace-41d7-81cd-30d964db6582","name":"3. save converted v7 project xml: saveLocalTxtFile()","custparents":[{"idx":"MY5e42ceb2-ab64-421e-b9b4-4331defe0e07"}],"children":[{"idx":"MY536e4f22-2599-40da-8b0a-ecaf5002d013","name":"4. add the target xml as project.xml in the target v7 egp: get_filename()","custparents":[{"idx":"MYfb483152-aace-41d7-81cd-30d964db6582"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}]}]}]}}],"collapsed":0,"_substeps":{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7","name":"substeps","custparents":[{"idx":"MY9f79cc09-a059-4bff-996b-970dd9c6e4c7"}],"children":[{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa","name":"4a. PFDs: convert_pfd_v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting PFDs from v8 egp to v7</div><div class=\"ql-code-block\">async function convert_pfd_v8_to_v7(doms_obj_v8, config_project_v8, doms_obj_v7) {</div><div class=\"ql-code-block\">    // 3a. get settings from the Project from the v8 doms_obj</div><div class=\"ql-code-block\">    let type_attr_pfd = 'SAS.EG.ProjectElements.ProcessFlowContainer'</div><div class=\"ql-code-block\">    let pfd_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_pfd)</div><div class=\"ql-code-block\">    let pfd_input_arr = []</div><div class=\"ql-code-block\">    pfd_elements_doms_obj_v8.forEach(d =&gt; {</div><div class=\"ql-code-block\">        // get the Label and ID from each pfd Element.Element</div><div class=\"ql-code-block\">        let label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        let id = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\">        pfd_input_arr.push({ Label: label, ID: id })</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\">    // 3b. get configuration of a pfd element</div><div class=\"ql-code-block\">    let pfd_input = [], config_pfd = []</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; pfd_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // config the pfd element</div><div class=\"ql-code-block\">        pfd_input[i] = {}</div><div class=\"ql-code-block\">        pfd_input[i].Label = pfd_input_arr[i].Label</div><div class=\"ql-code-block\">        pfd_input[i].ID = pfd_input_arr[i].ID</div><div class=\"ql-code-block\">        // console.log('line38', pfd_input[i].Label)</div><div class=\"ql-code-block\">        config_pfd[i] = await config_pfd_function(config_project_v8, pfd_input[i])</div><div class=\"ql-code-block\">        // console.log('line40', config_pfd[i])</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_pfd_component(doms_obj_v7, config_pfd[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;pfd_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_pfd: config_pfd, result_doms_obj_add_PFD: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_pfd_v8_to_v7</div></div><p>t///</p><p><br></p>","children":[],"_substeps":{"idx":"MY895ac631-efff-4f03-b601-b715b840fe32","name":"substeps","custparents":[{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa"}],"children":[{"idx":"MY19a25acf-3d7d-4584-9a7d-6b62f56b455c","name":"1. get PFD settings from v8 egp: get_element_doms_ obj_by_type()","custparents":[{"idx":"MY895ac631-efff-4f03-b601-b715b840fe32"}],"children":[{"idx":"MY2f09b6c6-490a-4c4d-a5eb-f6896daf4323","name":"2. loop for each PFD, make and append PFD components","custparents":[{"idx":"MY19a25acf-3d7d-4584-9a7d-6b62f56b455c"}]}]}]}},{"idx":"MYe590ede3-aae0-4e6e-92c9-9094752c5b02","name":"4b. add EGTreeNode of ProgramsFolder add_egtreenode_program_v8_to_v7(","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// Add EGTreeNode for wrapping all programs/tasks for ProjectTreeView.</div><div class=\"ql-code-block\">async function add_egtreenode_program_v8_to_v7(doms_obj_v7, config_pfd) {</div><div class=\"ql-code-block\">    let config_programs = []</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; config_pfd.length; i++) {</div><div class=\"ql-code-block\">        // The EGTreeNode is to be added to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)</div><div class=\"ql-code-block\">        // 4a. Configuration of the EGTreeNode    </div><div class=\"ql-code-block\">        config_programs[i] = await config_programs_function(config_pfd[i])</div><div class=\"ql-code-block\">        // 4b. make and append the EGTreeNode that is to be appended to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)</div><div class=\"ql-code-block\">        doms_obj = await make_append_egtreenode_programs(doms_obj_v7, config_programs[i], config_pfd[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;pfd_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_programs: config_programs, result_doms_obj_add_EGTreeNode_program: doms_obj }</div><div class=\"ql-code-block\">}; //async function add_egtreenode_program_v8_to_v7</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MYf663dd10-8e4b-4144-a139-8d1ba06e226e","name":"substeps","custparents":[{"idx":"MYe590ede3-aae0-4e6e-92c9-9094752c5b02"}],"children":[{"idx":"MYffdcbac8-02fe-42d1-afa9-17c4fabcc3fb","name":"Loop for each process flow (PFD) to make EGTreeNode for each Program of a PFD","custparents":[{"idx":"MYf663dd10-8e4b-4144-a139-8d1ba06e226e"}]}]}},{"idx":"MYd27bbbac-761f-4c06-89f8-e2e37b364418","name":"4c. CodeTask: convert_task_v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"children":[],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting CodeTask components and files from v8 to v7</div><div class=\"ql-code-block\">async function convert_task_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7) {</div><div class=\"ql-code-block\">    // from doms_obj_v8, find Elements.Element components with Type=\"SAS.EG.ProjectElements.CodeTask\"</div><div class=\"ql-code-block\">    let type_attr_task = 'SAS.EG.ProjectElements.CodeTask'</div><div class=\"ql-code-block\">    let task_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_task)</div><div class=\"ql-code-block\">    let task_input_arr = []</div><div class=\"ql-code-block\">    // console.log('line134', task_elements_doms_obj_v8)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each task_element found from the v8 egp</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; task_elements_doms_obj_v8.length; i++) {</div><div class=\"ql-code-block\">        let d = task_elements_doms_obj_v8[i]</div><div class=\"ql-code-block\">        // get the Label and ID from each pfd Element.Element</div><div class=\"ql-code-block\">        let task_config = {}, task_config_element = {}, config_parent_pfd, code, Embedded, DNA = {}, TaskGraphic = {}</div><div class=\"ql-code-block\">        // get the task Element's Element.Label and .ID</div><div class=\"ql-code-block\">        task_config_element.Label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        task_config_element.ID = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // get the parent PFD of the task element</div><div class=\"ql-code-block\">        let the_parent_pfdid = $($(d).find(\"Element\").find(\"Container\")[0]).text()</div><div class=\"ql-code-block\">        // according to the parent pfd id, find the configuration of that pfd</div><div class=\"ql-code-block\">        config_pfd.forEach(d =&gt; {</div><div class=\"ql-code-block\">            if (d.Element.ID === the_parent_pfdid) { config_parent_pfd = d }</div><div class=\"ql-code-block\">        }) // config_pfd.forEach(d=&gt;{...}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // get the .CodeTask.Embedded's textconent (to indicate whether the task is embedded or a shortcut to an external .sas program)</div><div class=\"ql-code-block\">        Embedded = $($(d).find(\"CodeTask\").find(\"Embedded\")[0]).text()</div><div class=\"ql-code-block\">        // if Embedded = 'False', get the element's .DNA.FullPath's textcontent</div><div class=\"ql-code-block\">        if (Embedded &amp;&amp; Embedded === 'False') {</div><div class=\"ql-code-block\">            // unlike manual input of DNA's fullpath, here the html within a DNA is directly copied and saved to input.DNA.html</div><div class=\"ql-code-block\">            // later, DNA.html will be directly input (in make_task_element_component()) into the DNA component (as html()) in the doms_obj_v7</div><div class=\"ql-code-block\">            DNA.html = $($(d).find(\"CodeTask\").find(\"DNA\")[0]).html() // DNA.html is with ampersand symbols</div><div class=\"ql-code-block\">            // console.log('line164', DNA.html)</div><div class=\"ql-code-block\">        } // if (Embedded &amp;&amp; Embedded === 'False')</div><div class=\"ql-code-block\">        else {// else copy the embedded sas code file (code.sas) from the v8 epg's code.sas in the folder named by the task's ID</div><div class=\"ql-code-block\">            // Note: this is different from manually config code for embedded tasks.</div><div class=\"ql-code-block\">            // When manually configured, the sas code string is input to task_input_arr[i].code </div><div class=\"ql-code-block\">            //  later in make_append_task_component(), the code is saved as a code.sas file</div><div class=\"ql-code-block\">            // When not manually configured (get config from a src v8 egp), the sas code of the original v8 egp is directly imported and saved as a code.sas in the target v7 egp</div><div class=\"ql-code-block\">            // read code text from the srcv8zip</div><div class=\"ql-code-block\">            let codefile = task_config_element.ID + '/code.sas' // Note: use /, not \\, not \\\\!</div><div class=\"ql-code-block\">            let task_sascodestr = await thesrczip_v8.readAsText(codefile, \"utf-8\");</div><div class=\"ql-code-block\">            // console.log('line191', task_sascodestr)</div><div class=\"ql-code-block\">            // add as a file into targetzip_v7</div><div class=\"ql-code-block\">            // addFile to zip can use \\\\ or / but not \\</div><div class=\"ql-code-block\">            targetzip_v7.addFile(task_config_element.ID + '/code.sas', Buffer.from(task_sascodestr, \"utf-8\"))</div><div class=\"ql-code-block\">        }// else copy the sas code from the v8 epg's folder named by the task's ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // get the TaskGraphic.PosX, PosY setting (these set the position of the task icon in the PFD view)</div><div class=\"ql-code-block\">        // use the task id (task_config_element.ID), find the correponding TaskGraphic in doms_obj_v8</div><div class=\"ql-code-block\">        let the_taskgraphic_dom_obj = get_task_or_note_graphic_dom_by_id_v8(doms_obj_v8, task_config_element.ID, 'TaskGraphic')</div><div class=\"ql-code-block\">        // console.log('line182', the_taskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">        TaskGraphic.ID = $(the_taskgraphic_dom_obj.find('ID')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosX = $(the_taskgraphic_dom_obj.find('PosX')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosY = $(the_taskgraphic_dom_obj.find('PosY')[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        task_config = {</div><div class=\"ql-code-block\">            Element: task_config_element,</div><div class=\"ql-code-block\">            config_pfd: config_parent_pfd,</div><div class=\"ql-code-block\">            Embedded: Embedded,</div><div class=\"ql-code-block\">            DNA: DNA,</div><div class=\"ql-code-block\">            TaskGraphic: TaskGraphic</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">        task_input_arr.push(task_config)</div><div class=\"ql-code-block\">    } //for (let i = 0; i &lt; task_elements_doms_obj_v8.length; i++)</div><div class=\"ql-code-block\">    // console.log('line204', task_input_arr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each item in task_input_arr and make task elements into the target egp's xml</div><div class=\"ql-code-block\">    let config_task = []</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; task_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // 5.1 configuration for the task_component (indicate the parent PFD, and the task in task_input_arr)</div><div class=\"ql-code-block\">        config_task[i] = await config_task_function(task_input_arr[i].config_pfd, task_input_arr[i])</div><div class=\"ql-code-block\">        // console.log('line44', config_task)</div><div class=\"ql-code-block\">        // 5.2 add task components</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_task_component(doms_obj_v7, config_task[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;task_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_task: config_task, result_doms_obj_add_task: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_task_v8_to_v7</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"MYb23c8e29-c433-4201-bdd8-8b5e0eb7c6bc","name":"substeps","custparents":[{"idx":"MYd27bbbac-761f-4c06-89f8-e2e37b364418"}],"children":[{"idx":"MY8eaf9dea-5fa1-4413-84fb-7e1601709547","name":"1. get all CodeTask Elements in ProjectCollection.Elements: get_element_doms _obj_by_type()","custparents":[{"idx":"MYb23c8e29-c433-4201-bdd8-8b5e0eb7c6bc"}],"children":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a","name":"2. Loop for each task element to make task_input_arr","custparents":[{"idx":"MY8eaf9dea-5fa1-4413-84fb-7e1601709547"}],"children":[{"idx":"MYfbd21bcc-4d8b-4470-9897-a080a654cf2c","name":"3. Loop for each task_input_arr and add Task Components","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}]}],"_substeps":{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6","name":"substeps","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}],"children":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa","name":"1. Get Element.ID and Label","custparents":[{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6"}],"children":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626","name":"2. get the task's PFDID and the corresponding config_pfd","custparents":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa"},{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa"}],"children":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa","name":"3. get Embedded or shortcut to external code setting","custparents":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626"}],"children":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f","name":"4. config for TaskGraphic of task","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MYa3b786a1-b3c5-4c95-b314-c0a3d04a27f2","name":"5. Include all configs in an dictionary and push to task_input_arr","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}]}]}],"_substeps":{"idx":"MY402645f0-dfcf-41e4-a607-5da064a35ee9","name":"substeps","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MY95818d50-5669-400b-8540-74d90e79f3a6","name":"3a. If not Embedded, get the DNA setting indicating the location of the external code file","custparents":[{"idx":"MY402645f0-dfcf-41e4-a607-5da064a35ee9"}]},{"idx":"MYe910c1b3-c27d-4e10-b5c0-152f5f8fbe61","name":"3b. If embedded, read the embedded code and save into the target egp","custparents":[{"idx":"MY402645f0-dfcf-41e4-a607-5da064a35ee9"}]}]}}]}]}]}}],"oldparentidx":"MYb23c8e29-c433-4201-bdd8-8b5e0eb7c6bc"}],"oldparentidx":"MYd27bbbac-761f-4c06-89f8-e2e37b364418"}},{"idx":"MY720922c5-59d3-4e8a-92b1-5bd87ec6de59","name":"4d. ShortcutToFiles: convert_shortcuttofile _v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting ShortCutToFile components and files from v8 to v7</div><div class=\"ql-code-block\">async function convert_shortcuttofile_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let shortcuttofile_input_arr = []</div><div class=\"ql-code-block\">    let config_shortcuttofile = []</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1. from doms_obj_v8, find Elements.Element components with Type=\"SAS.EG.ProjectElements.ShortCutToFile\"</div><div class=\"ql-code-block\">    let type_attr_shortcuttofile = 'SAS.EG.ProjectElements.ShortCutToFile'</div><div class=\"ql-code-block\">    let shortcuttofile_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_shortcuttofile)</div><div class=\"ql-code-block\">    // console.log('251:', shortcuttofile_elements_doms_obj_v8)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each shortcuttofile element found from the v8 egp</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; shortcuttofile_elements_doms_obj_v8.length; i++) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        let d = shortcuttofile_elements_doms_obj_v8[i]</div><div class=\"ql-code-block\">        // get the Label and ID from each pfd Element.Element</div><div class=\"ql-code-block\">        let shortcuttofile_config = {}, config_parent_pfd, Element = {}, ExternalFile = {}, DNA = {}, TaskGraphic = {}</div><div class=\"ql-code-block\">        //1. get the shortcuttofile Element's Element.Label and .ID (these are the shortcutLabel shortcutID)</div><div class=\"ql-code-block\">        Element.Label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        Element.ID = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //2. get the parent PFD of the shortcuttofile element</div><div class=\"ql-code-block\">        let the_parent_pfdid = $($(d).find(\"Element\").find(\"Container\")[0]).text()</div><div class=\"ql-code-block\">        // according to the parent pfd id, find the configuration of that pfd</div><div class=\"ql-code-block\">        config_pfd.forEach(d =&gt; {</div><div class=\"ql-code-block\">            if (d.Element.ID === the_parent_pfdid) { config_parent_pfd = d }</div><div class=\"ql-code-block\">        }) // config_pfd.forEach(d=&gt;{...}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //3. Get configuration of .ExternalFile</div><div class=\"ql-code-block\">        //3a. Identify the ExternalFile component of which the ShortCutID = shortcuttofile_config_element.ID</div><div class=\"ql-code-block\">        let ExternalFile_doms_obj = $(doms_obj_v8.find('ExternalFileList &gt; ExternalFile')) // find ExternalFileList's direct children with tag of ExternalFile</div><div class=\"ql-code-block\">        // console.log('274:', ExternalFile_doms)</div><div class=\"ql-code-block\">        //loop to identify the ExternalFile of which the .ExternalFile.ShortCutList.ShortCutID = shortcuttofile_config_element.ID</div><div class=\"ql-code-block\">        let the_externalfile_dom_obj</div><div class=\"ql-code-block\">        for (j = 0; j &lt; ExternalFile_doms_obj.length; j++) {</div><div class=\"ql-code-block\">            let ShortCutID = $($(ExternalFile_doms_obj[i]).find('ExternalFile &gt; ShortCutList &gt; ShortCutID')[0]).text()</div><div class=\"ql-code-block\">            // console.log('278:', ShortCutID, shortcuttofile_config_element.ID)</div><div class=\"ql-code-block\">            if (ShortCutID === Element.ID) {</div><div class=\"ql-code-block\">                the_externalfile_dom_obj = $(ExternalFile_doms_obj[j])</div><div class=\"ql-code-block\">                // console.log ('282:', the_externalfile_dom_obj)</div><div class=\"ql-code-block\">                break</div><div class=\"ql-code-block\">            }</div><div class=\"ql-code-block\">        } // for (j=0;j&lt;ExternalFile_doms_obj.length;j++)</div><div class=\"ql-code-block\">        // get the externalfile settings</div><div class=\"ql-code-block\">        //3b. ExternalFile's Label and ID. Note: </div><div class=\"ql-code-block\">        // It's .Element is for .ExternalFile, not for Elements.Element of the ShortCutToFile </div><div class=\"ql-code-block\">        ExternalFile.Label = $(the_externalfile_dom_obj.find('Element &gt; Label')[0]).text()</div><div class=\"ql-code-block\">        ExternalFile.ID = $(the_externalfile_dom_obj.find('Element &gt; ID')[0]).text()</div><div class=\"ql-code-block\">        // 3c. FilyTypeType</div><div class=\"ql-code-block\">        // console.log('290', Element)</div><div class=\"ql-code-block\">        ExternalFile.FileTypeType = $(the_externalfile_dom_obj.find('ExternalFile &gt; FileTypeType')[0]).text()</div><div class=\"ql-code-block\">        // console.log('290', ExternalFile)</div><div class=\"ql-code-block\">        // 3d. get the DNA html (for location of the external file)</div><div class=\"ql-code-block\">        DNA.html = $(the_externalfile_dom_obj.find('ExternalFile &gt; DNA')[0]).html()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //4. get the TaskGraphic.ID, .PosX, and PosY setting (these set the position of the shortcuttofile icon in the PFD view)</div><div class=\"ql-code-block\">        // use the shortcuttofile id (shortcuttofile_config_element.ID), find the correponding TaskGraphic in doms_obj_v8</div><div class=\"ql-code-block\">        let the_taskgraphic_dom_obj = get_task_or_note_graphic_dom_by_id_v8(doms_obj_v8, Element.ID, 'TaskGraphic')</div><div class=\"ql-code-block\">        // console.log('line182', the_taskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">        TaskGraphic.ID = $(the_taskgraphic_dom_obj.find('ID')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosX = $(the_taskgraphic_dom_obj.find('PosX')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosY = $(the_taskgraphic_dom_obj.find('PosY')[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //5. assemble all configurations and push to shortcuttofile_input_arr</div><div class=\"ql-code-block\">        shortcuttofile_config = {</div><div class=\"ql-code-block\">            Element: Element,</div><div class=\"ql-code-block\">            config_pfd: config_parent_pfd,</div><div class=\"ql-code-block\">            TaskGraphic: TaskGraphic,</div><div class=\"ql-code-block\">            ExternalFile: ExternalFile,</div><div class=\"ql-code-block\">            DNA: DNA</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">        shortcuttofile_input_arr.push(shortcuttofile_config)</div><div class=\"ql-code-block\">    } //for (let i = 0; i &lt; shortcuttofile_elements_doms_obj_v8.length; i++)</div><div class=\"ql-code-block\">    // console.log('316:', shortcuttofile_input_arr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each item in shortcuttofile_input_arr and make shortcuttofile elements into the target egp's xml</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    for (let i = 0; i &lt; shortcuttofile_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // 5.1 configuration for the shortcuttofile_component (indicate the parent PFD, and the shortcuttofile in shortcuttofile_input_arr)</div><div class=\"ql-code-block\">        config_shortcuttofile[i] = await config_shortcuttofile_function(shortcuttofile_input_arr[i])</div><div class=\"ql-code-block\">        // console.log('323:', config_shortcuttofile)</div><div class=\"ql-code-block\">        // 5.2 add shortcuttofile components</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_shortcuttofile_component(doms_obj_v7, config_shortcuttofile[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;shortcuttofile_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_shortcuttofile: config_shortcuttofile, result_doms_obj_add_shortcuttofile: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_shortcuttofile_v8_to_v7</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY57babd36-8c15-4247-b405-d69bafed5577","name":"substeps","custparents":[{"idx":"MY720922c5-59d3-4e8a-92b1-5bd87ec6de59"}],"children":[{"idx":"50aec3b0-cc09-4503-9e6a-a6c910d56abc","name":"1. ShortcutToFile Elements in.Elements: get_element_doms _obj_by_type()","custparents":[{"idx":"MY57babd36-8c15-4247-b405-d69bafed5577"}],"children":[{"idx":"c7b79fb9-1509-47f2-9d7e-c683c21df2a9","name":"2. Loop for each element to make shortcuttofile_input_arr","custparents":[{"idx":"50aec3b0-cc09-4503-9e6a-a6c910d56abc"}],"_substeps":{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6","name":"substeps","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}],"children":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa","name":"1. Get Element.ID and Label","custparents":[{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6"}],"children":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626","name":"2. get the task's PFDID and the corresponding config_pfd","custparents":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa"},{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa"}],"children":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa","name":"3. Get configuration of .ExternalFile","custparents":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626"}],"children":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f","name":"4. config for TaskGraphic of ShortCutToFile","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MYa3b786a1-b3c5-4c95-b314-c0a3d04a27f2","name":"5. Include all configs in an dictionary and push to task_input_arr","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}]}],"_substeps":{"idx":"MY4f6c52e6-a595-4df9-a79e-724b90984fe6","name":"substeps","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}],"children":[{"idx":"MYb960a136-3377-44fe-8e84-64c7b50dcbbb","name":"Find the taskgraphic: get_task_or_ note_graphic_ dom_ by_id_v8()","custparents":[{"idx":"MY4f6c52e6-a595-4df9-a79e-724b90984fe6"}],"children":[{"idx":"MY06bc1206-be95-4ae8-bfa8-04f146ee51fb","name":"get config of .ID, .PosX, and .PosY","custparents":[{"idx":"MYb960a136-3377-44fe-8e84-64c7b50dcbbb"}]}]}]}}],"_substeps":{"idx":"MY402645f0-dfcf-41e4-a607-5da064a35ee9","name":"substeps","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MYe910c1b3-c27d-4e10-b5c0-152f5f8fbe61","name":"3a. Identify the ExternalFile component of which the ShortCutID is shortcuttofile _config_element .ID","custparents":[{"idx":"MY402645f0-dfcf-41e4-a607-5da064a35ee9"}],"children":[{"idx":"MY14e31c0e-1458-426b-b68e-d99866e3b21b","name":"3b. get configuration of ExternalFile.Element .Label","custparents":[{"idx":"MYe910c1b3-c27d-4e10-b5c0-152f5f8fbe61"}],"children":[{"idx":"MYdeaf4dd9-07d0-468f-89e6-41a99c5ea2ed","name":"3c. config of ExternalFile.FilyTypeType","custparents":[{"idx":"MY14e31c0e-1458-426b-b68e-d99866e3b21b"}],"children":[{"idx":"MY2a1781b4-2097-4ba7-aa0c-37a94a704550","name":"3d. get config of DNA.html (for location of the external file)","custparents":[{"idx":"MYdeaf4dd9-07d0-468f-89e6-41a99c5ea2ed"}]}]}]}]}]}}]}]}]},"collapsed":0,"children":[{"idx":"MY3ec24605-6b36-4a4e-ba75-4020cd1b3ad1","name":"3. Loop for each shortcuttofile_input and add component","custparents":[{"idx":"c7b79fb9-1509-47f2-9d7e-c683c21df2a9"}]}]}]}]}},{"idx":"MYff780492-210d-4cc7-be36-1e6e0bf3bec2","name":"4e. Note: convert_note_v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting note components and files from v8 to v7</div><div class=\"ql-code-block\">async function convert_note_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let note_input_arr = []</div><div class=\"ql-code-block\">    let config_note = []</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // from doms_obj_v8, find Elements.Element components with Type=\"SAS.EG.ProjectElements.Note\"</div><div class=\"ql-code-block\">    let type_attr_note = 'SAS.EG.ProjectElements.Note'</div><div class=\"ql-code-block\">    let note_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_note)</div><div class=\"ql-code-block\">    // console.log('251:', note_elements_doms_obj_v8)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each note element found from the v8 egp</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; note_elements_doms_obj_v8.length; i++) {</div><div class=\"ql-code-block\">        let note_config = {}, config_parent_pfd, Element = {}, TextElement = {}, Note = {}, NoteGraphic = {}</div><div class=\"ql-code-block\">        let d = note_elements_doms_obj_v8[i]</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //1.get the note Element's Element.Label and .ID</div><div class=\"ql-code-block\">        Element.Label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        Element.ID = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //2. get the configuration of the parent PFD of the note element</div><div class=\"ql-code-block\">        let the_parent_pfdid = $($(d).find(\"Element\").find(\"Container\")[0]).text()</div><div class=\"ql-code-block\">        // according to the parent pfd id, find the configuration of that pfd</div><div class=\"ql-code-block\">        config_pfd.forEach(e =&gt; {</div><div class=\"ql-code-block\">            if (e.Element.ID === the_parent_pfdid) { config_parent_pfd = e }</div><div class=\"ql-code-block\">        }) // config_pfd.forEach(d=&gt;{...}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //3. Element (of the note).TextElement.Text</div><div class=\"ql-code-block\">        TextElement.Text = $($(d).find(\"TextElement &gt; Text\")[0]).html()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //4. Element (of the note).Note.Collapse</div><div class=\"ql-code-block\">        Note.Collapsed = $($(d).find(\"Note &gt; Collapsed\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //5. External_Object.ProcessFlowView.Graphics.NoteGraphic</div><div class=\"ql-code-block\">        // get the NoteGraphic.PosX, PosY setting (these set the position of the note icon in the PFD view)</div><div class=\"ql-code-block\">        // use the note id (note_config_element.ID), find the correponding NoteGraphic in doms_obj_v8</div><div class=\"ql-code-block\">        let the_notegraphic_dom_obj = get_task_or_note_graphic_dom_by_id_v8(doms_obj_v8, Element.ID, 'NoteGraphic')</div><div class=\"ql-code-block\">        NoteGraphic.ID = $(the_notegraphic_dom_obj.find('ID')[0]).text() // use ID instead of .Id although the original tag is Id</div><div class=\"ql-code-block\">        NoteGraphic.PosX = $(the_notegraphic_dom_obj.find('PosX')[0]).text()</div><div class=\"ql-code-block\">        NoteGraphic.PosY = $(the_notegraphic_dom_obj.find('PosY')[0]).text()</div><div class=\"ql-code-block\">        NoteGraphic.Collapsed = $(the_notegraphic_dom_obj.find('Collapsed')[0]).text()</div><div class=\"ql-code-block\">        NoteGraphic.WidthExpanded = $(the_notegraphic_dom_obj.find('WidthExpanded')[0]).text()</div><div class=\"ql-code-block\">        NoteGraphic.HeightExpanded = $(the_notegraphic_dom_obj.find('HeightExpanded')[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        note_config = {</div><div class=\"ql-code-block\">            config_pfd: config_parent_pfd,</div><div class=\"ql-code-block\">            Element: Element,</div><div class=\"ql-code-block\">            TextElement: TextElement,</div><div class=\"ql-code-block\">            Note: Note,</div><div class=\"ql-code-block\">            NoteGraphic: NoteGraphic</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">        note_input_arr.push(note_config)</div><div class=\"ql-code-block\">    } //for (let i = 0; i &lt; note_elements_doms_obj_v8.length; i++)</div><div class=\"ql-code-block\">    // console.log('316:', note_input_arr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each item in note_input_arr and make note elements into the target egp's xml</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    for (let i = 0; i &lt; note_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // configuration for the note_component (indicate the parent PFD, and the note in note_input_arr)</div><div class=\"ql-code-block\">        config_note[i] = await config_note_function(note_input_arr[i])</div><div class=\"ql-code-block\">        // console.log('397:', config_note)</div><div class=\"ql-code-block\">        // add note components</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_note_component(doms_obj_v7, config_note[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;note_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_note: config_note, result_doms_obj_add_note: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_note_v8_to_v7</div></div><p>t///</p>","children":[],"_substeps":{"idx":"d9cfdafa-0985-47ed-9235-3ac0e59cd046","name":"substeps","custparents":[{"idx":"MYff780492-210d-4cc7-be36-1e6e0bf3bec2"}],"children":[{"idx":"acc8f27e-1cbf-4f4b-bd0b-25a6f0f48485","name":"1. get all Note Elements in ProjectCollection.Elements: get_element_doms _obj_by_type()","custparents":[{"idx":"d9cfdafa-0985-47ed-9235-3ac0e59cd046"}],"children":[{"idx":"f7b6d767-9450-44b8-be3d-52e80d0d97b5","name":"2. Loop for each Note element to make note_input_arr","custparents":[{"idx":"acc8f27e-1cbf-4f4b-bd0b-25a6f0f48485"}],"children":[{"idx":"b7b95088-2910-4d83-82e2-6909fff7f60c","name":"3. Loop for each note_input_arr and add Note Components","custparents":[{"idx":"f7b6d767-9450-44b8-be3d-52e80d0d97b5"}]}],"_substeps":{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6","name":"substeps","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}],"children":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa","name":"1. Get Element.ID and Label","custparents":[{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6"}],"children":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626","name":"2. get the task's PFDID and the corresponding config_pfd","custparents":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa"},{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa"}],"children":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa","name":"3. get note text in Element .TextElement.Text","custparents":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626"}],"children":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f","name":"4. get config for NoteGraphic of the Note","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MYa3b786a1-b3c5-4c95-b314-c0a3d04a27f2","name":"5. Include all configs in an dictionary and push to note_input_arr","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}]}],"_substeps":{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6","name":"substeps","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}],"children":[{"idx":"MYbe30943a-a51f-43cf-a898-87b13f46ec62","name":".ID","custparents":[{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6"}]},{"idx":"MY6cede420-5b4c-49a9-a5b5-a3926d9c6aa2","name":".PosX","custparents":[{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6"}]},{"idx":"MY28d7dfb3-dede-4ec4-a669-3183930171e7","name":".Collasped","custparents":[{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6"}]},{"idx":"MYfc57295d-03eb-485d-89c1-f2a53dfe6dea","name":".WidthExpanded","custparents":[{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6"}]},{"idx":"MY14b99afe-9c4a-4833-825e-7531e5740a51","name":".HeightExpanded","custparents":[{"idx":"MY8d01f9c2-1ea4-4659-80a3-a4e163d127b6"}]}],"collapsed":1}}]}]}]}]}}]}]}},{"idx":"MY8f4b901d-22d8-4b5a-b8f4-6905a7593c5b","name":"4f. EGTask: convert_egtask_v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting EGTask components and files from v8 to v7</div><div class=\"ql-code-block\">async function convert_egtask_v8_to_v7(doms_obj_v8, config_pfd, doms_obj_v7) {</div><div class=\"ql-code-block\">    // from doms_obj_v8, find Elements.Element components with Type=\"SAS.EG.ProjectElements.EGTask\"</div><div class=\"ql-code-block\">    let type_attr_egtask = 'SAS.EG.ProjectElements.EGTask'</div><div class=\"ql-code-block\">    let egtask_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_egtask)</div><div class=\"ql-code-block\">    let egtask_input_arr = [], config_egtask = []</div><div class=\"ql-code-block\">    // console.log('line134', egtask_elements_doms_obj_v8)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each egtask_element found from the v8 egp</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; egtask_elements_doms_obj_v8.length; i++) {</div><div class=\"ql-code-block\">        let d = egtask_elements_doms_obj_v8[i]</div><div class=\"ql-code-block\">        // get the Label and ID from each pfd Element.Element</div><div class=\"ql-code-block\">        let egtask_config = {}, Element = {}, config_parent_pfd, TaskGraphic = {}</div><div class=\"ql-code-block\">        // get the egtask Element's Element.Label and .ID</div><div class=\"ql-code-block\">        Element.Label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        Element.ID = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // get the parent PFD of the egtask element</div><div class=\"ql-code-block\">        let the_parent_pfdid = $($(d).find(\"Element\").find(\"Container\")[0]).text()</div><div class=\"ql-code-block\">        // according to the parent pfd id, find the configuration of that pfd</div><div class=\"ql-code-block\">        config_pfd.forEach(d =&gt; {</div><div class=\"ql-code-block\">            if (d.Element.ID === the_parent_pfdid) { config_parent_pfd = d }</div><div class=\"ql-code-block\">        }) // config_pfd.forEach(d=&gt;{...}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // When not manually configured (get config from a src v8 egp), the sas code of the original v8 egp is directly imported and saved as a code.sas in the target v7 egp</div><div class=\"ql-code-block\">        // read code text from the srcv8zip</div><div class=\"ql-code-block\">        let egtask_xmlfile = Element.ID + '/' + Element.ID + '.xml' // Note: use /, not \\, not \\\\!</div><div class=\"ql-code-block\">        let egtask_xmlstr = await thesrczip_v8.readAsText(egtask_xmlfile, \"utf-8\");</div><div class=\"ql-code-block\">        // console.log('line191', egtask_sascodestr)</div><div class=\"ql-code-block\">        // add as a file into targetzip_v7</div><div class=\"ql-code-block\">        // addFile to zip can use \\\\ or / but not \\</div><div class=\"ql-code-block\">        targetzip_v7.addFile(egtask_xmlfile, Buffer.from(egtask_xmlstr, \"utf-8\"))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // get the TaskGraphic.PosX, PosY setting (these set the position of the egtask icon in the PFD view)</div><div class=\"ql-code-block\">        // use the egtask id (Element.ID), find the correponding TaskGraphic in doms_obj_v8</div><div class=\"ql-code-block\">        let the_egtaskgraphic_dom_obj = get_task_or_note_graphic_dom_by_id_v8(doms_obj_v8, Element.ID, 'TaskGraphic')</div><div class=\"ql-code-block\">        // console.log('line182', the_egtaskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">        TaskGraphic.ID = $(the_egtaskgraphic_dom_obj.find('ID')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosX = $(the_egtaskgraphic_dom_obj.find('PosX')[0]).text()</div><div class=\"ql-code-block\">        TaskGraphic.PosY = $(the_egtaskgraphic_dom_obj.find('PosY')[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        egtask_config = {</div><div class=\"ql-code-block\">            Element: Element,</div><div class=\"ql-code-block\">            config_pfd: config_parent_pfd,</div><div class=\"ql-code-block\">            TaskGraphic: TaskGraphic</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">        egtask_input_arr.push(egtask_config)</div><div class=\"ql-code-block\">    } //for (let i = 0; i &lt; egtask_elements_doms_obj_v8.length; i++)</div><div class=\"ql-code-block\">    // console.log('line456', egtask_input_arr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each item in egtask_input_arr and make egtask elements into the target egp's xml</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; egtask_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // 1 configuration for the egtask_component (indicate the parent PFD, and the egtask in egtask_input_arr)</div><div class=\"ql-code-block\">        config_egtask[i] = await config_egtask_function(egtask_input_arr[i].config_pfd, egtask_input_arr[i])</div><div class=\"ql-code-block\">        // console.log('462', config_egtask)</div><div class=\"ql-code-block\">        // 2 add egtask components</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_egtask_component(doms_obj_v7, config_egtask[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;egtask_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_egtask: config_egtask, result_doms_obj_add_egtask: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_egtask_v8_to_v7</div></div><p>t///</p>","children":[],"_substeps":{"idx":"703496c8-8efb-4b61-bd7d-ac6d8b65f28c","name":"substeps","custparents":[{"idx":"MY8f4b901d-22d8-4b5a-b8f4-6905a7593c5b"}],"children":[{"idx":"027be327-4e4e-4289-8a85-ac0d101551f1","name":"1. get all EGTask Elements in ProjectCollection.Elements: get_element_doms _obj_by_type()","custparents":[{"idx":"703496c8-8efb-4b61-bd7d-ac6d8b65f28c"}],"children":[{"idx":"b1ed99c5-f37a-4594-862a-1c4d2824026b","name":"2. Loop for each EGTask element to make egtask_input_arr","custparents":[{"idx":"027be327-4e4e-4289-8a85-ac0d101551f1"}],"children":[{"idx":"6f1ae1e0-50b4-4be9-a237-f221a0331e8d","name":"3. Loop for each egtask_input_arr and add EGTask Components","custparents":[{"idx":"b1ed99c5-f37a-4594-862a-1c4d2824026b"}]}],"_substeps":{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6","name":"substeps","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}],"children":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa","name":"1. Get Element.ID and Label","custparents":[{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6"}],"children":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626","name":"2. get the task's PFDID and the corresponding config_pfd","custparents":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa"},{"idx":"MY76b4e664-ab96-4f68-88b2-b30c182988aa"}],"children":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa","name":"3. Read and add EGTask xml file into the target v7 egp","custparents":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626"}],"children":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f","name":"4. config for EGTaskGraphic of the EGTask (.ID, .PosX, and .PosY)","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"}],"children":[{"idx":"MYa3b786a1-b3c5-4c95-b314-c0a3d04a27f2","name":"5. Include all configs in an dictionary and push to egtask_input_arr","custparents":[{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}]}]}]}]}]}]}}]}],"oldparentidx":"MY8f4b901d-22d8-4b5a-b8f4-6905a7593c5b"}},{"idx":"MYf9818810-93b3-4848-8b02-d7361897c2ed","name":"4g. Link: convert_link_v8_to_v7()","custparents":[{"idx":"MY2c0e3db7-ffd4-43bc-a9eb-d2123c5727f7"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// converting Link components and files from v8 to v7</div><div class=\"ql-code-block\">async function convert_link_v8_to_v7(doms_obj_v8, doms_obj_v7) {</div><div class=\"ql-code-block\">    // from doms_obj_v8, find Elements.Element components with Type=\"SAS.EG.ProjectElements.link\"</div><div class=\"ql-code-block\">    let type_attr_link = 'SAS.EG.ProjectElements.Link'</div><div class=\"ql-code-block\">    let link_elements_doms_obj_v8 = await get_element_doms_obj_by_type(doms_obj_v8, type_attr_link)</div><div class=\"ql-code-block\">    let link_input_arr = [], config_link = []</div><div class=\"ql-code-block\">    // console.log('line134', link_elements_doms_obj_v8)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each link_element found from the v8 egp</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; link_elements_doms_obj_v8.length; i++) {</div><div class=\"ql-code-block\">        let d = link_elements_doms_obj_v8[i]</div><div class=\"ql-code-block\">        //1. get the Label and ID from each pfd Element.Element</div><div class=\"ql-code-block\">        let Link = {}</div><div class=\"ql-code-block\">        // get the link Element's Element.Label and .ID</div><div class=\"ql-code-block\">        Link.Label = $($(d).find(\"Element\").find(\"Label\")[0]).text()</div><div class=\"ql-code-block\">        Link.ID = $($(d).find(\"Element\").find(\"ID\")[0]).text()</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // 2. get LinkFrom and LinkTo</div><div class=\"ql-code-block\">        let taskid_LinkFrom = $($(d).find(\"Log &gt; LinkFrom\")[0]).text() // although it is called taskid_, it can also be EGTask, ShortCutToFiles, etc.</div><div class=\"ql-code-block\">        let taskid_LinkTo = $($(d).find(\"Log &gt; LinkTo\")[0]).text()</div><div class=\"ql-code-block\">        Link.LinkFrom_config = {}</div><div class=\"ql-code-block\">        Link.LinkFrom_config.Element = {}</div><div class=\"ql-code-block\">        Link.LinkTo_config = {}</div><div class=\"ql-code-block\">        Link.LinkTo_config.Element = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        //3. get the linked element's .Element settings (ID, Label, etc.) from doms_obj_v7 get all Elements.Element.Element (which contains Label, ID, Container, etc)</div><div class=\"ql-code-block\">        let elements_doms_obj = $(doms_obj_v7.find('Elements &gt; Element &gt; Element'))</div><div class=\"ql-code-block\">        // console.log('495', elements_doms_obj)</div><div class=\"ql-code-block\">        for (let j = 1; j &lt; elements_doms_obj.length; j++) {</div><div class=\"ql-code-block\">            let theElement_dom_obj = $(elements_doms_obj[j])</div><div class=\"ql-code-block\">            // when the element matches the link from id, get it's properties</div><div class=\"ql-code-block\">            if ($(theElement_dom_obj.find('ID')[0]).text() === taskid_LinkFrom) {</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.ID = $(theElement_dom_obj.find('ID')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.Label = $(theElement_dom_obj.find('Label')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.Container = $(theElement_dom_obj.find('Container')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.CreatedOn = $(theElement_dom_obj.find('CreatedOn')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.ModifiedOn = $(theElement_dom_obj.find('ModifiedOn')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.ModifiedBy = $(theElement_dom_obj.find('ModifiedBy')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkFrom_config.Element.ModifiedByEGID = $(theElement_dom_obj.find('ModifiedByEGID')[0]).text()</div><div class=\"ql-code-block\">            } // if ($(theElement_dom_obj.find('ID')[0]).text() === taskid_LinkFrom){</div><div class=\"ql-code-block\">            // when the element matches the link to id, get it's properties</div><div class=\"ql-code-block\">            if ($(theElement_dom_obj.find('ID')[0]).text() === taskid_LinkTo) {</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.ID = $(theElement_dom_obj.find('ID')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.Label = $(theElement_dom_obj.find('Label')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.Container = $(theElement_dom_obj.find('Container')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.CreatedOn = $(theElement_dom_obj.find('CreatedOn')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.ModifiedOn = $(theElement_dom_obj.find('ModifiedOn')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.ModifiedBy = $(theElement_dom_obj.find('ModifiedBy')[0]).text()</div><div class=\"ql-code-block\">                Link.LinkTo_config.Element.ModifiedByEGID = $(theElement_dom_obj.find('ModifiedByEGID')[0]).text()</div><div class=\"ql-code-block\">            } // if ($(theElement_dom_obj.find('ID')[0]).text() === taskid_LinkTo){</div><div class=\"ql-code-block\">        }//for (let j=1; j&lt;elements_doms_obj.length; j++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        link_input_arr.push(Link)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    } //for (let i = 0; i &lt; link_elements_doms_obj_v8.length; i++)</div><div class=\"ql-code-block\">    // console.log('496', link_input_arr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // loop for each item in link_input_arr and make link elements into the target egp's xml</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; link_input_arr.length; i++) {</div><div class=\"ql-code-block\">        // 1 configuration for the link_component (indicate the parent PFD, and the link in link_input_arr)</div><div class=\"ql-code-block\">        config_link[i] = await config_link_function(link_input_arr[i])</div><div class=\"ql-code-block\">        // console.log('533', config_link)</div><div class=\"ql-code-block\">        // // 2 add link components</div><div class=\"ql-code-block\">        doms_obj_v7 = await make_append_link_component(doms_obj_v7, config_link[i])</div><div class=\"ql-code-block\">    } // for(let i=0;i&lt;link_input_arr.length;i++)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return { config_link: config_link, result_doms_obj_add_link: doms_obj_v7 }</div><div class=\"ql-code-block\">};//async function convert_link_v8_to_v7</div></div><p>t///</p>","children":[],"_substeps":{"idx":"7632d947-ac7d-4a30-b31d-359b99422f2c","name":"substeps","custparents":[{"idx":"MYf9818810-93b3-4848-8b02-d7361897c2ed"}],"children":[{"idx":"afa774a3-1d67-4197-a989-076b7e27c674","name":"1. get all Link Elements in ProjectCollection.Elements: get_element_doms _obj_by_type()","custparents":[{"idx":"7632d947-ac7d-4a30-b31d-359b99422f2c"}],"children":[{"idx":"9504b92d-8e54-465f-bba2-aa4855461398","name":"2. Loop for each Link element to make link_input_arr","custparents":[{"idx":"afa774a3-1d67-4197-a989-076b7e27c674"}],"children":[{"idx":"3b615910-dfc0-472f-99d7-4b1c125648b6","name":"3. Loop for each link_input_arr and add Link Components","custparents":[{"idx":"9504b92d-8e54-465f-bba2-aa4855461398"}]}],"_substeps":{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6","name":"substeps","custparents":[{"idx":"MY785ebd4e-0f65-468b-8249-287a08e3f52a"}],"children":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa","name":"1. Get Element.ID and Label","custparents":[{"idx":"MY6f8c43e7-edc0-4e13-8f45-bd230c54ffc6"}],"children":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626","name":"2. get LinkFrom and LinkTo Elements' IDs","custparents":[{"idx":"MY0c757d9d-162f-4966-8b9a-05b2dc284ffa"}],"children":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa","name":"3. get the linked element's settings (.Element.ID, Label, etc.) ","custparents":[{"idx":"MY235b69ee-6c1f-4d36-b241-f0f024008626"}],"children":[{"idx":"MYa3b786a1-b3c5-4c95-b314-c0a3d04a27f2","name":"4. Include all configs in an dictionary and push to link_input_arr","custparents":[{"idx":"MY16504bc8-7856-4eac-9995-dfbd6fef9bfa"},{"idx":"MYb25ca7fe-0e91-459c-9272-e2c4306c975f"}]}]}]}]}]}}]}]}}],"collapsed":0}}],"_substeps":{"idx":"MYb4563a51-bb9c-4a83-91c2-00dfc8afbcc4","name":"substeps","custparents":[{"idx":"MY848eab00-39ab-4da7-9da1-f19a8e44f766"}],"children":[{"idx":"MY957f64ab-1e37-40d9-9317-190a4fa57e29","name":"1. get prototype project.xml: readtxt()","custparents":[{"idx":"MYb4563a51-bb9c-4a83-91c2-00dfc8afbcc4"}],"children":[{"idx":"MYf1ab40a0-3b85-4a14-8abe-df9af326fdf4","name":"2. remove the heading xlm version line","custparents":[{"idx":"MY957f64ab-1e37-40d9-9317-190a4fa57e29"}],"children":[{"idx":"MY67360eeb-68c5-4df4-a367-e6cda4bfab3f","name":"3. cleanxml: cleanxmlstr()","custparents":[{"idx":"MYf1ab40a0-3b85-4a14-8abe-df9af326fdf4"}],"children":[{"idx":"MYda11c9d8-257f-43f8-8172-4b0d040ab9b2","name":"4. make doms_obj (for v7)","custparents":[{"idx":"MY67360eeb-68c5-4df4-a367-e6cda4bfab3f"}],"children":[{"idx":"MYf2706648-9728-4749-a804-8949704d25f8","name":"5. config ProjectCollection.Element (Config of the project)","custparents":[{"idx":"MYda11c9d8-257f-43f8-8172-4b0d040ab9b2"},{"idx":"MYbeb2a6f4-a7d4-41ee-8086-58477fdccbd1"}],"children":[{"idx":"MYbaf945ba-b35d-41d0-8ae1-463891e16e3a","name":"6. Init setting of other tags of ProjectCollection","custparents":[{"idx":"MYf2706648-9728-4749-a804-8949704d25f8"}]}]}]}]}]}]}]},"collapsed":0}],"collapsed":0,"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">async function get_project_config_from_src_v8_egp(v8_doms_obj) {</div><div class=\"ql-code-block\">    let project_element_dom_obj = $(v8_doms_obj.find(\"Element\")[0])</div><div class=\"ql-code-block\">    let config_project = {}</div><div class=\"ql-code-block\">    config_project.Element = {}</div><div class=\"ql-code-block\">    // define the tags of project settings in the v8 egp file</div><div class=\"ql-code-block\">    let tags_str = 'Label,ID,CreatedOn,ModifiedOn, ModifiedBy, ModifiedByEGID'</div><div class=\"ql-code-block\">    let tags_arr = tags_str.split(',').map(tagname =&gt; tagname.trim()) // make an array of tag names</div><div class=\"ql-code-block\">    tags_arr.forEach(tagname =&gt; { config_project.Element[tagname] = $(project_element_dom_obj.find(tagname)[0]).text() })</div><div class=\"ql-code-block\">    // console.log('line74', config_project)</div><div class=\"ql-code-block\">    return config_project</div><div class=\"ql-code-block\">};//async function get_project_config_from_src_v8_egp</div></div><p>t///</p>"}],"collapsed":0,"_substeps":{"idx":"MY4419d4e3-3730-48a1-8c28-57e2375c8098","name":"substeps","custparents":[{"idx":"MYf88fda08-048c-47d6-84a5-1c29244542cf"}],"children":[{"idx":"MY9e18b099-fba0-4d1e-b47c-8fa14a4f4f5c","name":"1. get v8 project.xml","custparents":[{"idx":"MY4419d4e3-3730-48a1-8c28-57e2375c8098"}],"children":[{"idx":"MYd82540da-a82d-44ef-ba4c-6704395ef570","name":"2. clean xml str: cleanxmlstr()","custparents":[{"idx":"MY9e18b099-fba0-4d1e-b47c-8fa14a4f4f5c"}],"children":[{"idx":"MY1cc8d3e4-d8a8-42be-84fe-5324a5b6ef9f","name":"3. make v8_doms_obj","custparents":[{"idx":"MYd82540da-a82d-44ef-ba4c-6704395ef570"}]}]}]}]}}],"collapsed":0}}],"collapsed":0},{"idx":"MYd09b4d1f-f2df-4399-984e-02c46ba71d3e","name":"Repeatedly used Functions","custparents":[{"idx":"MY9f2a47b5-b88f-4f5c-8016-3b9f27f22048"},{"idx":"MYfbf81a98-e2bc-4bbc-ab38-c884301f34fa"}],"children":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6","name":"Functions for making v7 egp components","custparents":[{"idx":"MYd09b4d1f-f2df-4399-984e-02c46ba71d3e"}],"children":[{"idx":"MY08c7c214-30b2-495c-b6a3-9eb3142c6c12","name":"define_element()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY425bed91-841c-4684-a3df-fba95de0f84e"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">async function define_element(config) {</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z01_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line 195', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // make the obj</div><div class=\"ql-code-block\">    let theElement_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\">    // set element attributes</div><div class=\"ql-code-block\">    if (config.attrs &amp;&amp; config.attrs.length &gt; 0) {</div><div class=\"ql-code-block\">        config.attrs.forEach(d =&gt; {</div><div class=\"ql-code-block\">            theElement_dom_obj.attr(d.name, d.value)</div><div class=\"ql-code-block\">        })//config.attrs.forEach</div><div class=\"ql-code-block\">    } //if (config.attrs &amp;&amp; config.attrs.length &gt; 0)</div><div class=\"ql-code-block\">    // set properties</div><div class=\"ql-code-block\">    if (config.Label) { $(theElement_dom_obj.find('Label')[0]).text(config.Label) }</div><div class=\"ql-code-block\">    if (config.Type) { $(theElement_dom_obj.find('Type')[0]).text(config.Type) }</div><div class=\"ql-code-block\">    if (config.Container) { $(theElement_dom_obj.find('Container')[0]).text(config.Container) }</div><div class=\"ql-code-block\">    if (config.ID) { $(theElement_dom_obj.find('ID')[0]).text(config.ID) }</div><div class=\"ql-code-block\">    if (config.CreatedOn) { $(theElement_dom_obj.find('CreatedOn')[0]).text(config.CreatedOn) }</div><div class=\"ql-code-block\">    if (config.ModifiedOn) { $(theElement_dom_obj.find('ModifiedOn')[0]).text(config.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config.ModifiedBy) { $(theElement_dom_obj.find('ModifiedBy')[0]).text(config.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config.ModifiedByEGID) { $(theElement_dom_obj.find('ModifiedByEGID')[0]).text(config.ModifiedByEGID) }</div><div class=\"ql-code-block\">    if (config.ModifiedByEGVer) { $(theElement_dom_obj.find('ModifiedByEGVer')[0]).text(config.ModifiedByEGVer) }</div><div class=\"ql-code-block\">    if (config.HasSerializationError) { $(theElement_dom_obj.find('HasSerializationError')[0]).text(config.HasSerializationError) }</div><div class=\"ql-code-block\">    if (config.InputIDs) { $(theElement_dom_obj.find('InputIDs')[0]).text(config.InputIDs) }</div><div class=\"ql-code-block\">    if (config.ModifiedBy) { $(theElement_dom_obj.find('ModifiedBy')[0]).text(config.ModifiedBy) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return theElement_dom_obj</div><div class=\"ql-code-block\">}; //define_element</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY12948b46-d148-4dc4-9805-962938201efd","name":"substeps","custparents":[{"idx":"MY08c7c214-30b2-495c-b6a3-9eb3142c6c12"}],"children":[{"idx":"44043051-8154-4983-a5c5-4afe7322305e","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MY12948b46-d148-4dc4-9805-962938201efd"}],"children":[{"idx":"d228b883-182c-49ad-a2c6-72676d938640","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"44043051-8154-4983-a5c5-4afe7322305e"}],"children":[{"idx":"712759ec-2dbb-497d-b7e6-b3ff6ea5ad5a","name":"3. config components","custparents":[{"idx":"d228b883-182c-49ad-a2c6-72676d938640"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}],"oldparentidx":"MY12948b46-d148-4dc4-9805-962938201efd"}]}},{"idx":"MY02ad5ced-ca72-4ee1-bb76-45058166710f","name":"make_egtreenode()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY8dbaa625-71ae-4360-8749-1b447c200d74"},{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MY58b15f4b-f05a-4b28-b51b-70783d13f15d","name":"make_dna_component()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY1373b30a-8a32-44b8-8546-844299db7547"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make task_dna (to indicate the location of the shortcut to an external SAS program )</div><div class=\"ql-code-block\">async function make_dna_component(config) {</div><div class=\"ql-code-block\">    //1. load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z03_dna_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line104', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //2. cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //3. set the DNA contents (for task shortcut to external .sas files)</div><div class=\"ql-code-block\">    if (config.DNA) {// else if config.DNA is defined, set the .name and .fullpath. These are manually configured tasks (shortcuts to external .sas file)</div><div class=\"ql-code-block\">        if (config.DNA.Name) { $(component_dom_obj.find('Name')[0]).text(config.DNA.Name) }</div><div class=\"ql-code-block\">        if (config.DNA.FullPath) { $(component_dom_obj.find('FullPath')[0]).text(config.DNA.FullPath) }</div><div class=\"ql-code-block\">    } //if (config.html)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // console.log('line276', component_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">}; // async function make_dna_component</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MYabf9a446-6ac3-48f7-a71e-b624dd127b41","name":"substeps","custparents":[{"idx":"MY58b15f4b-f05a-4b28-b51b-70783d13f15d"}],"children":[{"idx":"1cd6ecfe-1363-4406-911b-e1cfa997bc6d","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MYabf9a446-6ac3-48f7-a71e-b624dd127b41"},{"idx":"5daf8304-0e7c-403c-b4b4-26390a614810"}],"children":[{"idx":"de293989-2603-4acc-ad77-2e937c6e64a9","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"1cd6ecfe-1363-4406-911b-e1cfa997bc6d"}],"children":[{"idx":"b51c0bfe-c7b3-4ff0-aca5-6d6aff260690","name":"3. config components","custparents":[{"idx":"de293989-2603-4acc-ad77-2e937c6e64a9"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"MYcc22fe9d-7d43-412f-bdef-eb75a384609e","name":".DNA","custparents":[{"idx":"b51c0bfe-c7b3-4ff0-aca5-6d6aff260690"}],"children":[{"idx":"MYc082c4e8-bbf1-44c2-bae7-eaed11a8ff3c","name":".Name","custparents":[{"idx":"MYcc22fe9d-7d43-412f-bdef-eb75a384609e"}]},{"idx":"MY432caad8-52d1-46bd-a191-412c9eb5ddbb","name":".FullPath","custparents":[{"idx":"MYcc22fe9d-7d43-412f-bdef-eb75a384609e"}]}]}],"collapsed":1}]}]}]}},{"idx":"MYd47e81db-66b0-4c34-95c4-950a07a640ce","name":"make_dna_component()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MYa6a5fbd0-adff-4c6a-bc24-920a1cade694"}],"NodeDescription":"<p>///t</p><p>Get the outerHTML, and replace &lt;&gt; with ampersand symbols.</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make DNA HTML</div><div class=\"ql-code-block\">//Note: unlike other components, the DNA part should be inserted as HTML (not textcontent) to ProjectCollection.Elements.Element(of the task).CodeTask.DNA</div><div class=\"ql-code-block\">function make_dna_html(dna_dom_obj) {</div><div class=\"ql-code-block\">    // Not appended as DOM objects. Ha! for this confusion, we should award a medal to the genius who made it that way! </div><div class=\"ql-code-block\">    // 2.1 get the outerHTML of task_element_codetask_dna_dna_doms_obj</div><div class=\"ql-code-block\">    let dna_outerHTMLstr = dna_dom_obj.prop('outerHTML')</div><div class=\"ql-code-block\">    // console.log('line307',dns_outerHTML)</div><div class=\"ql-code-block\">    // 2.2 lots of work around here</div><div class=\"ql-code-block\">    // 2.2.1, use back the original tag names (e.g., use back DNA instead of dna)</div><div class=\"ql-code-block\">    let dna_tags_dict = { 'dna': 'DNA', 'type': 'Type', 'name': 'Name', 'version': 'Version', 'assembly': 'Assembly', 'factory': 'Factory', 'fullpath': 'FullPath' }</div><div class=\"ql-code-block\">    Object.keys(dna_tags_dict).forEach(key =&gt; {</div><div class=\"ql-code-block\">        let originaltag = dna_tags_dict[key]</div><div class=\"ql-code-block\">        dna_outerHTMLstr = dna_outerHTMLstr.replace('&lt;' + key + '&gt;', '&amp;lt;' + originaltag + '&amp;gt;')</div><div class=\"ql-code-block\">        dna_outerHTMLstr = dna_outerHTMLstr.replace('&lt;/' + key + '&gt;', '&amp;lt;/' + originaltag + '&amp;gt;')</div><div class=\"ql-code-block\">        dna_outerHTMLstr = dna_outerHTMLstr.replace('&lt;' + key + ' /&gt;', '&amp;lt;' + originaltag + ' /&amp;gt;')</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\">    // console.log('line316', dna_outerHTMLstr)</div><div class=\"ql-code-block\">    return dna_outerHTMLstr</div><div class=\"ql-code-block\">}; // function make_dna_html</div></div><p>t///</p>"},{"idx":"MY787df4df-aed9-4aed-ad50-b35070a5d8dd","name":"make_taskgraphic _component()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//make task_taskgraphic</div><div class=\"ql-code-block\">async function make_taskgraphic_component(config) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z04_taskgraphic_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line57', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config.ID) { $(component_dom_obj.find('ID')[0]).text(config.ID) }</div><div class=\"ql-code-block\">    if (config.Label) { $(component_dom_obj.find('Label')[0]).text(config.Label) }</div><div class=\"ql-code-block\">    if (config.Element) { $(component_dom_obj.find('Element')[0]).text(config.Element) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config.PosX) { $(component_dom_obj.find('PosX')[0]).text(config.PosX) }</div><div class=\"ql-code-block\">    if (config.PosY) { $(component_dom_obj.find('PosY')[0]).text(config.PosY) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_taskgraphic_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"a74740cb-fa82-46c0-91e8-7add9e11963a","name":"substeps","custparents":[{"idx":"MY787df4df-aed9-4aed-ad50-b35070a5d8dd"}],"children":[{"idx":"211e99d1-6bfe-43af-adeb-aced0f7896fb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"a74740cb-fa82-46c0-91e8-7add9e11963a"}],"children":[{"idx":"0ff518c4-cb23-4572-8313-ccc062af1378","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"211e99d1-6bfe-43af-adeb-aced0f7896fb"}],"children":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed","name":"3. config components","custparents":[{"idx":"0ff518c4-cb23-4572-8313-ccc062af1378"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"MY4a48fcd7-621d-44b4-a529-d2de024084ff","name":".ID (of the TaskGraphic)","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MY92b0c763-16dc-44a2-bccb-9c34ada0fe82","name":".Label","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MYa39b0bee-bfa9-4cf2-9f41-e63c44390089","name":".Element (ID of the task)","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MY2b0de1cd-f607-4578-952a-6f846f53200b","name":".PosX","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MY895dedfd-b436-4986-8534-3445bfde2796","name":".PosY","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]}],"collapsed":1}]}]}]},"oldparentidx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"72de35a4-82ec-469c-9246-e6f18db4d6ab","name":"make_notegraphic _component()","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//make task_taskgraphic</div><div class=\"ql-code-block\">async function make_taskgraphic_component(config) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z04_taskgraphic_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line57', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config.ID) { $(component_dom_obj.find('ID')[0]).text(config.ID) }</div><div class=\"ql-code-block\">    if (config.Label) { $(component_dom_obj.find('Label')[0]).text(config.Label) }</div><div class=\"ql-code-block\">    if (config.Element) { $(component_dom_obj.find('Element')[0]).text(config.Element) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config.PosX) { $(component_dom_obj.find('PosX')[0]).text(config.PosX) }</div><div class=\"ql-code-block\">    if (config.PosY) { $(component_dom_obj.find('PosY')[0]).text(config.PosY) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_taskgraphic_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"a74740cb-fa82-46c0-91e8-7add9e11963a","name":"substeps","custparents":[{"idx":"MY787df4df-aed9-4aed-ad50-b35070a5d8dd"}],"children":[{"idx":"211e99d1-6bfe-43af-adeb-aced0f7896fb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"a74740cb-fa82-46c0-91e8-7add9e11963a"}],"children":[{"idx":"0ff518c4-cb23-4572-8313-ccc062af1378","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"211e99d1-6bfe-43af-adeb-aced0f7896fb"}],"children":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed","name":"3. config components","custparents":[{"idx":"0ff518c4-cb23-4572-8313-ccc062af1378"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"MY4a48fcd7-621d-44b4-a529-d2de024084ff","name":".ID (of the TaskGraphic)","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MY92b0c763-16dc-44a2-bccb-9c34ada0fe82","name":".Label","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MYa39b0bee-bfa9-4cf2-9f41-e63c44390089","name":".Element (ID of the task)","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MY2b0de1cd-f607-4578-952a-6f846f53200b","name":".PosX","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MY895dedfd-b436-4986-8534-3445bfde2796","name":".PosY","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MYfd60cd05-6ed5-4837-b68c-4c706128a8fe","name":".WidthExpanded","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]},{"idx":"MY980c6fd4-f8ca-4d7c-817d-27c1f6d9e898","name":".HeightExpanded","custparents":[{"idx":"b526460a-ff16-45aa-9615-11b87debf6ed"}]}],"collapsed":1}]}]}]}},{"idx":"MYff1c0c0d-8b44-4227-9d0e-1286a0f179aa","name":"PFD components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY2f09b6c6-490a-4c4d-a5eb-f6896daf4323"}],"children":[{"idx":"337a3f45-88c0-4296-a82a-ded679775e9b","name":"config_pfd_function()","custparents":[{"idx":"MYff1c0c0d-8b44-4227-9d0e-1286a0f179aa"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\" data-language=\"plain\">// configuration for the pfd components</div><div class=\"ql-code-block\" data-language=\"plain\">async function config_pfd_function(config_project, pfd_input) {</div><div class=\"ql-code-block\" data-language=\"plain\">    let config_pfd = {}</div><div class=\"ql-code-block\" data-language=\"plain\">    // config the elemment tags (properties of the pfd)</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element = {}</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.Label = pfd_input.Label // 'PFD1'</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.Type = 'CONTAINER'</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.Container = config_project.Element.ID</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.ID = pfd_input.ID</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.CreatedOn = config_project.Element.CreatedOn</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.ModifiedOn = config_project.Element.ModifiedOn</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.ModifiedBy = config_project.Element.ModifiedBy</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Element.ModifiedByEGID = config_project.Element.ModifiedByEGID</div><div class=\"ql-code-block\" data-language=\"plain\">    //config the egtreenode tags</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.EGTreeNode = {}</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.EGTreeNode.NodeType = 'NODETYPE_ELEMENT'</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.EGTreeNode.ElementID = config_pfd.Element.ID</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.EGTreeNode.Expanded = 'True'</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.EGTreeNode.Label = config_pfd.Element.Label</div><div class=\"ql-code-block\" data-language=\"plain\">    //config the properties tags</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Properties = {}</div><div class=\"ql-code-block\" data-language=\"plain\">    config_pfd.Properties.ID = config_pfd.Element.ID</div><div class=\"ql-code-block\" data-language=\"plain\">    return config_pfd</div><div class=\"ql-code-block\" data-language=\"plain\">};//async function config_pdf_function</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"7dd319b8-6e09-49dc-9bb1-784d3ef38f5e","name":".Element","custparents":[{"idx":"337a3f45-88c0-4296-a82a-ded679775e9b"}],"children":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de","name":".Element.Element","custparents":[{"idx":"7dd319b8-6e09-49dc-9bb1-784d3ef38f5e"}],"children":[{"idx":"9aa6212d-e0d2-49de-98a2-5fc4599439dc","name":".ID","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"742ede43-9493-4ac6-9514-af3fec183212","name":".Label","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"d363aaed-411c-4d0d-b738-23e04f925e0e","name":".Type","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"6f48c7b7-0e3a-4da0-885e-b784d611c0cf","name":".Container","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"9f1b2a54-0e38-4f21-8a92-700f78c2665c","name":".CreatedOn","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"446eaa95-0e09-4a25-9c42-d276309c4e16","name":".ModifiedOn","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"80f2e767-db13-4e43-9157-d0a29e955f4f","name":".ModifiedBy","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]},{"idx":"ddb5e539-3ba3-45b8-a5b9-1e950cd556e7","name":".ModifiedByEGID","custparents":[{"idx":"3480ff02-130d-4ded-bb03-a8388331b3de"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1}],"collapsed":1},{"idx":"7693aec8-6a4b-4cf7-8924-04fe049f21dd","name":".EGTreeNode","custparents":[{"idx":"337a3f45-88c0-4296-a82a-ded679775e9b"}],"children":[{"idx":"1c32858c-cfd2-4292-83db-ce21bd69fa84","name":".NodeType","custparents":[{"idx":"7693aec8-6a4b-4cf7-8924-04fe049f21dd"}]},{"idx":"e381ea4c-9532-4b71-9af3-348684eb59b8","name":".ElementID","custparents":[{"idx":"7693aec8-6a4b-4cf7-8924-04fe049f21dd"}]},{"idx":"604231b2-36c9-46df-8211-f9ad4bc40d57","name":".Label","custparents":[{"idx":"7693aec8-6a4b-4cf7-8924-04fe049f21dd"}]},{"idx":"MY868904e1-d78b-448d-a7ed-5af85a191f23","name":".Expanded","custparents":[{"idx":"7693aec8-6a4b-4cf7-8924-04fe049f21dd"}]}],"collapsed":1},{"idx":"9a3a0fec-30e0-4e9a-ae85-a4ab431198b5","name":".Properties.ID","custparents":[{"idx":"337a3f45-88c0-4296-a82a-ded679775e9b"}]}]},{"idx":"aabbea97-6636-4393-a6b7-13c9c906e6b0","name":"make_append_ pfd_component()","custparents":[{"idx":"MYff1c0c0d-8b44-4227-9d0e-1286a0f179aa"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and appennd components for pfd</div><div class=\"ql-code-block\">/* add a process flow (PFD)</div><div class=\"ql-code-block\">1) within ProjectCollection.Elements,add:</div><div class=\"ql-code-block\">    &lt;Element Type=\"SAS.EG.ProjectElements.PFD\"&gt;</div><div class=\"ql-code-block\">        &lt;Element&gt;...&lt;/Element&gt;</div><div class=\"ql-code-block\">        &lt;ContainerElement&gt;...&lt;/ContainerElement&gt;</div><div class=\"ql-code-block\">        &lt;PFD /&gt;</div><div class=\"ql-code-block\">    &lt;/Element&gt;</div><div class=\"ql-code-block\">2) within ProjectCollection.External_Objects.ProjectTreeView, add:</div><div class=\"ql-code-block\">        &lt;EGTreeNode&gt;...&lt;/EGTreeNode&gt;</div><div class=\"ql-code-block\">3) within ProjectCollection.External_Objects.ProcessFlowView.Containers, add:</div><div class=\"ql-code-block\">        &lt;Properties&gt;...&lt;/Properties&gt;</div><div class=\"ql-code-block\">*/</div><div class=\"ql-code-block\">async function make_append_pfd_component(doms_obj, config_pfd) {</div><div class=\"ql-code-block\">    // console.log('line461', config_pfd.Element)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // make the PFD component to append to ProjectCollection.Elements</div><div class=\"ql-code-block\">    let component_pfd_dom_obj = await make_pfd_component(config_pfd.Element)</div><div class=\"ql-code-block\">    // console.log('line465', component_pfd_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    // append the PFD to ProjectCollection.Elements</div><div class=\"ql-code-block\">    $(doms_obj.find('Elements')[0]).append(component_pfd_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // add the PFD's ID into ProjectCollection.Containers.ID</div><div class=\"ql-code-block\">    $(doms_obj.find('Containers')[0]).append('&lt;ID&gt;' + config_pfd.Element.ID + '&lt;/ID&gt;')</div><div class=\"ql-code-block\">    // console.log('line477', config_pfd)</div><div class=\"ql-code-block\">    // Note: $(doms_obj.find('Containers').find('ID')[0]).text(config_pfd.Element.ID) is wrong, as it always write the PFD ID into the first ID tag</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // make the egtreenode component to append to ProjectCollection.External_Objects.ProjectTreeView</div><div class=\"ql-code-block\">    let component_pfd_egtreenode_dom_obj = await make_egtreenode(config_pfd.EGTreeNode)</div><div class=\"ql-code-block\">    // append the treenode to ProjectCollection.External_Objects.ProjectTreeView</div><div class=\"ql-code-block\">    $(doms_obj.find('External_Objects').find('ProjectTreeView')[0]).append(component_pfd_egtreenode_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // make the properties component to append to ProjectCollection.External_Objects.ProcessFlowView.Containers </div><div class=\"ql-code-block\">    let component_pfd_properties_dom_obj = await make_processflowview_properties(config_pfd.Properties)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // append it to ProjectCollection.External_Objects.ProcessFlowView.Containers</div><div class=\"ql-code-block\">    $(doms_obj.find('External_Objects').find('ProcessFlowView').find('Containers')[0]).append(component_pfd_properties_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //function make_append_pfd_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"MYc19dcd82-04a2-4f6d-a283-4c8983a05b29","name":"1. make and append PFD's .Element to ProjectCollection.Elements","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"}],"children":[{"idx":"MY5c098139-63f2-4ff7-94f9-2e64fee142f9","name":"2. Add PFD ID into ProjectCollection .Containers.ID","custparents":[{"idx":"MYc19dcd82-04a2-4f6d-a283-4c8983a05b29"}],"children":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4","name":"3. make and append EGTreeNode to ProjectCollection.External_Objects .ProjectTreeView","custparents":[{"idx":"MY5c098139-63f2-4ff7-94f9-2e64fee142f9"}],"children":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e","name":"4. make and append Properties to ProjectCollection.External_Objects. ProcessFlowView .Containers","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"NodeDescription":"<p>///t</p><p>t///</p>","_substeps":{"idx":"MY70b3b093-b9d0-4af2-a8df-210c8b662f30","name":"substeps","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}],"children":[{"idx":"MYdc1d3c42-5e88-46c0-98e8-425b24c7f0e9","name":"1. make the Properties component: make_processflowview_ properties()","custparents":[{"idx":"MY70b3b093-b9d0-4af2-a8df-210c8b662f30"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make properties tag for ProjectCollection.External_Objects.ProcessFlowView.Containers</div><div class=\"ql-code-block\">async function make_processflowview_properties(config) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___c03_pfd_properties_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line147', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\">    if (config.ID) { $(component_dom_obj.find('ID')[0]).text(config.ID) }</div><div class=\"ql-code-block\">    if (config.BackgroundColor) { $(component_dom_obj.find('BackgroundColor')[0]).text(config.BackgroundColor) }</div><div class=\"ql-code-block\">    if (config.Align) { $(component_dom_obj.find('Align')[0]).text(config.Align) }</div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">}; // function make_processflowview_properties</div></div><p>t///</p>","children":[],"_substeps":{"idx":"c4d472da-2db7-49d0-85a1-685135d290da","name":"substeps","custparents":[{"idx":"MYdc1d3c42-5e88-46c0-98e8-425b24c7f0e9"}],"children":[{"idx":"aecde186-3bc7-4116-aafb-706196a50e0c","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"c4d472da-2db7-49d0-85a1-685135d290da"}],"children":[{"idx":"3b7bdd35-403f-4067-90a6-1f00dc5aa03a","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"aecde186-3bc7-4116-aafb-706196a50e0c"}],"children":[{"idx":"a499cc7d-f1bd-4cc9-94e2-0a022b9917b9","name":"3. config components","custparents":[{"idx":"3b7bdd35-403f-4067-90a6-1f00dc5aa03a"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"MYd8e75822-4358-4497-9db5-5d30528a823e","name":".ID","custparents":[{"idx":"a499cc7d-f1bd-4cc9-94e2-0a022b9917b9"}]},{"idx":"MY494cb73b-4b2e-42cf-9d3b-cc49c194b704","name":".BackgroundColor","custparents":[{"idx":"a499cc7d-f1bd-4cc9-94e2-0a022b9917b9"}]},{"idx":"MY51d8db28-6471-4179-a6f1-9f34f2e865e5","name":".Align","custparents":[{"idx":"a499cc7d-f1bd-4cc9-94e2-0a022b9917b9"}]}],"collapsed":1}]}]}]}}]}}],"NodeDescription":"<p>///t</p><p>t///</p>","collapsed":0,"_substeps":{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db","name":"substeps","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"children":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f","name":"1. Make EGTreeNode: make_egtreenode()","custparents":[{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db"}],"children":[{"idx":"MY39a68023-b74c-4d3c-940d-72787dc43c81","name":"2. Append to ProjectColletion .External_Objects .ProjectTreeView","custparents":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}]}]}]}}]}],"_substeps":{"idx":"MY08a55c28-4134-4cf3-97e4-15a831d90a2b","name":"substeps","custparents":[{"idx":"MYc19dcd82-04a2-4f6d-a283-4c8983a05b29"}],"children":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a","name":"1. Element: make_pfd_element_component()","custparents":[{"idx":"MY08a55c28-4134-4cf3-97e4-15a831d90a2b"},{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make a pfd component (to be appended to ProjectCollection.Elements)</div><div class=\"ql-code-block\">async function make_pfd_element_component(config) {</div><div class=\"ql-code-block\">    // console.log('line 527', config)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1a. .element make the pfd element (properties of the pfd)</div><div class=\"ql-code-block\">    let element_pfd_dom_obj = await define_element(config)</div><div class=\"ql-code-block\">    // console.log('line530', element_pfd_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    // make the container element of the pfd, this part is fixed for any PFD obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1b. .container</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___c01_pfd_containers_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line171', thesrcxmlstr)</div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let container_pfd_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1c. .PFD make the default PFD element (the empty PFD element)</div><div class=\"ql-code-block\">    let pfd_pfd_dom_obj = $('&lt;PFD&gt;&lt;/PFD&gt;')</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. assemble the PFD component to be added to ProjectCollection.Elements</div><div class=\"ql-code-block\">    let component_pfd_dom_obj = $('&lt;Element Type=\"SAS.EG.ProjectElements.PFD\"&gt;&lt;/Element&gt;')</div><div class=\"ql-code-block\">    component_pfd_dom_obj.append(element_pfd_dom_obj)</div><div class=\"ql-code-block\">    component_pfd_dom_obj.append(container_pfd_dom_obj)</div><div class=\"ql-code-block\">    component_pfd_dom_obj.append(pfd_pfd_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_pfd_dom_obj</div><div class=\"ql-code-block\">}; // function make_pfd_element_component()</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968","name":"substeps","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"MY6dd60862-6d0e-4f7f-9f04-778395a5c194","name":"1. make sub elements within .Element (for the PFD)","custparents":[{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"},{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"MYf32e9d7d-3fb9-4403-90c1-c4dafb0a802e","name":"2. Assemble the sub elements into .Element (for the PFD)","custparents":[{"idx":"MY6dd60862-6d0e-4f7f-9f04-778395a5c194"}]}],"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"MY6dd60862-6d0e-4f7f-9f04-778395a5c194"}],"children":[{"idx":"MY425bed91-841c-4684-a3df-fba95de0f84e","name":"1a. make .Element.Element: define_element()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"},{"idx":"MYd53ebf74-1ccb-4470-8835-213e32211251","name":"1b. make .Element.Container","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[],"_substeps":{"idx":"MYb7270186-8465-4e0e-ae2f-ca27f507b9ff","name":"substeps","custparents":[{"idx":"MYd53ebf74-1ccb-4470-8835-213e32211251"}],"children":[{"idx":"518f00de-23a4-42da-b2f2-f34a8aa6a1ac","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MYb7270186-8465-4e0e-ae2f-ca27f507b9ff"}],"children":[{"idx":"22ff6a71-70ae-4ffb-a8b7-6c92a854738f","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"518f00de-23a4-42da-b2f2-f34a8aa6a1ac"}],"children":[{"idx":"637778a4-9525-4de9-b619-8bc95864d78e","name":"3. config components","custparents":[{"idx":"22ff6a71-70ae-4ffb-a8b7-6c92a854738f"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}]}],"oldparentidx":"MYd53ebf74-1ccb-4470-8835-213e32211251"}},{"idx":"MY08c21afe-2172-43a5-8245-cf58af8a7c28","name":"1c. make .Element.PFD","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}]}]}}]}}]}}]}}],"collapsed":1},{"idx":"MY27fe40de-fbaa-4890-8270-a369c0b9d7f9","name":"EGTreeNode of ProgramsFolder","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MYffdcbac8-02fe-42d1-afa9-17c4fabcc3fb"}],"children":[{"idx":"MY96537ac5-4db5-432d-9cb2-f2ef80945994","name":"config_programs_function()","custparents":[{"idx":"MY27fe40de-fbaa-4890-8270-a369c0b9d7f9"},{"idx":"MY762de35d-afe3-48eb-b5cd-399d0067c929"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration of the EGTreeNode for programs. The EGTreeNode is to be added to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)</div><div class=\"ql-code-block\">async function config_programs_function(config_pfd) {</div><div class=\"ql-code-block\">    // for the progerams_EGTreeNode, the config_pfd input is not used (no need to set PFD ID there)</div><div class=\"ql-code-block\">    // however, the input is kept to be consistent with configuaration functions of other components</div><div class=\"ql-code-block\">    let config_programs = {}</div><div class=\"ql-code-block\">    config_programs.NodeType = 'NODETYPE_PROGRAMFOLDER'</div><div class=\"ql-code-block\">    config_programs.ElementID = ''</div><div class=\"ql-code-block\">    config_programs.Expanded = 'True'</div><div class=\"ql-code-block\">    config_programs.Label = 'Programs'</div><div class=\"ql-code-block\">    return config_programs</div><div class=\"ql-code-block\">};//config_egtreenode_programs_function</div></div><p>t///</p>","children":[{"idx":"c04b01e0-b1e3-4a07-9010-1c2ece3f8cd2","name":".EGTreeNode","custparents":[{"idx":"MY96537ac5-4db5-432d-9cb2-f2ef80945994"},{"idx":"MYcb89bc4f-3c05-4fc8-9d54-67f665d9101b"}],"children":[{"idx":"edc13097-238e-4ef1-8425-604322ec6475","name":".NodeType","custparents":[{"idx":"c04b01e0-b1e3-4a07-9010-1c2ece3f8cd2"}]},{"idx":"1b4c9e45-0c7b-43f5-a5f6-5b228f689a73","name":".ElementID","custparents":[{"idx":"c04b01e0-b1e3-4a07-9010-1c2ece3f8cd2"}]},{"idx":"8eaf667a-7079-4376-abed-88ecd45999d1","name":".Label","custparents":[{"idx":"c04b01e0-b1e3-4a07-9010-1c2ece3f8cd2"}]}],"collapsed":1}],"collapsed":1},{"idx":"MYa4d1385c-59dd-429f-8dc5-933219a65e2e","name":"make_append_egtreenode_programs()","custparents":[{"idx":"MY27fe40de-fbaa-4890-8270-a369c0b9d7f9"},{"idx":"MYb4ca3e73-49f1-4119-9dfb-164ceb005fc4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the EGTreeNode that is to be appended to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)</div><div class=\"ql-code-block\">async function make_append_egtreenode_programs(doms_obj, config_program_egtreenode, config_pfd) {</div><div class=\"ql-code-block\">    // console.log('line221', config_pfd)</div><div class=\"ql-code-block\">    //1. make the EGTreeNode component</div><div class=\"ql-code-block\">    let component_egtreenode_programs_dom_obj = await make_egtreenode(config_program_egtreenode)</div><div class=\"ql-code-block\">    // console.log('line224', component_egtreenode_programs_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //2. append the EGTreeNode to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)</div><div class=\"ql-code-block\">    // find all EGTreeNode Elements under ProjectTreeView</div><div class=\"ql-code-block\">    let egtreenode_pfd_doms_obj = $(doms_obj.find('External_Objects').find('EGTreeNode'))</div><div class=\"ql-code-block\">    // loop for each of such EGTreeNode elements, and identify the one with the same PFD ID as the PFD ID specified in config_pfd</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; egtreenode_pfd_doms_obj.length; i++) {</div><div class=\"ql-code-block\">        let the_egtreenode_pfd_dom_obj = $(egtreenode_pfd_doms_obj[i])</div><div class=\"ql-code-block\">        // get the textcontent of .ElementID tag of the_egtreenode_pfd_dom_obj</div><div class=\"ql-code-block\">        let the_pfd_elementid_dom_obj = $(the_egtreenode_pfd_dom_obj.find('ElementID')[0])</div><div class=\"ql-code-block\">        let the_pfd_id = the_pfd_elementid_dom_obj.text()</div><div class=\"ql-code-block\">        // compare the_pfd_id with the pfd id in config_pfd (config_pfd.Element.ID)</div><div class=\"ql-code-block\">        if (the_pfd_id &amp;&amp; the_pfd_id === config_pfd.Element.ID) {</div><div class=\"ql-code-block\">            // append the programs EGTreeNode to the specified PFD's EGTreeNode</div><div class=\"ql-code-block\">            the_egtreenode_pfd_dom_obj.append(component_egtreenode_programs_dom_obj)</div><div class=\"ql-code-block\">            break</div><div class=\"ql-code-block\">        } // if (the_pfd_id &amp;&amp; the_pfd_id === config_pfd.Element.ID )</div><div class=\"ql-code-block\">    } // for (let i=0; i &lt; egtreenode_pfd_doms_obj.length; i++)</div><div class=\"ql-code-block\">    // console.log('line65',egtreenode_pfd_doms_obj )</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_egtreenode_programs</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY521b7d55-bc72-4d2f-aa72-827f13dd430f","name":"substeps","custparents":[{"idx":"MYa4d1385c-59dd-429f-8dc5-933219a65e2e"}],"children":[{"idx":"MY8dbaa625-71ae-4360-8749-1b447c200d74","name":"1. make EGTreeNode for a program: make_egtreenode()","custparents":[{"idx":"MY521b7d55-bc72-4d2f-aa72-827f13dd430f"}],"children":[{"idx":"MY82e5b704-2ad4-483b-830d-8d634c6ae107","name":"2. append the Program EGTreeNode to the EGTreeNode of the parent PFD of ","custparents":[{"idx":"MY8dbaa625-71ae-4360-8749-1b447c200d74"}]}],"collapsed":0}],"collapsed":0}}],"collapsed":1},{"idx":"MYcf2f808a-dd62-403a-be58-80de2188a570","name":"Task Components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MYfbd21bcc-4d8b-4470-9897-a080a654cf2c"}],"children":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53","name":"config_task_function()","custparents":[{"idx":"MYcf2f808a-dd62-403a-be58-80de2188a570"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration of the task components</div><div class=\"ql-code-block\">async function config_task_function(config_pfd, task_input) {</div><div class=\"ql-code-block\">    let config_task = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1a. configuration for the element properties for the code task's Element component (the properties of the task)</div><div class=\"ql-code-block\">    config_task.Element = {}</div><div class=\"ql-code-block\">    config_task.Element.Label = task_input.Element.Label//'PFD1_p1'</div><div class=\"ql-code-block\">    config_task.Element.Type = 'TASK'</div><div class=\"ql-code-block\">    // console.log('line811',config_pfd)</div><div class=\"ql-code-block\">    config_task.Element.Container = config_pfd.Element.ID</div><div class=\"ql-code-block\">    config_task.Element.ID = task_input.Element.ID</div><div class=\"ql-code-block\">    config_task.Element.CreatedOn = config_pfd.Element.CreatedOn</div><div class=\"ql-code-block\">    config_task.Element.ModifiedOn = config_pfd.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_task.Element.ModifiedBy = config_pfd.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_task.Element.ModifiedByEGID = config_pfd.Element.ModifiedByEGID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1b. configuration for the SubmitableElement components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the curreant task)</div><div class=\"ql-code-block\">    // there is nothing to change from the default config</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1c. configuration for the CodeTask components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the curreant task)</div><div class=\"ql-code-block\">    // For task as shortcut to external sas files, additional &lt;DNA&gt; components should be appended to ProjectCollection.Elements.Element(PFD).Element(element of the curreant task).CodeTask.DNA</div><div class=\"ql-code-block\">    if (task_input.Embedded &amp;&amp; task_input.Embedded === 'False' &amp;&amp; task_input.DNA) {</div><div class=\"ql-code-block\">        config_task.Embedded = task_input.Embedded</div><div class=\"ql-code-block\">        config_task.CodeTask = {}</div><div class=\"ql-code-block\">        config_task.CodeTask.DNA = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // if the config contains DNA.html, use it directly. These are copied from a v8 epg file</div><div class=\"ql-code-block\">        if (task_input.DNA.html) {</div><div class=\"ql-code-block\">            config_task.CodeTask.DNA.html = task_input.DNA.html</div><div class=\"ql-code-block\">        } else if (task_input.DNA.FullPath) {</div><div class=\"ql-code-block\">            // if there is no DNA.html but DNA.FullPath, set DNA.Name and .FullPath. These are manually configured tasks</div><div class=\"ql-code-block\">            config_task.CodeTask.DNA.DNA = {}</div><div class=\"ql-code-block\">            // from the fullpath, get the filename (the part after the last \\)</div><div class=\"ql-code-block\">            // console.log('line487', task_input.DNA.FullPath)</div><div class=\"ql-code-block\">            let fullpath = task_input.DNA.FullPath</div><div class=\"ql-code-block\">            fullpath = JSON.stringify(fullpath) // to ensure that the single backlash are replaced by \\\\</div><div class=\"ql-code-block\">            // the stringify adds additional quotes around the path, the string is now like '\"C:\\\\...\"'</div><div class=\"ql-code-block\">            // the following is to strip these additional quotes</div><div class=\"ql-code-block\">            if (fullpath.substr(0, 1) === '\"') { fullpath = fullpath.substring(1) }</div><div class=\"ql-code-block\">            if (fullpath.substr(fullpath.length - 1, 1) === '\"') { fullpath = fullpath.substr(0, fullpath.length - 1) }</div><div class=\"ql-code-block\">            // console.log('line489', fullpath)</div><div class=\"ql-code-block\">            let startpos = fullpath.lastIndexOf('\\\\')</div><div class=\"ql-code-block\">            let filename = fullpath.substr(startpos + 1)</div><div class=\"ql-code-block\">            // console.log('line492', filename)</div><div class=\"ql-code-block\">            config_task.CodeTask.DNA.DNA.Name = filename</div><div class=\"ql-code-block\">            config_task.CodeTask.DNA.DNA.FullPath = fullpath</div><div class=\"ql-code-block\">        }// if(task_input.DNA.html) else ...</div><div class=\"ql-code-block\">        // console.log('line1474', config_task.CodeTask.DNA)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">        // also, set config_task.CodeTask.Embedded to False. That tiny change controls whether the task is</div><div class=\"ql-code-block\">        // a shortcut, or with SAS code embedded in the current EGP</div><div class=\"ql-code-block\">        config_task.CodeTask.Embedded = task_input.Embedded</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    } //  if (task_input.Embedded &amp;&amp; task_input.Embedded ...)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //2. configuration for the process components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the current task)</div><div class=\"ql-code-block\">    config_task.Process = {}</div><div class=\"ql-code-block\">    config_task.Process.Element = {}</div><div class=\"ql-code-block\">    config_task.Process.Element.ID = config_task.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //3. configuration for the EGTreeNode components that are to be added to ProjectCollection.External_Objects.EGTreeNode(of the task's parent PFD).EGTreeNode(for wrapping all programs/tasks)</div><div class=\"ql-code-block\">    config_task.EGTreeNode = {}</div><div class=\"ql-code-block\">    config_task.EGTreeNode.NodeType = 'NODETYPE_ELEMENT'</div><div class=\"ql-code-block\">    config_task.EGTreeNode.ElementID = config_task.Element.ID</div><div class=\"ql-code-block\">    config_task.EGTreeNode.Label = config_task.Element.Label</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //4. for the TaskGraphic components that are to be added to ProjectColletion.External_Objects.ProcessFlowView.Graphics</div><div class=\"ql-code-block\">    config_task.TaskGraphic = {}</div><div class=\"ql-code-block\">    // the TaskGraphic ID is different from the PFD or CodeTask ID (16-bit random strings. A 16-bit string is not a true 32-bit GUID), (it is a true 32 bit GUID)</div><div class=\"ql-code-block\">    config_task.TaskGraphic.ID = task_input.TaskGraphic.ID</div><div class=\"ql-code-block\">    config_task.TaskGraphic.Label = config_task.Element.Label</div><div class=\"ql-code-block\">    config_task.TaskGraphic.Element = config_task.Element.ID</div><div class=\"ql-code-block\">    if (task_input.TaskGraphic.PosX) { config_task.TaskGraphic.PosX = task_input.TaskGraphic.PosX }</div><div class=\"ql-code-block\">    if (task_input.TaskGraphic.PosY) { config_task.TaskGraphic.PosY = task_input.TaskGraphic.PosY }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 5. SAS code of the task (if the task code is specified, i.e., the task is not shortcut to an external sas file)</div><div class=\"ql-code-block\">    if (task_input.code) {</div><div class=\"ql-code-block\">        config_task.code = task_input.code</div><div class=\"ql-code-block\">    } //if (task_input.code)   </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return config_task</div><div class=\"ql-code-block\">}; //async function config_task_function</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"MY739b8d77-af24-4000-b499-523123662ec6","name":".Element","custparents":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53"}],"children":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238","name":".Element.Element","custparents":[{"idx":"MY739b8d77-af24-4000-b499-523123662ec6"}],"children":[{"idx":"MY33522b00-fdd9-4f83-beca-ce1e40575f73","name":".ID","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MYfc9dc461-dd80-4ea6-82a7-b3df97a73af8","name":".Label","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MYedd03836-3762-4e29-8b54-6559e4284524","name":".Type","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MYb79e26a3-2b04-4af0-ada7-83d0d7f8381a","name":".Container","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MYd547c310-b035-4712-afcc-d9b58696c15f","name":".CreatedOn","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MY9d9b5663-7b6c-4f3a-ae5c-81e1fb064e04","name":".ModifiedOn","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MYf77fc583-08f9-43ce-95cc-03ebac7ec7ed","name":".ModifiedBy","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]},{"idx":"MY21a04f9d-be46-4a6f-bd34-624744a23cb0","name":".ModifiedByEGID","custparents":[{"idx":"MY831400c8-6ff2-4b14-8cb7-f3eac1a7b238"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"MY2465cb5f-e5e4-4aa4-ad0d-9fede45451cf","name":".Element.CodeTask","custparents":[{"idx":"MY739b8d77-af24-4000-b499-523123662ec6"}],"children":[{"idx":"MYeee32554-464e-46bb-917c-e53dd5aa3484","name":".CodeTask.DNA","custparents":[{"idx":"MY2465cb5f-e5e4-4aa4-ad0d-9fede45451cf"}],"children":[{"idx":"MY13a14a7a-0f2e-454e-8025-64cb5d453aaa","name":"config by task_input.DNA.html (copy from egp v8 files)","custparents":[{"idx":"MYeee32554-464e-46bb-917c-e53dd5aa3484"}]},{"idx":"MY182227e1-9f94-4c6c-99a9-506161a97819","name":"by task_input.DNA.FullPath (manually creating EGP v7 files)","custparents":[{"idx":"MYeee32554-464e-46bb-917c-e53dd5aa3484"}]}],"collapsed":1},{"idx":"MYa2973b82-6310-4d44-9100-7636c3f5d4e1","name":".CodeTask.Embedded","custparents":[{"idx":"MY2465cb5f-e5e4-4aa4-ad0d-9fede45451cf"}]}],"collapsed":1}],"collapsed":1},{"idx":"MYb3d2c33b-072b-471a-b380-255e3e25cfa1","name":"ProjectCollection.Elements .Element (of parent PFD) .PFD.Process .Element.ID","custparents":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53"}]},{"idx":"MY978343e0-fc6d-40ca-ba6b-35e7aee9aee1","name":".EGTreeNode","custparents":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53"}],"children":[{"idx":"MY9da24e62-2507-4bf8-9693-f870a0f66d9b","name":".NodeType","custparents":[{"idx":"MY978343e0-fc6d-40ca-ba6b-35e7aee9aee1"}]},{"idx":"MY23e5ec7a-bfce-4c40-8b40-a75077be2744","name":".ElementID","custparents":[{"idx":"MY978343e0-fc6d-40ca-ba6b-35e7aee9aee1"}]},{"idx":"MY4e703a6b-bc1d-4bd9-84b3-083d376ab7ab","name":".Label","custparents":[{"idx":"MY978343e0-fc6d-40ca-ba6b-35e7aee9aee1"}]}],"collapsed":1,"oldparentidx":"MYf7519263-2e57-4191-a98f-96341f03fa53"},{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a","name":".TaskGraphic","custparents":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53"}],"children":[{"idx":"MYf723f924-5610-4c88-b618-58a0b270d2aa","name":".ID","custparents":[{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a"}]},{"idx":"MYa1317260-75db-4d04-a2cf-e7615b7cc106","name":".Label","custparents":[{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a"}]},{"idx":"MY91caac39-14f3-4b79-a129-76f0ec8b65c4","name":".Element","custparents":[{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a"}]},{"idx":"MY20b33108-5cb4-42d7-8ee9-512ec39dc29c","name":".PosX","custparents":[{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a"}]},{"idx":"MYe3af1ea3-40f7-4c1a-a6a3-14d07a841325","name":".PosY","custparents":[{"idx":"MYb79d0845-2dd2-47a2-b730-c8d26131ee8a"}]}],"collapsed":1},{"idx":"MY7aad82ec-e0bb-41f5-bcb8-6463776b628b","name":".code (manually input SAS code)","custparents":[{"idx":"MYf7519263-2e57-4191-a98f-96341f03fa53"}]}],"oldparentidx":"MYcf2f808a-dd62-403a-be58-80de2188a570"},{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4","name":"make_append_task_component()","custparents":[{"idx":"MYcf2f808a-dd62-403a-be58-80de2188a570"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append task related components</div><div class=\"ql-code-block\">async function make_append_task_component(doms_obj, config_task, targetzip_v7) {</div><div class=\"ql-code-block\">    // 1. within a PFD component's PFD tag (ProjectCollection.Elements.Element(PFD).PFD), add a process component with the taskID</div><div class=\"ql-code-block\">    doms_obj = await make_append_task_process_component(doms_obj, config_task)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. within ProjectCollection.Elements, add a element tag for task (in which multiple tags are encompassed)</div><div class=\"ql-code-block\">    doms_obj = await make_append_task_element_component(doms_obj, config_task)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3. within ProjectColletion.External_Objects.ProjectTreeView.EGTreeNode(for PFD1).EGTreeNode(for wrapping all programs/tasks), add a EGTreeNode component</div><div class=\"ql-code-block\">    doms_obj = await make_append_task_egtreenode_component(doms_obj, config_task)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 4. within ProjectColletion.External_Objects.ProcessFlowView.Graphics, add a TaskGraphic component</div><div class=\"ql-code-block\">    doms_obj = await make_append_task_taskgraphic_component(doms_obj, config_task)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 5. add the program text and insert into the egp zip (only do it when the config_task.code is not null, e.g., the task is not a shortcut to an exteranl sas program)</div><div class=\"ql-code-block\">    if (config_task.code &amp;&amp; config_task.code !== '') {</div><div class=\"ql-code-block\">        let task_sascodestr = config_task.code</div><div class=\"ql-code-block\">        // Note: the sas code file (code.sas) is of utf-8 encoding. Also, the task xml (EGTask-&lt;...id...&gt;.xml) is also of utf-8. These are different from the project.xml (project.xml is of utf16le encoding)</div><div class=\"ql-code-block\">        targetzip_v7.addFile(config_task.Element.ID + '\\\\code.sas', Buffer.from(task_sascodestr, \"utf-8\"))</div><div class=\"ql-code-block\">    } // config_task.code</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_append_task_element_component</div></div><p>t///</p>","children":[],"oldparentidx":"MYcf2f808a-dd62-403a-be58-80de2188a570","_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea","name":"1. PFD.Process: make_append_ task_process_component()","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"}],"children":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a","name":"2. Element: make_append_task_ element_component()","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4","name":"3. EGTreeNode: make_append_task_ egtreenode_component()","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e","name":"4. TaskGraphic: make_append_task_ taskgraphic_component()","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//within ProjectColletion.External_Objects.ProcessFlowView.Graphics, add a TaskGraphic component</div><div class=\"ql-code-block\">async function make_append_task_taskgraphic_component(doms_obj, config_task) {</div><div class=\"ql-code-block\">    // 1a. make task_taskgraphic</div><div class=\"ql-code-block\">    let task_taskgraphic_dom_obj = await make_taskgraphic_component(config_task.TaskGraphic)</div><div class=\"ql-code-block\">    // console.log('line68', task_taskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1b. append task_taskgraphic components</div><div class=\"ql-code-block\">    // The ProjectColletion.External_Objects.ProcessFlowView.Graphics is not specific by PFD</div><div class=\"ql-code-block\">    // As such, there is no need to loop and find the specific PFD for the task_taskgraphic</div><div class=\"ql-code-block\">    let the_graphic_dom_obj = $(doms_obj.find('External_Objects').find('ProcessFlowView').find('Graphics')[0])</div><div class=\"ql-code-block\">    the_graphic_dom_obj.append(task_taskgraphic_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_task_taskgraphic_component </div></div><p>t///</p>","children":[{"idx":"MY7a9c4a0f-6b49-4b00-973e-002d8b50687e","name":"5. add SAS code file (if embedded: config_task.code has contents)","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}]}],"_substeps":{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3","name":"substeps","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}],"children":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed","name":"1. Make TaskGraphic: make_taskgraphic _component()","custparents":[{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3"}],"children":[{"idx":"MYbf0c9241-e6f0-4b05-bfcf-38501f923172","name":"2. Append to ProjectColletion .External_Objects .ProcessFlowView .Graphics","custparents":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed"}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// within ProjectColletion.External_Objects.ProjectTreeView.EGTreeNode(for PFD1).EGTreeNode(for wrapping all programs/tasks), add a EGTreeNode component</div><div class=\"ql-code-block\">async function make_append_task_egtreenode_component(doms_obj, config_task) {</div><div class=\"ql-code-block\">    // 1. make task_egtreenode_component</div><div class=\"ql-code-block\">    let task_egtreenode_dom_obj = await make_egtreenode(config_task.EGTreeNode)</div><div class=\"ql-code-block\">    // console.log('line69', task_egtreenode_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    // 2. append task_egtreenode_component</div><div class=\"ql-code-block\">    // find the parent PFD's EGTreeNode under Elements ProjectColletion.External_Objects.ProjectTreeView</div><div class=\"ql-code-block\">    let egtreenode_pfd_dom_obj = get_egtreenode_of_pfd_by_pfdid(doms_obj, config_task.Element.Container)</div><div class=\"ql-code-block\">    // find the EGTreeNode for Programs within the parent PFD's EGTreeNode</div><div class=\"ql-code-block\">    let the_egtreenode_program_dom_obj = get_egtreenode_of_program_in_a_egtreenode_of_pfd(egtreenode_pfd_dom_obj)</div><div class=\"ql-code-block\">    // append the task EGTreeNode to the EGTreeNode for Programs</div><div class=\"ql-code-block\">    the_egtreenode_program_dom_obj.append(task_egtreenode_dom_obj)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_task_egtreenode_component </div></div><p>t///</p>","_substeps":{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db","name":"substeps","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"children":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f","name":"1. Make EGTreeNode: make_egtreenode()","custparents":[{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db"}],"children":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701","name":"2. Find the parent PFD's EGTreeNode: get_egtreenode_ of_pfd_by_ pfdid()","custparents":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"children":[{"idx":"28354ec6-bcbb-4ba5-8ef3-297e4e6fbed2","name":"3. get_egtreenode_ of_program_in_ a_egtreenode_of_pfd()","custparents":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701"}],"children":[{"idx":"965e984a-e2a6-46b5-b054-fd6980b58550","name":"4. append the shortcuttofile EGTreeNode to ProgramsFolder's EGTreeNode","custparents":[{"idx":"28354ec6-bcbb-4ba5-8ef3-297e4e6fbed2"}]}]}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// within ProjectCollection.Elements, add a element tag for task (in which multiple tags are encompassed)</div><div class=\"ql-code-block\">async function make_append_task_element_component(doms_obj, config_task) {</div><div class=\"ql-code-block\">    // 1. make the Element component and append to ProjectCollection.Elements (Type = \"SAS.EG.ProjectElements.CodeTask\")</div><div class=\"ql-code-block\">    let task_element_dom_obj = await make_task_element_component(config_task)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append task_element_component</div><div class=\"ql-code-block\">    $(doms_obj.find('Elements')[0]).append(task_element_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_task_element_component</div></div><p>t///</p>","_substeps":{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968","name":"substeps","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec","name":"1. make Element: make_task_ element_component()","custparents":[{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make the Element component and append to ProjectCollection.Elements (Type = \"SAS.EG.ProjectElements.CodeTask\")</div><div class=\"ql-code-block\">async function make_task_element_component(config_task) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___e03_task_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line61', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the task).Element</div><div class=\"ql-code-block\">    let task_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    if (config_task.Element.Label) { $(task_element_dom_obj.find('Label')[0]).text(config_task.Element.Label) }</div><div class=\"ql-code-block\">    if (config_task.Element.Container) { $(task_element_dom_obj.find('Container')[0]).text(config_task.Element.Container) }</div><div class=\"ql-code-block\">    if (config_task.Element.ID) { $(task_element_dom_obj.find('ID')[0]).text(config_task.Element.ID) }</div><div class=\"ql-code-block\">    if (config_task.Element.CreatedOn) { $(task_element_dom_obj.find('CreatedOn')[0]).text(config_task.Element.CreatedOn) }</div><div class=\"ql-code-block\">    if (config_task.Element.ModifiedOn) { $(task_element_dom_obj.find('ModifiedOn')[0]).text(config_task.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_task.Element.ModifiedBy) { $(task_element_dom_obj.find('ModifiedBy')[0]).text(config_task.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_task.Element.ModifiedByEGID) { $(task_element_dom_obj.find('ModifiedByEGID')[0]).text(config_task.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // config the ProjectCollection.Elements.Element(of the task).SubmitableElement</div><div class=\"ql-code-block\">    // let task_submitableelement_dom_obj = $(component_dom_obj.find('SubmitableElement')[0])</div><div class=\"ql-code-block\">    // // could cofig more, e.g., HtmlStyleUrlOverride, SasReportStyleUrlOverride (location of the SAS Home)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // config the ProjectCollection.Elements.Element(of the task).CodeTask</div><div class=\"ql-code-block\">    // if the task type is shortcut, make DNA components, and insert as textcontent to ProjectCollection.Elements.Element(of the task).CodeTask.DNA</div><div class=\"ql-code-block\">    // console.log('line253', config_task.Embedded)</div><div class=\"ql-code-block\">    if (config_task.Embedded &amp;&amp; config_task.Embedded === 'False') {</div><div class=\"ql-code-block\">        // console.log('line255',config_task.CodeTask.DNA.DNA)</div><div class=\"ql-code-block\">        // 1. make task_dna component</div><div class=\"ql-code-block\">        let task_element_codetask_dna_dna_doms_obj = await make_dna_component(config_task.CodeTask.DNA)</div><div class=\"ql-code-block\">        // 2. Note: unlike other components, the DNA part should be inserted as HTML (not textcontent) to ProjectCollection.Elements.Element(of the task).CodeTask.DNA</div><div class=\"ql-code-block\">        // Make DNA HTML</div><div class=\"ql-code-block\">        let dna_outerHTMLstr = make_dna_html(task_element_codetask_dna_dna_doms_obj)</div><div class=\"ql-code-block\">        if (config_task.CodeTask.DNA.html) { // if the config contains DNA.html, use it directly. These are copied from a v8 epg file</div><div class=\"ql-code-block\">            dna_outerHTMLstr = config_task.CodeTask.DNA.html</div><div class=\"ql-code-block\">        } //if (config_task.CodeTask.DNA.html)</div><div class=\"ql-code-block\">        // console.log('line1188', dna_outerHTMLstr) </div><div class=\"ql-code-block\">        // 3. insert dna_outerHTMLstr as html to ProjectCollection.Elements.Element(of the task).CodeTask.DNA</div><div class=\"ql-code-block\">        // Note: the differece between html() and text() is that for html, '&amp;lt;' is kept as it was; while</div><div class=\"ql-code-block\">        // for text(), '&amp;lt;' is converted to '&amp;amp;lt;', which cannot be recognized correctly by SAS EG</div><div class=\"ql-code-block\">        $(component_dom_obj.find('CodeTask').find('DNA')[0]).html(dna_outerHTMLstr)</div><div class=\"ql-code-block\">        // 4. also, change ProjectCollection.Elements.Element(of the task).CodeTask.Embedded's text to 'False'</div><div class=\"ql-code-block\">        // that tiny change controls whether the task is a shortcut or with sas code Embedded within the egp file</div><div class=\"ql-code-block\">        $(component_dom_obj.find('CodeTask').find('Embedded')[0]).text(config_task.CodeTask.Embedded)</div><div class=\"ql-code-block\">    } // if (config_task.type &amp;&amp; config_task.type === 'shortcut')</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_task_element_component</div></div><p>t///</p>","children":[{"idx":"b2c269f1-2ba1-4863-8345-c7998fb3c0b6","name":"2. append to ProjectCollection.Elements","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}]}],"collapsed":0,"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"children":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7","name":"3. config components","custparents":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437","name":".Element","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"}],"children":[{"idx":"f147dd93-48e2-463a-845f-0afa2a3bbafb","name":".ID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"8ebf01fb-2ac4-4cee-be23-45517c8e7387","name":".Label","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"4bb14567-1528-45a5-8747-801fe8573b87","name":".Type","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"07b9949d-2fe3-4c5c-b567-3691382ecf80","name":".Container","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e807bf65-6f0e-49a3-beeb-fe24a3e9be34","name":".CreatedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"1383bfb3-6302-469f-9712-34cb27c0d236","name":".ModifiedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e391919f-8659-455d-9089-1814faeab06d","name":".ModifiedBy","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"ee9d61f0-c11f-4f02-9daf-fd66e1cc8e1a","name":".ModifiedByEGID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1,"oldparentidx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"MY504476ab-1d3b-4c93-a7b4-3db756cbc3cc","name":"ProjectCollection.Elements .Element.CodeTask.Embedded","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"}],"children":[{"idx":"MY3547c938-1a1a-4736-9813-9c554971844a","name":"Embedded","custparents":[{"idx":"MY504476ab-1d3b-4c93-a7b4-3db756cbc3cc"}],"NodeDescription":"<p>///t</p><p>Do nothing, i.e., not inserting any contents into ProjectCollection.Elements.Element(of the task).CodeTask.DNA</p><p>t///</p>"},{"idx":"MYcacfd44f-23fb-4420-8188-4b9e5768f3d1","name":"Not embedded","custparents":[{"idx":"MY504476ab-1d3b-4c93-a7b4-3db756cbc3cc"}],"children":[{"idx":"MY1373b30a-8a32-44b8-8546-844299db7547","name":"1. make DNA: make_dna_component()","custparents":[{"idx":"MYcacfd44f-23fb-4420-8188-4b9e5768f3d1"}],"children":[{"idx":"MYa6a5fbd0-adff-4c6a-bc24-920a1cade694","name":"2. get DNA html: make_dna_html()","custparents":[{"idx":"MY1373b30a-8a32-44b8-8546-844299db7547"}],"children":[{"idx":"MY6620f3fb-bf87-416e-b200-f68fe7edca46","name":"3. Insert DNA html to ProjectCollection .Elements.Element(of the task) .CodeTask.DNA","custparents":[{"idx":"MYa6a5fbd0-adff-4c6a-bc24-920a1cade694"}],"children":[{"idx":"MY51d16cf7-4a26-49ed-820d-1b59349dc50e","name":"4. change ProjectCollection.Elements .Element.CodeTask .Embedded's to 'False'","custparents":[{"idx":"MY6620f3fb-bf87-416e-b200-f68fe7edca46"}]}],"collapsed":1}],"collapsed":1}],"collapsed":1}],"collapsed":1}],"collapsed":1}],"collapsed":1}]}]}],"collapsed":0}}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//within a PFD component's PFD tag (ProjectCollection.Elements.Element(PFD).PFD), add a process component with the taskID</div><div class=\"ql-code-block\">async function make_append_task_process_component(doms_obj, config_task) {</div><div class=\"ql-code-block\">    // console.log('line150', doms_obj)</div><div class=\"ql-code-block\">    // 1. make task_process            </div><div class=\"ql-code-block\">    let task_process_doms_obj = await make_task_process_component(config_task)</div><div class=\"ql-code-block\">    // console.log('line54', task_process_doms_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append task_process to the corresponding PFD</div><div class=\"ql-code-block\">    // find all PFD Elements under Elements</div><div class=\"ql-code-block\">    let element_pfd_dom_obj = get_element_of_pfd_by_pfdid(doms_obj, config_task.Element.Container)</div><div class=\"ql-code-block\">    $(element_pfd_dom_obj.find('PFD')[0]).append(task_process_doms_obj)</div><div class=\"ql-code-block\">    // console.log('line171', doms_obj)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_task_process_component </div></div><p>t///</p>","_substeps":{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","name":"substeps","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02","name":"1. make process: make_task_process_component()","custparents":[{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make process components for a task</div><div class=\"ql-code-block\">async function make_task_process_component(config_task) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z05_process_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line57', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config_task.Process.Element.ID) { $(component_dom_obj.find('Element').find('ID')[0]).text(config_task.Process.Element.ID) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">};//async function make_task_process_component</div></div><p>t///</p>","children":[{"idx":"MY2846a568-2da9-4dd6-bb01-03d1979585de","name":"2. append to PFD: get_element_of_pfd_by_pfdid()","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}]}],"collapsed":0,"oldparentidx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","_substeps":{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e","name":"substeps","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}],"children":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e"}],"children":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33"}],"children":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57","name":"3. config components","custparents":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}]}],"oldparentidx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}}],"oldparentidx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}}]}}],"collapsed":1,"oldparentidx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"5d9eba42-a685-476f-b067-84da9c12f49e","name":"ShortCutToFile Components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"MY3ec24605-6b36-4a4e-ba75-4020cd1b3ad1"}],"children":[{"idx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae","name":"config_shortcuttofile_ function()","custparents":[{"idx":"5d9eba42-a685-476f-b067-84da9c12f49e"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration for shortcut to external file</div><div class=\"ql-code-block\">async function config_shortcuttofile_function(shortcuttofile_input) {</div><div class=\"ql-code-block\">    let config_shortcuttofile = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1. config for ProjectCollection.ExternalFileList.ExternalFile</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile = {}</div><div class=\"ql-code-block\">    // 1a. config for ExternalFile.Element</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.Label = shortcuttofile_input.Element.Label</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.ID = shortcuttofile_input.ExternalFile.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.CreatedOn = shortcuttofile_input.config_pfd.Element.CreatedOn</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.ModifiedOn = shortcuttofile_input.config_pfd.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.ModifiedBy = shortcuttofile_input.config_pfd.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.Element.ModifiedByEGID = shortcuttofile_input.config_pfd.Element.ModifiedByEGID</div><div class=\"ql-code-block\">    // 1b. config for ExternalFile.ExternalFile</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.ExternalFile = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.ExternalFile.ShortCutList = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.ExternalFile.ShortCutList.ShortCutID = shortcuttofile_input.Element.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.ExternalFile.FileTypeType = shortcuttofile_input.ExternalFile.FileTypeType // the tag name has two Type which is obviously a mistake when developping the xml structure</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1b1. config for DNA</div><div class=\"ql-code-block\">    config_shortcuttofile.ExternalFile.ExternalFile.DNA = {}</div><div class=\"ql-code-block\">    if (shortcuttofile_input.DNA &amp;&amp; shortcuttofile_input.DNA.html) { // use DNA.html if it exists (converting from v8)</div><div class=\"ql-code-block\">        config_shortcuttofile.ExternalFile.ExternalFile.DNA.html = shortcuttofile_input.DNA.html</div><div class=\"ql-code-block\">    } else if (shortcuttofile_input.DNA &amp;&amp; shortcuttofile_input.DNA.FullPath) { // this is when externalfile components are manually imported</div><div class=\"ql-code-block\">        let fullpath = shortcuttofile_input.DNA.FullPath</div><div class=\"ql-code-block\">        fullpath = JSON.stringify(fullpath) // to ensure that the single backlash are replaced by \\\\</div><div class=\"ql-code-block\">        // the stringify adds additional quotes around the path, the string is now like '\"C:\\\\...\"'</div><div class=\"ql-code-block\">        // the following is to strip these additional quotes</div><div class=\"ql-code-block\">        if (fullpath.substr(0, 1) === '\"') { fullpath = fullpath.substring(1) }</div><div class=\"ql-code-block\">        if (fullpath.substr(fullpath.length - 1, 1) === '\"') { fullpath = fullpath.substr(0, fullpath.length - 1) }</div><div class=\"ql-code-block\">        // console.log('line159', fullpath)</div><div class=\"ql-code-block\">        let startpos = fullpath.lastIndexOf('\\\\')</div><div class=\"ql-code-block\">        let filename = fullpath.substr(startpos + 1)</div><div class=\"ql-code-block\">        config_shortcuttofile.ExternalFile.ExternalFile.DNA.DNA = {}</div><div class=\"ql-code-block\">        config_shortcuttofile.ExternalFile.ExternalFile.DNA.DNA.Name = filename</div><div class=\"ql-code-block\">        config_shortcuttofile.ExternalFile.ExternalFile.DNA.DNA.FullPath = fullpath</div><div class=\"ql-code-block\">    }// if (shortcuttofile_input.DNA &amp;&amp; shortcuttofile_input.DNA.FullPath)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. config for ProjectCollection.Elements.Element(for the shortcuttofile component, not for the ExternalFile component)</div><div class=\"ql-code-block\">    config_shortcuttofile.Element = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element = {}</div><div class=\"ql-code-block\">    // 2a. config for ProjectCollection.Elements.Element(for this shortcuttofileToFile).Element</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.Label = shortcuttofile_input.Element.Label</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.ID = shortcuttofile_input.Element.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.Container = shortcuttofile_input.config_pfd.Element.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.CreatedOn = shortcuttofile_input.config_pfd.Element.CreatedOn</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.ModifiedOn = shortcuttofile_input.config_pfd.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.ModifiedBy = shortcuttofile_input.config_pfd.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.ModifiedByEGID = shortcuttofile_input.config_pfd.Element.ModifiedByEGID</div><div class=\"ql-code-block\">    // 2b. config the parent ExternalFile ID for ProjectCollection.Elements.Element(for this shortcuttofileToFile).SHORTCUT</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.SHORTCUT = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.Element.Element.SHORTCUT.Parent = config_shortcuttofile.ExternalFile.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3. config for ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of the parent PFD).EGTreeNode</div><div class=\"ql-code-block\">    config_shortcuttofile.EGTreeNode = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.EGTreeNode.NodeType = 'NODETYPE_ELEMENT'</div><div class=\"ql-code-block\">    config_shortcuttofile.EGTreeNode.ElementID = config_shortcuttofile.Element.Element.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.EGTreeNode.Expanded = 'True'</div><div class=\"ql-code-block\">    config_shortcuttofile.EGTreeNode.Label = config_shortcuttofile.Element.Element.Label</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 4. config for ProjectCollection.External_Objects.ProcessFlowView.Graphics.TaskGraphic</div><div class=\"ql-code-block\">    config_shortcuttofile.TaskGraphic = {}</div><div class=\"ql-code-block\">    config_shortcuttofile.TaskGraphic.ID = shortcuttofile_input.TaskGraphic.ID</div><div class=\"ql-code-block\">    config_shortcuttofile.TaskGraphic.Label = config_shortcuttofile.Element.Element.Label</div><div class=\"ql-code-block\">    config_shortcuttofile.TaskGraphic.Element = config_shortcuttofile.Element.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (shortcuttofile_input.TaskGraphic.PosX) { config_shortcuttofile.TaskGraphic.PosX = shortcuttofile_input.TaskGraphic.PosX }</div><div class=\"ql-code-block\">    if (shortcuttofile_input.TaskGraphic.PosY) { config_shortcuttofile.TaskGraphic.PosY = shortcuttofile_input.TaskGraphic.PosY }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return config_shortcuttofile</div><div class=\"ql-code-block\">};// async function config_shortcuttofile_function(config_shortcuttofile)</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"MY581604f3-2a4e-40f2-a147-4bbe5259333d","name":".ExternalFile","custparents":[{"idx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"}],"children":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d","name":".ExternalFile.Element","custparents":[{"idx":"MY581604f3-2a4e-40f2-a147-4bbe5259333d"}],"children":[{"idx":"844d64af-ade2-43d3-9d92-0c49e70a5b5c","name":".ID","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]},{"idx":"7b4554e2-647e-432d-b61e-93113074a62f","name":".Label","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]},{"idx":"1173bd03-6213-4397-ba4f-9302dc4dddcd","name":".CreatedOn","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]},{"idx":"b47c2569-b81b-4798-b4a6-857f8fadaae0","name":".ModifiedOn","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]},{"idx":"dfbfc0b2-3206-4e41-a051-abd2329d6e5c","name":".ModifiedBy","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]},{"idx":"966a8d35-ccce-4b0a-9bd2-9a3bd1cd126e","name":".ModifiedByEGID","custparents":[{"idx":"bc56fe30-3490-4fcc-880c-fe50c70ad54d"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"MYf55dbe59-341c-4943-ae94-d1c9fadaed30","name":".ExternalFile.ExternalFile","custparents":[{"idx":"MY581604f3-2a4e-40f2-a147-4bbe5259333d"}],"children":[{"idx":"MYf56494cf-fad4-4bf7-84a7-80e71b164e58","name":".ShortCutList.ShortCutID","custparents":[{"idx":"MYf55dbe59-341c-4943-ae94-d1c9fadaed30"}]},{"idx":"MY21b7edc0-6801-4b79-bdf6-6ee6529acea6","name":".FileTypeType","custparents":[{"idx":"MYf55dbe59-341c-4943-ae94-d1c9fadaed30"}]}],"collapsed":1,"oldparentidx":"MY581604f3-2a4e-40f2-a147-4bbe5259333d"},{"idx":"MY6586e818-4c03-4bfd-8216-95e0d166fd3a","name":".DNA","custparents":[{"idx":"MY581604f3-2a4e-40f2-a147-4bbe5259333d"}],"children":[{"idx":"MY42942bf1-7c4c-4f11-8a2a-07f786c1c10a","name":"DNA.html (copied from an egp v8 file)","custparents":[{"idx":"MY6586e818-4c03-4bfd-8216-95e0d166fd3a"}]},{"idx":"MYab417c68-b8ad-4bc9-8d8d-2a5c2a31a4ff","name":"DNA.DNA.FullPath (manually creating a egp v7 file)","custparents":[{"idx":"MY6586e818-4c03-4bfd-8216-95e0d166fd3a"}]}],"collapsed":1}],"collapsed":1,"oldparentidx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"},{"idx":"b5e27ff0-59cf-45b6-8ce9-6e5afc28575f","name":".Element","custparents":[{"idx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"}],"children":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d","name":".Element.Element","custparents":[{"idx":"b5e27ff0-59cf-45b6-8ce9-6e5afc28575f"}],"children":[{"idx":"d027d49e-c45e-40ad-bc9d-f173fe8105c9","name":".ID","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"d236640f-7088-4d3c-9f6a-214ffb1498e0","name":".Label","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"8bac9d49-e8e1-4c61-a4f5-b5a4d8f50caf","name":".Type","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"9b7d485e-4702-4e43-a7ac-8c511f475310","name":".Container","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"0e9be6c8-37a7-47b1-8745-c43ed1c6f7f6","name":".CreatedOn","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"9a26bca4-a12e-4cc4-9c69-85e7d3d0ca2b","name":".ModifiedOn","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"818c55e4-d178-44c4-a152-7b813b75831c","name":".ModifiedBy","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]},{"idx":"1cc85213-e85f-4da2-90a8-fedb8cd2ce58","name":".ModifiedByEGID","custparents":[{"idx":"e08c3b9c-7624-4b48-967a-208bbd3b7e1d"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1,"oldparentidx":"b5e27ff0-59cf-45b6-8ce9-6e5afc28575f"},{"idx":"7b4648b0-247f-4fd8-9b6e-9714e9c162e8","name":".Element.ShortCut","custparents":[{"idx":"b5e27ff0-59cf-45b6-8ce9-6e5afc28575f"}],"children":[{"idx":"63cb3bc1-5f69-4d3f-b2f1-d7b8abfa25b7","name":".SHORTCUT.Parent (the ShortCutToFile ID)","custparents":[{"idx":"7b4648b0-247f-4fd8-9b6e-9714e9c162e8"}]}],"collapsed":1}],"collapsed":1,"oldparentidx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"},{"idx":"3ace3e38-a562-4b5b-937a-fc81be7a285d","name":".EGTreeNode","custparents":[{"idx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"}],"children":[{"idx":"70391ff4-86da-4d34-9a42-2e7f0a27bf73","name":".NodeType","custparents":[{"idx":"3ace3e38-a562-4b5b-937a-fc81be7a285d"}]},{"idx":"ef66d296-12c6-49a2-b7b4-0bfcfd738bb5","name":".ElementID","custparents":[{"idx":"3ace3e38-a562-4b5b-937a-fc81be7a285d"}]},{"idx":"dc172e45-8488-42f5-bbbe-a14b9084c2c1","name":".Label","custparents":[{"idx":"3ace3e38-a562-4b5b-937a-fc81be7a285d"}]},{"idx":"MYb482f9e2-8d6a-4a0d-9ef1-e069cfea2b87","name":".Expanded","custparents":[{"idx":"3ace3e38-a562-4b5b-937a-fc81be7a285d"}]}],"collapsed":1},{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb","name":".TaskGraphic","custparents":[{"idx":"d09fe3e7-d7f6-40a3-bf91-8d7ab2b7ebae"}],"children":[{"idx":"5da7e49a-4300-47db-8d26-a7b4034d8858","name":".ID","custparents":[{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb"}]},{"idx":"5b589688-9e03-4a99-840b-94009c07b164","name":".Label","custparents":[{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb"}]},{"idx":"ef38df31-999f-40d7-804d-94b867bfd435","name":".Element","custparents":[{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb"}]},{"idx":"e33f0e31-4a73-408a-898f-8d8e7dc8c1cf","name":".PosX","custparents":[{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb"}]},{"idx":"8326e3ef-1481-4e63-8dd0-d780dd64f2fd","name":".PosY","custparents":[{"idx":"cf540604-f052-45fd-a23f-b2caf21476eb"}]}],"collapsed":1}]},{"idx":"53739398-00e2-4a7e-bd6c-0233bf0d3500","name":"make_append_ shortcuttofile_component()","custparents":[{"idx":"5d9eba42-a685-476f-b067-84da9c12f49e"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">async function make_append_shortcuttofile_component(doms_obj, config_shortcuttofile) {</div><div class=\"ql-code-block\">    // 1. make and append the externalfile components (in ProjectCollection.ExternalFileList, add a ExternalFile component, with children nodes of .Element, and .ExternalFile, )</div><div class=\"ql-code-block\">    doms_obj = await make_append_shortcuttofile_externalfile_component(doms_obj, config_shortcuttofile)</div><div class=\"ql-code-block\">    // 2. make and append the element components</div><div class=\"ql-code-block\">    doms_obj = await make_append_shortcuttofile_element_component(doms_obj, config_shortcuttofile)</div><div class=\"ql-code-block\">    // 3. make and append the egtreenode components</div><div class=\"ql-code-block\">    doms_obj = await make_append_shortcuttofile_egtreenode_component(doms_obj, config_shortcuttofile)</div><div class=\"ql-code-block\">    // 4. make and append the taskgraphic components</div><div class=\"ql-code-block\">    doms_obj = await make_append_shortcuttofile_taskgraphic_component(doms_obj, config_shortcuttofile)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //async function make_append_shortcuttofile_component(doms_obj, config_shortcuttofile)</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea","name":"1. PFD.Process: make_append_shortcuttofile_ externalfile_component()","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"}],"children":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a","name":"2. Element: make_append_shortcuttofile_ element_component()","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4","name":"3. EGTreeNode: make_append_shortcuttofile_ egtreenode_component()","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e","name":"4. TaskGraphic: make_append_ shortcuttofile_taskgraphic_ component()","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the taskgraphic components</div><div class=\"ql-code-block\">async function make_append_shortcuttofile_taskgraphic_component(doms_obj, config_shortcuttofile) {</div><div class=\"ql-code-block\">    // 1. make task_taskgraphic</div><div class=\"ql-code-block\">    let shortcuttofile_taskgraphic_dom_obj = await make_taskgraphic_component(config_shortcuttofile.TaskGraphic)</div><div class=\"ql-code-block\">    // console.log('line68', task_taskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the shortcuttofile.TaskGraphic to ProjectColletion.External_Objects.ProcessFlowView.Graphics</div><div class=\"ql-code-block\">    // Note: ProjectColletion.External_Objects.ProcessFlowView.Graphics is not specific by PFD</div><div class=\"ql-code-block\">    let the_graphic_dom_obj = $(doms_obj.find('External_Objects').find('ProcessFlowView').find('Graphics')[0])</div><div class=\"ql-code-block\">    the_graphic_dom_obj.append(shortcuttofile_taskgraphic_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_shortcuttofile_taskgraphic_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3","name":"substeps","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}],"children":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed","name":"1. Make TaskGraphic: make_taskgraphic _component()","custparents":[{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3"}],"children":[{"idx":"MYbf0c9241-e6f0-4b05-bfcf-38501f923172","name":"2. Append to ProjectColletion .External_Objects .ProcessFlowView .Graphics","custparents":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed"}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the egtreenode components</div><div class=\"ql-code-block\">async function make_append_shortcuttofile_egtreenode_component(doms_obj, config_shortcuttofile) {</div><div class=\"ql-code-block\">    // 1. make shortcuttofile_egtreenode_component</div><div class=\"ql-code-block\">    let shortcuttofile_egtreenode_component = await make_egtreenode(config_shortcuttofile.EGTreeNode)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the component to ProjectCollection.External_Objectives.EGTreeNode(of the parent PFD)</div><div class=\"ql-code-block\">    // 2.1 find the parent PFD</div><div class=\"ql-code-block\">    let the_egtreenode_pfd_dom_obj = get_egtreenode_of_pfd_by_pfdid(doms_obj, config_shortcuttofile.Element.Element.Container)</div><div class=\"ql-code-block\">    // console.log('line159', the_egtreenode_pfd_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    the_egtreenode_pfd_dom_obj.append(shortcuttofile_egtreenode_component)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_shortcuttofile_egtreenode_component</div></div><p>t///</p>","_substeps":{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db","name":"substeps","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"children":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f","name":"1. Make EGTreeNode: make_egtreenode()","custparents":[{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db"}],"children":[{"idx":"MY39a68023-b74c-4d3c-940d-72787dc43c81","name":"2. Find the parent PFD's EGTreeNode: get_egtreenode_ of_pfd_by_ pfdid()","custparents":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"children":[{"idx":"MY8641f66a-ee15-4853-a65b-beda6dfeb821","name":"3. get_egtreenode_ of_program_in_ a_egtreenode_of_pfd()","custparents":[{"idx":"MY39a68023-b74c-4d3c-940d-72787dc43c81"}],"children":[{"idx":"MYe110b2a7-ff2e-4cd9-a7a6-1acad44346f4","name":"4. append the shortcuttofile EGTreeNode to ProgramsFolder's EGTreeNode","custparents":[{"idx":"MY8641f66a-ee15-4853-a65b-beda6dfeb821"}]}]}],"oldparentidx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"collapsed":0}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the element components</div><div class=\"ql-code-block\">async function make_append_shortcuttofile_element_component(doms_obj, config_shortcuttofile) {</div><div class=\"ql-code-block\">    // 1. make shortcuttofile_element_component</div><div class=\"ql-code-block\">    let shortcuttofile_element_component = await make_shortcuttofile_element_component(config_shortcuttofile)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the component to ProjectCollection.ExternalFileList</div><div class=\"ql-code-block\">    $(doms_obj.find('Elements')[0]).append(shortcuttofile_element_component)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_shortcuttofile_element_component</div></div><p>t///</p><p><br></p>","collapsed":0,"_substeps":{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968","name":"substeps","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec","name":"1. make Element: make_shortcuttofile_ element_component()","custparents":[{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//make shortcuttofile_element_component</div><div class=\"ql-code-block\">async function make_shortcuttofile_element_component(config_shortcuttofile) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___h02_shortcuttofile_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line104', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of this shortcuttofile).Element</div><div class=\"ql-code-block\">    let element_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    // console.log('line160', element_element_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    // console.log('line161', config_shortcuttofile.ExternalFile ); return</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.Label) { $(element_element_dom_obj.find('Label')[0]).text(config_shortcuttofile.Element.Element.Label) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.Container) { $(element_element_dom_obj.find('Container')[0]).text(config_shortcuttofile.Element.Element.Container) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.ID) { $(element_element_dom_obj.find('ID')[0]).text(config_shortcuttofile.Element.Element.ID) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.CreatedOn) { $(element_element_dom_obj.find('CreatedOn')[0]).text(config_shortcuttofile.Element.Element.CreatedOn) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.ModifiedOn) { $(element_element_dom_obj.find('ModifiedOn')[0]).text(config_shortcuttofile.Element.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.ModifiedBy) { $(element_element_dom_obj.find('ModifiedBy')[0]).text(config_shortcuttofile.Element.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.ModifiedByEGID) { $(element_element_dom_obj.find('ModifiedByEGID')[0]).text(config_shortcuttofile.Element.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.InputIDs) { $(element_element_dom_obj.find('InputIDs')[0]).text(config_shortcuttofile.Element.Element.InputIDs) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the ShortCutToFile).ExternalFile.ExternalFile</div><div class=\"ql-code-block\">    let element_shortcuttofile_dom_obj = $(component_dom_obj.find('SHORTCUT')[0])</div><div class=\"ql-code-block\">    if (config_shortcuttofile.Element.Element.SHORTCUT.Parent) { $(element_shortcuttofile_dom_obj.find('Parent')[0]).text(config_shortcuttofile.Element.Element.SHORTCUT.Parent) }</div><div class=\"ql-code-block\">    // could config more...                   </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // console.log('line129', component_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">};//async function make_shortcuttofile_externalfile_component</div></div><p>t///</p>","children":[{"idx":"b2c269f1-2ba1-4863-8345-c7998fb3c0b6","name":"2. append to ProjectCollection.Elements","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}]}],"collapsed":0,"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"children":[{"idx":"0d3c2186-01aa-4792-b147-a4d08ece9b1c","name":"3. config components","custparents":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"children":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0","name":".Element.Element","custparents":[{"idx":"0d3c2186-01aa-4792-b147-a4d08ece9b1c"}],"children":[{"idx":"a1503023-6455-4e0b-8407-00591495c387","name":".ID","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"3c5dc9c8-9fe1-4a71-ba61-ec8f2b690bff","name":".Label","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"0e32968f-fdd3-4bd9-ab4f-f0dc4dd43508","name":".Container","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"22869eb3-ed73-4e70-bcd3-e18a44357a63","name":".CreatedOn","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"3f44a895-14b1-48e8-a261-dc933eaae2c7","name":".ModifiedOn","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"fa135f4a-8306-4ab6-8643-551144b207d7","name":".ModifiedBy","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]},{"idx":"42e5a512-45c4-4835-b2e0-447254d62639","name":".ModifiedByEGID","custparents":[{"idx":"f8e22cdf-dca7-4e6e-a809-b0f497ef5af0"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"fda87f44-5de0-42ab-8c7d-7514806c5ef0","name":".Element.ShortCut","custparents":[{"idx":"0d3c2186-01aa-4792-b147-a4d08ece9b1c"}],"children":[{"idx":"9d72a427-9f49-48f8-9155-329b3c3d2b2a","name":".SHORTCUT.Parent (the ShortCutToFile ID)","custparents":[{"idx":"fda87f44-5de0-42ab-8c7d-7514806c5ef0"}]}],"collapsed":0}],"collapsed":1}]}]}]}}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the externalfile components</div><div class=\"ql-code-block\">async function make_append_shortcuttofile_externalfile_component(doms_obj, config_shortcuttofile) {</div><div class=\"ql-code-block\">    // console.log('line335', config_shortcuttofile)</div><div class=\"ql-code-block\">    // 1. make shortcuttofile_externalfile_component</div><div class=\"ql-code-block\">    let shortcuttofile_externalfile_component = await make_shortcuttofile_externalfile_component(config_shortcuttofile)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the component to ProjectCollection.ExternalFileList</div><div class=\"ql-code-block\">    $(doms_obj.find('ExternalFileList')[0]).append(shortcuttofile_externalfile_component)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_shortcuttofile_externalfile_component</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","name":"substeps","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02","name":"1. make externalfile: make_shortcuttofile_ externalfile_component()","custparents":[{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//make shortcuttofile_externalfile_component</div><div class=\"ql-code-block\">async function make_shortcuttofile_externalfile_component(config_shortcuttofile) {</div><div class=\"ql-code-block\">    // console.log('line347', config_shortcuttofile)</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___h01_shortcuttofile_externalfile_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line104', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.ExternalFileList.ExternalFile(of this externalfile).Element</div><div class=\"ql-code-block\">    let externalfile_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    // console.log('line160', externalfile_element_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    // console.log('line358', config_shortcuttofile.ExternalFile ); return</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.Label) { $(externalfile_element_dom_obj.find('Label')[0]).text(config_shortcuttofile.ExternalFile.Element.Label) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.Container) { $(externalfile_element_dom_obj.find('Container')[0]).text(config_shortcuttofile.ExternalFile.Element.Container) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.ID) { $(externalfile_element_dom_obj.find('ID')[0]).text(config_shortcuttofile.ExternalFile.Element.ID) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.CreatedOn) { $(externalfile_element_dom_obj.find('CreatedOn')[0]).text(config_shortcuttofile.ExternalFile.Element.CreatedOn) }</div><div class=\"ql-code-block\">    // console.log('line368', config_shortcuttofile.ExternalFile.Element)</div><div class=\"ql-code-block\">    // Note: it is important to have .CreatedOn, ModifiedOn, etc. If any of these tags are left blank (without textcontent), the SAS EGP cannot display the component</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.ModifiedOn) { $(externalfile_element_dom_obj.find('ModifiedOn')[0]).text(config_shortcuttofile.ExternalFile.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.ModifiedBy) { $(externalfile_element_dom_obj.find('ModifiedBy')[0]).text(config_shortcuttofile.ExternalFile.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.ModifiedByEGID) { $(externalfile_element_dom_obj.find('ModifiedByEGID')[0]).text(config_shortcuttofile.ExternalFile.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.Element.InputIDs) { $(externalfile_element_dom_obj.find('InputIDs')[0]).text(config_shortcuttofile.ExternalFile.Element.InputIDs) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.ExternalFileList.ExternalFile.ExternalFile</div><div class=\"ql-code-block\">    let externalfile_externalfile_dom_obj = $(component_dom_obj.find('ExternalFile')[0])</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.ExternalFile.ShortCutList.ShortCutID) { $(externalfile_externalfile_dom_obj.find('ShortCutList').find('ShortCutID')[0]).text(config_shortcuttofile.ExternalFile.ExternalFile.ShortCutList.ShortCutID) }</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.ExternalFile.FileTypeType) { $(externalfile_externalfile_dom_obj.find('FileTypeType')[0]).text(config_shortcuttofile.ExternalFile.ExternalFile.FileTypeType) }</div><div class=\"ql-code-block\">    // ProjectCollection.Elements.Element(of the link).ExternalFile.ExternalFile.DNA</div><div class=\"ql-code-block\">    let shortcuttofile_externalfile_externalfile_dna_dna_doms_obj = await make_dna_component(config_shortcuttofile.ExternalFile.ExternalFile.DNA)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. Note: unlike other components, the DNA part should be inserted as HTML (not textcontent) to ProjectCollection.Elements.Element(of the task).CodeTask.DNA</div><div class=\"ql-code-block\">    // Make DNA HTML</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let dna_outerHTMLstr = make_dna_html(shortcuttofile_externalfile_externalfile_dna_dna_doms_obj)</div><div class=\"ql-code-block\">    if (config_shortcuttofile.ExternalFile.ExternalFile.DNA.html) { // if the config contains DNA.html, use it directly. These are copied from a v8 epg file</div><div class=\"ql-code-block\">        dna_outerHTMLstr = config_shortcuttofile.ExternalFile.ExternalFile.DNA.html</div><div class=\"ql-code-block\">    } //if (config_shortcuttofile.ExternalFile.ExternalFile.DNA.html)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3. insert dna_outerHTMLstr as html to ProjectCollection.ExternalFileList.ExternalFile(of this externalfile).DNA</div><div class=\"ql-code-block\">    // Note: the differece between html() and text() is that for html, '&amp;lt;' is kept as it was; while</div><div class=\"ql-code-block\">    // for text(), '&amp;lt;' is converted to '&amp;amp;lt;', which cannot be recognized correctly by SAS EG</div><div class=\"ql-code-block\">    $(component_dom_obj.find('ExternalFile').find('DNA')[0]).html(dna_outerHTMLstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // could config more...                   </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // console.log('line129', component_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">};//async function make_shortcuttofile_externalfile_component</div></div><p>t///</p>","children":[{"idx":"MY2846a568-2da9-4dd6-bb01-03d1979585de","name":"2. append to ProjectCollection .ExternalFileList","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}]}],"collapsed":0,"oldparentidx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","_substeps":{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e","name":"substeps","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}],"children":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e"}],"children":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33"}],"children":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57","name":"3. config components","custparents":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68","name":".Element","custparents":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57"}],"children":[{"idx":"aab30cfc-f838-4286-8e4d-892d1ba26769","name":".ID","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"6b511054-8f93-4e8c-ac3a-55f29df04ea8","name":".Label","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"98a173d3-29bc-4118-a9d2-59a7aa748647","name":".Container","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"792f403b-bb4c-4c96-90a5-01afb05cd010","name":".CreatedOn","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"76495671-33ec-4e76-91ab-83cb08fff0cd","name":".ModifiedOn","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"0b83f2a6-3c0b-47a8-bdb3-f24034c386a9","name":".ModifiedBy","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]},{"idx":"9a04f3dd-63c0-408b-9640-d2133a442aee","name":".ModifiedByEGID","custparents":[{"idx":"80ed5dd1-814c-4c69-a8cb-d48687e79d68"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"383ad077-c0e5-4c71-9e94-c8dccb1ea2a4","name":".ExternalFile","custparents":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57"},{"idx":"2cb72276-7d3d-4bc6-9be4-2b67d624bfec"}],"children":[{"idx":"4ac09d81-fbf8-482a-8dc6-e527a226c921","name":".ShortCutList.ShortCutID","custparents":[{"idx":"383ad077-c0e5-4c71-9e94-c8dccb1ea2a4"}]},{"idx":"90be6f82-163b-4057-bc97-d8bf87ea902e","name":".FileTypeType","custparents":[{"idx":"383ad077-c0e5-4c71-9e94-c8dccb1ea2a4"}]}],"collapsed":1},{"idx":"8a7233dc-55ae-4626-9de6-2aa6c05a669a","name":".DNA","custparents":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57"},{"idx":"2cb72276-7d3d-4bc6-9be4-2b67d624bfec"}],"children":[{"idx":"ee47359c-bed7-4525-8a9e-878955c9b21c","name":"DNA.html (copied from an egp v8 file)","custparents":[{"idx":"8a7233dc-55ae-4626-9de6-2aa6c05a669a"}]},{"idx":"6725da9a-4a0d-4b75-a550-94046dab1240","name":"DNA.DNA.FullPath (manually creating a egp v7 file)","custparents":[{"idx":"8a7233dc-55ae-4626-9de6-2aa6c05a669a"}]}],"collapsed":1}],"collapsed":1}]}]}],"oldparentidx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}}],"oldparentidx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}}]}}],"collapsed":1},{"idx":"686f7a5d-39a3-4da1-a99e-7dbc4582df7d","name":"Note Components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"b7b95088-2910-4d83-82e2-6909fff7f60c"}],"children":[{"idx":"c50c1eb6-73a3-442b-b300-5336ab66ffd0","name":"config_note_function()","custparents":[{"idx":"686f7a5d-39a3-4da1-a99e-7dbc4582df7d"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration for shortcut to external file</div><div class=\"ql-code-block\">async function config_note_function(note_input) {</div><div class=\"ql-code-block\">    let config_note = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1. config for ProjectCollection.Elements.Element(for the note component)</div><div class=\"ql-code-block\">    config_note.Element = {}</div><div class=\"ql-code-block\">    config_note.Element.Element = {}</div><div class=\"ql-code-block\">    // 1a. config for ProjectCollection.Elements.Element(for this noteToFile).Element</div><div class=\"ql-code-block\">    config_note.Element.Element.Label = note_input.Element.Label</div><div class=\"ql-code-block\">    config_note.Element.Element.ID = note_input.Element.ID</div><div class=\"ql-code-block\">    config_note.Element.Element.Container = note_input.config_pfd.Element.ID</div><div class=\"ql-code-block\">    config_note.Element.Element.CreatedOn = note_input.config_pfd.Element.CreatedOn</div><div class=\"ql-code-block\">    config_note.Element.Element.ModifiedOn = note_input.config_pfd.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_note.Element.Element.ModifiedBy = note_input.config_pfd.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_note.Element.Element.ModifiedByEGID = note_input.config_pfd.Element.ModifiedByEGID</div><div class=\"ql-code-block\">    // 1b. config for ProjectCollection.Elements.Element(for this noteToFile).Element.TextElement</div><div class=\"ql-code-block\">    config_note.Element.TextElement = {}</div><div class=\"ql-code-block\">    config_note.Element.TextElement.Text = note_input.TextElement.Text</div><div class=\"ql-code-block\">    // 1c. config for ProjectCollection.Elements.Element(for this noteToFile).Element.Note</div><div class=\"ql-code-block\">    config_note.Element.Note = {}</div><div class=\"ql-code-block\">    config_note.Element.Note.Parent = config_note.Element.Element.Container</div><div class=\"ql-code-block\">    config_note.Element.Note.Collapsed = note_input.Note.Collapsed ? note_input.Note.Collapsed : 'False'</div><div class=\"ql-code-block\">    // and more...</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. config for ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of the parent PFD).EGTreeNode</div><div class=\"ql-code-block\">    config_note.EGTreeNode = {}</div><div class=\"ql-code-block\">    config_note.EGTreeNode.NodeType = 'NODETYPE_ELEMENT'</div><div class=\"ql-code-block\">    config_note.EGTreeNode.ElementID = config_note.Element.Element.ID</div><div class=\"ql-code-block\">    config_note.EGTreeNode.Expanded = 'False'</div><div class=\"ql-code-block\">    config_note.EGTreeNode.Label = config_note.Element.Element.Label</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3. config for ProjectCollection.External_Objects.ProcessFlowView.Graphics.NoteGraphic</div><div class=\"ql-code-block\">    config_note.NoteGraphic = {}</div><div class=\"ql-code-block\">    config_note.NoteGraphic.ID = note_input.NoteGraphic.ID //use ID instead of .Id although the original tag is Id. The tag name &lt;Id&gt; is different from the &lt;ID&gt; tag in other components. SAS EG really need to be more standardized in naming the tags! Although for this one SAS can recognize it even changed from Id to ID</div><div class=\"ql-code-block\">    config_note.NoteGraphic.Label = config_note.Element.Element.Label</div><div class=\"ql-code-block\">    config_note.NoteGraphic.Element = config_note.Element.Element.ID</div><div class=\"ql-code-block\">    config_note.NoteGraphic.Collapsed = note_input.Note.Collapsed ? note_input.Note.Collapsed.toLowerCase() : 'false' // keep consistent with the Collpased setting in Note component (but in lower case here)</div><div class=\"ql-code-block\">    if (note_input.NoteGraphic.PosX) { config_note.NoteGraphic.PosX = note_input.NoteGraphic.PosX }</div><div class=\"ql-code-block\">    if (note_input.NoteGraphic.PosY) { config_note.NoteGraphic.PosY = note_input.NoteGraphic.PosY }</div><div class=\"ql-code-block\">    if (note_input.NoteGraphic.WidthExpanded) { config_note.NoteGraphic.WidthExpanded = note_input.NoteGraphic.WidthExpanded }</div><div class=\"ql-code-block\">    if (note_input.NoteGraphic.HeightExpanded) { config_note.NoteGraphic.HeightExpanded = note_input.NoteGraphic.HeightExpanded }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return config_note</div><div class=\"ql-code-block\">};// async function config_note_function(config_note)</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"b238a195-fbc3-4c05-9276-6b7a88a17a1b","name":".Element","custparents":[{"idx":"c50c1eb6-73a3-442b-b300-5336ab66ffd0"}],"children":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304","name":".Element","custparents":[{"idx":"b238a195-fbc3-4c05-9276-6b7a88a17a1b"}],"children":[{"idx":"140863b1-5ac0-4eeb-b157-d9a2dc3dc981","name":".ID","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"c76b4e2b-eee0-4a6c-b8ef-87ed79d7564d","name":".Label","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"52aa030c-2908-46cb-9e75-2fb561354d68","name":".Container","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"1b30b988-c48f-4a49-8a1e-82ccc3cfd372","name":".CreatedOn","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"d3f280a2-16be-4826-80f7-7b29304a9488","name":".ModifiedOn","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"64756730-3365-49f9-9e4c-701b50afccaa","name":".ModifiedBy","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]},{"idx":"e8e90ec1-74ab-411b-8d3a-bd5c0e7f6490","name":".ModifiedByEGID","custparents":[{"idx":"2886b715-6668-4b6c-b05e-2e5a5e51e304"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"MY02bfc5d1-45d3-4cf8-87b7-111fdf5e847e","name":".TextElement.Text","custparents":[{"idx":"b238a195-fbc3-4c05-9276-6b7a88a17a1b"}]},{"idx":"MY22ace90b-2aa8-446a-8992-11f2ef7fae27","name":".Note.Parent and .Note.Collapsed","custparents":[{"idx":"b238a195-fbc3-4c05-9276-6b7a88a17a1b"}]}],"collapsed":1,"oldparentidx":"c50c1eb6-73a3-442b-b300-5336ab66ffd0"},{"idx":"513ee8d5-486b-468e-8869-563de2d6da2a","name":".EGTreeNode","custparents":[{"idx":"c50c1eb6-73a3-442b-b300-5336ab66ffd0"}],"children":[{"idx":"1e5258be-3c6a-4f17-a383-b43fd8759bde","name":".NodeType","custparents":[{"idx":"513ee8d5-486b-468e-8869-563de2d6da2a"}]},{"idx":"1fad7f18-ed46-4515-87f5-75f87b7dbf78","name":".ElementID","custparents":[{"idx":"513ee8d5-486b-468e-8869-563de2d6da2a"}]},{"idx":"0343eb04-aefd-42e7-9896-5044a6195750","name":".Label","custparents":[{"idx":"513ee8d5-486b-468e-8869-563de2d6da2a"}]},{"idx":"MY322e73e0-0bc0-4ca8-a77c-17f696bb1e6e","name":"Expanded","custparents":[{"idx":"513ee8d5-486b-468e-8869-563de2d6da2a"}]}],"collapsed":1},{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775","name":".TaskGraphic","custparents":[{"idx":"c50c1eb6-73a3-442b-b300-5336ab66ffd0"}],"children":[{"idx":"787adc49-fe2c-4f79-9d9b-88baa507f4b9","name":".ID","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"1acb09ff-6b53-4c60-9881-f26660a8138c","name":".Label","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"9547d995-85b6-467b-b537-28cce77cb2b0","name":".Element","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"2faeaed5-6284-4805-8a7d-4bc7fd62dc09","name":".PosX","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"aa9fc01b-dd40-416a-aa37-c0a553ab98bf","name":".PosY","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"MY05e2acb4-6854-47fc-8063-241e69174aed","name":".WidthExpanded","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]},{"idx":"MY995e1472-6701-4910-ad71-caf1ff3c09ea","name":".HeightExpanded","custparents":[{"idx":"8e4149f7-25ee-46d3-9e23-acff72e63775"}]}],"collapsed":1}]},{"idx":"96c80e3d-a65e-4b94-8847-0dadaf5098b2","name":"make_append_note_component()","custparents":[{"idx":"686f7a5d-39a3-4da1-a99e-7dbc4582df7d"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append note_component</div><div class=\"ql-code-block\">async function make_append_note_component(doms_obj, config_note) {</div><div class=\"ql-code-block\">    // 1. make and append the element components</div><div class=\"ql-code-block\">    doms_obj = await make_append_note_element_component(doms_obj, config_note)</div><div class=\"ql-code-block\">    // 2. make and append the egtreenode components</div><div class=\"ql-code-block\">    doms_obj = await make_append_note_egtreenode_component(doms_obj, config_note)</div><div class=\"ql-code-block\">    // 3. make and append the notegraphic components</div><div class=\"ql-code-block\">    doms_obj = await make_append_note_nodegraphic_component(doms_obj, config_note)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">};//async function make_append_note_component(doms_obj, config_note)</div></div><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a","name":"1. Element: make_append_note_ element_component()","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"},{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4","name":"2. EGTreeNode: make_append_note_ egtreenode_component()","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e","name":"3. NoteGraphic: make_append_note_ notegraphic_component()","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the notegraphic components</div><div class=\"ql-code-block\">async function make_append_note_nodegraphic_component(doms_obj, config_note) {</div><div class=\"ql-code-block\">    // 1. make note_notegraphic</div><div class=\"ql-code-block\">    let note_notegraphic_dom_obj = await make_notegraphic_component(config_note.NoteGraphic)</div><div class=\"ql-code-block\">    // console.log('line168', note_notegraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the NoteGraphic to ProjectColletion.External_Objects.ProcessFlowView.Graphics</div><div class=\"ql-code-block\">    // Note: ProjectColletion.External_Objects.ProcessFlowView.Graphics is not specific by PFD</div><div class=\"ql-code-block\">    let the_graphic_dom_obj = $(doms_obj.find('External_Objects').find('ProcessFlowView').find('Graphics')[0])</div><div class=\"ql-code-block\">    the_graphic_dom_obj.append(note_notegraphic_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //async function make_append_note_nodegraphic_component(doms_obj, config_note)</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3","name":"substeps","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}],"children":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed","name":"1. Make NoteGraphic: make_notegraphic _component()","custparents":[{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3"}],"children":[{"idx":"MYbf0c9241-e6f0-4b05-bfcf-38501f923172","name":"2. Append to ProjectColletion .External_Objects .ProcessFlowView .Graphics","custparents":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed"}]}]}]},"collapsed":0}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the egtreenode components</div><div class=\"ql-code-block\">async function make_append_note_egtreenode_component(doms_obj, config_note) {</div><div class=\"ql-code-block\">    // 1. make note egtreenode </div><div class=\"ql-code-block\">    // 1. make shortcuttofile_egtreenode_component</div><div class=\"ql-code-block\">    let note_egtreenode_component = await make_egtreenode(config_note.EGTreeNode)</div><div class=\"ql-code-block\">    // 2. append the component to ProjectCollection.External_Objectives.EGTreeNode(of the parent PFD)</div><div class=\"ql-code-block\">    // 2.1 find the parent PFD</div><div class=\"ql-code-block\">    let the_egtreenode_pfd_dom_obj = get_egtreenode_of_pfd_by_pfdid(doms_obj, config_note.Element.Element.Container)</div><div class=\"ql-code-block\">    // console.log('line173', the_egtreenode_pfd_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    the_egtreenode_pfd_dom_obj.append(note_egtreenode_component)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //async function make_append_note_egtreenode_component(doms_obj, config_note)</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db","name":"substeps","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"children":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f","name":"1. Make EGTreeNode: make_egtreenode()","custparents":[{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db"}],"children":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701","name":"2. Find the parent PFD's EGTreeNode: get_egtreenode_ of_pfd_by_ pfdid()","custparents":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"children":[{"idx":"965e984a-e2a6-46b5-b054-fd6980b58550","name":"3. append the shortcuttofile EGTreeNode to ProgramsFolder's EGTreeNode","custparents":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701"},{"idx":"28354ec6-bcbb-4ba5-8ef3-297e4e6fbed2"}]}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append the element components</div><div class=\"ql-code-block\">async function make_append_note_element_component(doms_obj, config_note) {</div><div class=\"ql-code-block\">    // 1. make note element</div><div class=\"ql-code-block\">    let note_element_component = await make_note_element_component(config_note)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append note element to ProjectCollection.Elements</div><div class=\"ql-code-block\">    $(doms_obj.find('Elements')[0]).append(note_element_component)</div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //async function make_append_note_element_component(doms_obj, config_note)</div></div><p>t///</p>","_substeps":{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968","name":"substeps","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec","name":"1. make Element: make_note_element_component()","custparents":[{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make note's Element component </div><div class=\"ql-code-block\">async function make_note_element_component(config_note) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___j01_note_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line104', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of this note).Element</div><div class=\"ql-code-block\">    let element_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    // console.log('line160', element_element_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    // console.log('line161', config_note.ExternalFile ); return</div><div class=\"ql-code-block\">    if (config_note.Element.Element.Label) { $(element_element_dom_obj.find('Label')[0]).text(config_note.Element.Element.Label) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.Container) { $(element_element_dom_obj.find('Container')[0]).text(config_note.Element.Element.Container) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.ID) { $(element_element_dom_obj.find('ID')[0]).text(config_note.Element.Element.ID) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.CreatedOn) { $(element_element_dom_obj.find('CreatedOn')[0]).text(config_note.Element.Element.CreatedOn) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.ModifiedOn) { $(element_element_dom_obj.find('ModifiedOn')[0]).text(config_note.Element.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.ModifiedBy) { $(element_element_dom_obj.find('ModifiedBy')[0]).text(config_note.Element.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.ModifiedByEGID) { $(element_element_dom_obj.find('ModifiedByEGID')[0]).text(config_note.Element.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    if (config_note.Element.Element.InputIDs) { $(element_element_dom_obj.find('InputIDs')[0]).text(config_note.Element.Element.InputIDs) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the note).TextElement.Text</div><div class=\"ql-code-block\">    let element_textelement_dom_obj = $(component_dom_obj.find('TextElement')[0])</div><div class=\"ql-code-block\">    if (config_note.Element.TextElement.Text) {</div><div class=\"ql-code-block\">        let note_text = config_note.Element.TextElement.Text</div><div class=\"ql-code-block\">        // let note_text_convert_to_ampersandsymbols = convert_string_to_ampersand_symbols(note_text)</div><div class=\"ql-code-block\">        // $(element_textelement_dom_obj.find('Text')[0]).text(note_text_convert_to_ampersandsymbols) </div><div class=\"ql-code-block\">        $(element_textelement_dom_obj.find('Text')[0]).text(note_text) // note_text contains ampersand_symbols, use text() to convert symbols (e.g., &amp;lt;&amp;gt; to &lt;&gt;)</div><div class=\"ql-code-block\">    } // if (config_note.Element.TextElement.Text) { </div><div class=\"ql-code-block\">    // could config more...                   </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the note).Note.Parent</div><div class=\"ql-code-block\">    let element_note_dom_obj = $(component_dom_obj.find('Note')[0])</div><div class=\"ql-code-block\">    if (config_note.Element.Note.Parent) { $(element_note_dom_obj.find('Parent')[0]).text(config_note.Element.Note.Parent) }</div><div class=\"ql-code-block\">    if (config_note.Element.Note.Collapsed) { $(element_note_dom_obj.find('Collapsed')[0]).text(config_note.Element.Note.Collapsed) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">}; //async function make_note_element_component</div></div><p>t///</p>","children":[{"idx":"b2c269f1-2ba1-4863-8345-c7998fb3c0b6","name":"2. append to ProjectCollection.Elements","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}]}],"collapsed":0,"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"children":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7","name":"3. config components","custparents":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330","name":".Element","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"4528a23f-c6e2-4d4f-a6a1-cd3d11e5c88f"}],"children":[{"idx":"3b9a3e2b-d399-4e50-9de8-f323821ed53e","name":".ID","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"ce7b24ae-e80c-4ecc-8c49-c2ecf1b83417","name":".Label","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"23c85a75-ffef-4fb4-bb68-434f681be910","name":".Container","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"92db8899-3dd9-470a-a5eb-162cfb2417ad","name":".CreatedOn","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"2fdc70d2-9b69-404b-90c7-6f1e6bc30b84","name":".ModifiedOn","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"549b53c8-a0fe-402c-af7b-aaf1de571cab","name":".ModifiedBy","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]},{"idx":"686303c0-7fbf-4e43-aedf-0029d8ecc62d","name":".ModifiedByEGID","custparents":[{"idx":"b0f81c26-2ad8-4f99-a2fb-33e2debf9330"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"141f7230-27f1-4d59-92ad-09259d405efb","name":".TextElement.Text","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"4528a23f-c6e2-4d4f-a6a1-cd3d11e5c88f"}]},{"idx":"a98b9735-a5ba-4937-8074-b520f53ad2cc","name":".Note.Parent and .Note.Collapsed","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"4528a23f-c6e2-4d4f-a6a1-cd3d11e5c88f"}]}],"collapsed":1}]}]}]}}]}}]}}],"collapsed":1},{"idx":"140cd658-0d69-4cc0-921b-3dd9a45998da","name":"EGTask Components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"6f1ae1e0-50b4-4be9-a237-f221a0331e8d"}],"children":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e","name":"config_egtask_function()","custparents":[{"idx":"140cd658-0d69-4cc0-921b-3dd9a45998da"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration of the EGtask components</div><div class=\"ql-code-block\">async function config_egtask_function(config_pfd, egtask_input) {</div><div class=\"ql-code-block\">    let config_egtask = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1a. configuration for the element properties for the code task's Element component (the properties of the task)</div><div class=\"ql-code-block\">    config_egtask.Element = {}</div><div class=\"ql-code-block\">    config_egtask.Element.Label = egtask_input.Element.Label//'egtask1'</div><div class=\"ql-code-block\">    config_egtask.Element.Type = 'TASK'</div><div class=\"ql-code-block\">    // console.log('line811',config_pfd)</div><div class=\"ql-code-block\">    config_egtask.Element.Container = config_pfd.Element.ID</div><div class=\"ql-code-block\">    config_egtask.Element.ID = egtask_input.Element.ID</div><div class=\"ql-code-block\">    config_egtask.Element.CreatedOn = config_pfd.Element.CreatedOn</div><div class=\"ql-code-block\">    config_egtask.Element.ModifiedOn = config_pfd.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_egtask.Element.ModifiedBy = config_pfd.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_egtask.Element.ModifiedByEGID = config_pfd.Element.ModifiedByEGID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1b. configuration for the SubmitableElement components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the curreant task)</div><div class=\"ql-code-block\">    // there is nothing to change from the default config</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1c. configuration for the EGTask components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the curreant EGtask)</div><div class=\"ql-code-block\">    config_egtask.Element.EGTask = {}</div><div class=\"ql-code-block\">    if (egtask_input.EGTask &amp;&amp; egtask_input.EGTask.Task_CLSID) { config_egtask.Element.EGTask.Task_CLSID = egtask_input.EGTask.Task_CLSID }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //2. configuration for the process components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the current EGtask)</div><div class=\"ql-code-block\">    config_egtask.Process = {}</div><div class=\"ql-code-block\">    config_egtask.Process.Element = {}</div><div class=\"ql-code-block\">    config_egtask.Process.Element.ID = config_egtask.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //3. configuration for the EGTreeNode components that are to be added to ProjectCollection.External_Objects.EGTreeNode(of the task's parent PFD).EGTreeNode(for wrapping all programs/tasks)</div><div class=\"ql-code-block\">    config_egtask.EGTreeNode = {}</div><div class=\"ql-code-block\">    config_egtask.EGTreeNode.NodeType = 'NODETYPE_ELEMENT'</div><div class=\"ql-code-block\">    config_egtask.EGTreeNode.ElementID = config_egtask.Element.ID</div><div class=\"ql-code-block\">    config_egtask.EGTreeNode.Label = config_egtask.Element.Label</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //4. for the TaskGraphic components that are to be added to ProjectColletion.External_Objects.ProcessFlowView.Graphics</div><div class=\"ql-code-block\">    config_egtask.TaskGraphic = {}</div><div class=\"ql-code-block\">    // the TaskGraphic ID is different from the PFD or CodeTask ID (16-bit random strings. A 16-bit string is not a true 32-bit GUID), (it is a true 32 bit GUID)</div><div class=\"ql-code-block\">    config_egtask.TaskGraphic.ID = egtask_input.TaskGraphic.ID</div><div class=\"ql-code-block\">    config_egtask.TaskGraphic.Label = config_egtask.Element.Label</div><div class=\"ql-code-block\">    config_egtask.TaskGraphic.Element = config_egtask.Element.ID</div><div class=\"ql-code-block\">    if (egtask_input.TaskGraphic.PosX) { config_egtask.TaskGraphic.PosX = egtask_input.TaskGraphic.PosX }</div><div class=\"ql-code-block\">    if (egtask_input.TaskGraphic.PosY) { config_egtask.TaskGraphic.PosY = egtask_input.TaskGraphic.PosY }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 5. SAS xml of the EGTask </div><div class=\"ql-code-block\">    if (egtask_input.xmlstr) { // .xmlstr is for manual input. When converting from a v8 egp, .xmlstr does not have value and this part is skipped. </div><div class=\"ql-code-block\">        config_egtask.xmlstr = egtask_input.xmlstr</div><div class=\"ql-code-block\">    } //if (egtask_input.code)   </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return config_egtask</div><div class=\"ql-code-block\">}; //async function config_egtask_function</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"5b2cf421-31c9-455f-be9d-6055d971b982","name":".Element","custparents":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e"}],"children":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f","name":".Element","custparents":[{"idx":"5b2cf421-31c9-455f-be9d-6055d971b982"}],"children":[{"idx":"4b9b6c0f-cbd3-4531-b276-177b02dc9cf4","name":".ID","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"d7e75355-7f1e-4c14-9e09-0ef8d21347e4","name":".Label","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"3dd00ba4-bb84-42cd-a8e7-b288b0e50d83","name":".Type","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"e1299fa6-5a43-446e-8910-5d7fb82421df","name":".Container","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"5a99998d-d2ca-4528-911c-fec32594cf67","name":".CreatedOn","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"4c7a1802-c8b9-443e-820b-64893a66e011","name":".ModifiedOn","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"0ea7d933-80c5-4884-b7a7-fb5243f2e2d1","name":".ModifiedBy","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]},{"idx":"ad1c554e-a22e-42ae-b894-9bcef486a39d","name":".ModifiedByEGID","custparents":[{"idx":"f0ec5c58-0725-46c7-9539-a336583bef7f"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"a40fd6a2-25ff-438d-8743-a1f770c4f7c4","name":".EGTask.Task_CLSID","custparents":[{"idx":"5b2cf421-31c9-455f-be9d-6055d971b982"}],"collapsed":0}],"collapsed":1},{"idx":"3e98811a-81d4-417e-a6dc-76de48984557","name":"ProjectCollection.Elements .Element (of parent PFD) .PFD.Process .Element.ID","custparents":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e"}]},{"idx":"932e0ad7-47c8-4d78-a761-c30bdd79f2d1","name":".EGTreeNode","custparents":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e"}],"children":[{"idx":"f66d2219-9bf3-48bc-8189-395552916e11","name":".NodeType","custparents":[{"idx":"932e0ad7-47c8-4d78-a761-c30bdd79f2d1"}]},{"idx":"f8620fcc-a069-4bd0-aa74-33df15d5e3d1","name":".ElementID","custparents":[{"idx":"932e0ad7-47c8-4d78-a761-c30bdd79f2d1"}]},{"idx":"b8bee7c7-10df-4fe6-ad6d-9c6233dd710c","name":".Label","custparents":[{"idx":"932e0ad7-47c8-4d78-a761-c30bdd79f2d1"}]}],"collapsed":1},{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4","name":".TaskGraphic","custparents":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e"}],"children":[{"idx":"14c58dc6-5326-4fbe-bf11-ac8f1f66326b","name":".ID","custparents":[{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4"}]},{"idx":"893f8e68-6f2e-4894-b66f-d3f485e87f66","name":".Label","custparents":[{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4"}]},{"idx":"8cec8d3d-cee5-4e75-9692-1363566bcbb3","name":".Element","custparents":[{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4"}]},{"idx":"5b4e7dd0-5bb2-4c5c-a4dc-dec521bf8f43","name":".PosX","custparents":[{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4"}]},{"idx":"b799bf06-bc71-440a-bcc0-87ed56262e89","name":".PosY","custparents":[{"idx":"346de1d5-9e6a-48b1-96af-c6f4e35fbbd4"}]}],"collapsed":1},{"idx":"776f6edf-9021-4694-aa76-38953b3bf366","name":".xmlstr (manually input EGTask xml code)","custparents":[{"idx":"7639ccf5-f178-4ebe-b5ab-e7879f14af2e"}]}]},{"idx":"6ee9922c-bd68-4a26-9654-0162cf3a6166","name":"make_append_ egtask_component()","custparents":[{"idx":"140cd658-0d69-4cc0-921b-3dd9a45998da"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append egtask related components</div><div class=\"ql-code-block\">async function make_append_egtask_component(doms_obj, config_egtask, targetzip_v7) {</div><div class=\"ql-code-block\">    // // 1. within a PFD component's PFD tag (ProjectCollection.Elements.Element(PFD).PFD), add a process component with the egtaskID</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_process_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. within ProjectCollection.Elements, add a element tag for egtask (in which multiple tags are encompassed)</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_element_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // 3. within ProjectColletion.External_Objects.ProjectTreeView.EGTreeNode(for PFD1).EGTreeNode(for wrapping all programs/egtasks), add a EGTreeNode component</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_egtreenode_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // 4. within ProjectColletion.External_Objects.ProcessFlowView.Graphics, add a egtaskGraphic component</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_taskgraphic_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\">    // console.log('line215', config_egtask)</div><div class=\"ql-code-block\">    // 5. add the program text and insert into the egp zip (only do it when the config_egtask.xmlstr is not null, e.g., the egtask is manually input instead of input from a v8 egp file</div><div class=\"ql-code-block\">    if (config_egtask.xmlstr &amp;&amp; config_egtask.xmlstr !== '') {</div><div class=\"ql-code-block\">        // console.log('line218', config_egtask.xmlstr)</div><div class=\"ql-code-block\">        let egtask_xmlstr = config_egtask.xmlstr</div><div class=\"ql-code-block\">        // Note: the sas code file (code.sas) is of utf-8 encoding. Also, the egtask xml (EGegtask-&lt;...id...&gt;.xml) is also of utf-8. These are different from the project.xml (project.xml is of utf16le encoding)</div><div class=\"ql-code-block\">        targetzip_v7.addFile(config_egtask.Element.ID + '\\\\' + config_egtask.Element.ID + '.xml', Buffer.from(egtask_xmlstr, \"utf-8\"))</div><div class=\"ql-code-block\">    } // config_egtask.code</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_append_egtask_element_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea","name":"1. PFD.Process: make_append_ egtask_process_component()","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"}],"children":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a","name":"2. Element: make_append_ egtask_element_component()","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4","name":"3. EGTreeNode: make_append_ egtask_egtreenode_component()","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e","name":"4. TaskGraphic: make_append_egtask _taskgraphic_component()","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//within ProjectColletion.External_Objects.ProcessFlowView.Graphics, add a TaskGraphic component</div><div class=\"ql-code-block\">async function make_append_egtask_taskgraphic_component(doms_obj, config_egtask) {</div><div class=\"ql-code-block\">    // 1a. make egtask_taskgraphic</div><div class=\"ql-code-block\">    let egtask_taskgraphic_dom_obj = await make_taskgraphic_component(config_egtask.TaskGraphic)</div><div class=\"ql-code-block\">    // console.log('line68', egtask_taskgraphic_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1b. append task_taskgraphic components</div><div class=\"ql-code-block\">    // The ProjectColletion.External_Objects.ProcessFlowView.Graphics is not specific by PFD</div><div class=\"ql-code-block\">    // As such, there is no need to loop and find the specific PFD for the task_taskgraphic</div><div class=\"ql-code-block\">    let the_graphic_dom_obj = $(doms_obj.find('External_Objects').find('ProcessFlowView').find('Graphics')[0])</div><div class=\"ql-code-block\">    the_graphic_dom_obj.append(egtask_taskgraphic_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_task_taskgraphic_component </div></div><p>t///</p>","children":[{"idx":"MY7a9c4a0f-6b49-4b00-973e-002d8b50687e","name":"5. add xml code file (if manually making a v7 .egp file)","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}]}],"collapsed":0,"_substeps":{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3","name":"substeps","custparents":[{"idx":"MY1bd8b861-48d0-4005-b4ae-097f822d624e"}],"children":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed","name":"1. Make TaskGraphic: make_taskgraphic _component()","custparents":[{"idx":"MY0629b5e0-984e-4dad-8758-bcb7ec0d47e3"}],"children":[{"idx":"MYbf0c9241-e6f0-4b05-bfcf-38501f923172","name":"2. Append to ProjectColletion .External_Objects .ProcessFlowView .Graphics","custparents":[{"idx":"MY1a3c8495-9480-4023-9a01-da0b1fe9f0ed"}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// within ProjectColletion.External_Objects.ProjectTreeView.EGTreeNode(for PFD1), add a EGTreeNode component for the current EGTask</div><div class=\"ql-code-block\">async function make_append_egtask_egtreenode_component(doms_obj, config_egtask) {</div><div class=\"ql-code-block\">    // 1a. make egtask_egtreenode_component</div><div class=\"ql-code-block\">    let egtask_egtreenode_dom_obj = await make_egtreenode(config_egtask.EGTreeNode)</div><div class=\"ql-code-block\">    // console.log('line69', egtask_egtreenode_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    // 1b. append egtask_egtreenode_component</div><div class=\"ql-code-block\">    // find all PFD EGTreeNode under Elements ProjectColletion.External_Objects.ProjectTreeView</div><div class=\"ql-code-block\">    let the_egtreenode_pfd_dom_obj = get_egtreenode_of_pfd_by_pfdid(doms_obj, config_egtask.Element.Container)</div><div class=\"ql-code-block\">    // console.log('line173', the_egtreenode_pfd_dom_obj.prop('outerHTML') )</div><div class=\"ql-code-block\">    the_egtreenode_pfd_dom_obj.append(egtask_egtreenode_dom_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_egtask_egtreenode_component </div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db","name":"substeps","custparents":[{"idx":"MY1fbe0552-b5c1-4b1e-9e91-d43110ee07e4"}],"children":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f","name":"1. Make EGTreeNode: make_egtreenode()","custparents":[{"idx":"MY35ea7413-b32c-4018-abc6-7207a59893db"}],"children":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701","name":"2. Find the parent PFD's EGTreeNode: get_egtreenode_ of_pfd_by_ pfdid()","custparents":[{"idx":"MY4922655a-7303-4f6b-b521-cd96b7fbf56f"}],"children":[{"idx":"965e984a-e2a6-46b5-b054-fd6980b58550","name":"3. append the shortcuttofile EGTreeNode to PFD's EGTreeNode","custparents":[{"idx":"f3845914-454e-498d-874b-4378c1e4c701"},{"idx":"28354ec6-bcbb-4ba5-8ef3-297e4e6fbed2"}]}]}]}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append egtask related components</div><div class=\"ql-code-block\">async function make_append_egtask_component(doms_obj, config_egtask, targetzip_v7) {</div><div class=\"ql-code-block\">    // // 1. within a PFD component's PFD tag (ProjectCollection.Elements.Element(PFD).PFD), add a process component with the egtaskID</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_process_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. within ProjectCollection.Elements, add a element tag for egtask (in which multiple tags are encompassed)</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_element_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // 3. within ProjectColletion.External_Objects.ProjectTreeView.EGTreeNode(for PFD1).EGTreeNode(for wrapping all programs/egtasks), add a EGTreeNode component</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_egtreenode_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // 4. within ProjectColletion.External_Objects.ProcessFlowView.Graphics, add a egtaskGraphic component</div><div class=\"ql-code-block\">    doms_obj = await make_append_egtask_taskgraphic_component(doms_obj, config_egtask)</div><div class=\"ql-code-block\">    // console.log('line215', config_egtask)</div><div class=\"ql-code-block\">    // 5. add the program text and insert into the egp zip (only do it when the config_egtask.xmlstr is not null, e.g., the egtask is manually input instead of input from a v8 egp file</div><div class=\"ql-code-block\">    if (config_egtask.xmlstr &amp;&amp; config_egtask.xmlstr !== '') {</div><div class=\"ql-code-block\">        // console.log('line218', config_egtask.xmlstr)</div><div class=\"ql-code-block\">        let egtask_xmlstr = config_egtask.xmlstr</div><div class=\"ql-code-block\">        // Note: the sas code file (code.sas) is of utf-8 encoding. Also, the egtask xml (EGegtask-&lt;...id...&gt;.xml) is also of utf-8. These are different from the project.xml (project.xml is of utf16le encoding)</div><div class=\"ql-code-block\">        targetzip_v7.addFile(config_egtask.Element.ID + '\\\\' + config_egtask.Element.ID + '.xml', Buffer.from(egtask_xmlstr, \"utf-8\"))</div><div class=\"ql-code-block\">    } // config_egtask.code</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_append_egtask_element_component</div></div><p>t///</p>","collapsed":0,"_substeps":{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968","name":"substeps","custparents":[{"idx":"MYd03c9381-0911-426a-b0e0-17909837e56a"}],"children":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec","name":"1. make Element: make_egtask_ element_component()","custparents":[{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make the Element component and append to ProjectCollection.Elements (Type = \"SAS.EG.ProjectElements.EGTask\")</div><div class=\"ql-code-block\">async function make_egtask_element_component(config_egtask) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___k01_egtask_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    // let thesrcxmlstr = await mymodules.readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line61', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the egtask).Element</div><div class=\"ql-code-block\">    let egtask_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    if (config_egtask.Element.Label) { $(egtask_element_dom_obj.find('Label')[0]).text(config_egtask.Element.Label) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.Container) { $(egtask_element_dom_obj.find('Container')[0]).text(config_egtask.Element.Container) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.ID) { $(egtask_element_dom_obj.find('ID')[0]).text(config_egtask.Element.ID) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.CreatedOn) { $(egtask_element_dom_obj.find('CreatedOn')[0]).text(config_egtask.Element.CreatedOn) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.ModifiedOn) { $(egtask_element_dom_obj.find('ModifiedOn')[0]).text(config_egtask.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.ModifiedBy) { $(egtask_element_dom_obj.find('ModifiedBy')[0]).text(config_egtask.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_egtask.Element.ModifiedByEGID) { $(egtask_element_dom_obj.find('ModifiedByEGID')[0]).text(config_egtask.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // config the ProjectCollection.Elements.Element(of the egtask).SubmitableElement</div><div class=\"ql-code-block\">    // let egtask_submitableelement_dom_obj = $(component_dom_obj.find('SubmitableElement')[0])</div><div class=\"ql-code-block\">    // // could cofig more, e.g., HtmlStyleUrlOverride, SasReportStyleUrlOverride (location of the SAS Home)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // configuration for the EGTask components that are to be added to ProjectCollection.Elements.Element(PFD).Element(element of the curreant EGtask)</div><div class=\"ql-code-block\">    if (config_egtask.Element.EGTask.Task_CLSID) { $(component_dom_obj.find('EGTask').find('Task_CLSID')[0]).text(config_egtask.Element.EGTask.Task_CLSID) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">};//async function make_egtask_element_component</div></div><p>t///</p>","children":[{"idx":"b2c269f1-2ba1-4863-8345-c7998fb3c0b6","name":"2. append to ProjectCollection.Elements","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}]}],"collapsed":0,"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"children":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7","name":"3. config components","custparents":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY0a1d2cb1-b24e-41f9-bfe1-59991ad07f85","name":"substeps","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"}],"children":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392","name":".Element","custparents":[{"idx":"MY0a1d2cb1-b24e-41f9-bfe1-59991ad07f85"}],"children":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437","name":".Element","custparents":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392"}],"children":[{"idx":"f147dd93-48e2-463a-845f-0afa2a3bbafb","name":".ID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"8ebf01fb-2ac4-4cee-be23-45517c8e7387","name":".Label","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"07b9949d-2fe3-4c5c-b567-3691382ecf80","name":".Container","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e807bf65-6f0e-49a3-beeb-fe24a3e9be34","name":".CreatedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"1383bfb3-6302-469f-9712-34cb27c0d236","name":".ModifiedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e391919f-8659-455d-9089-1814faeab06d","name":".ModifiedBy","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"ee9d61f0-c11f-4f02-9daf-fd66e1cc8e1a","name":".ModifiedByEGID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1,"oldparentidx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"MYb88dd02b-342a-4783-8a15-4d629e1aa29f","name":".EGTask.Task_CLSID","custparents":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392"}]}]}]}}]}]}]}}]}}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">//within a PFD component's PFD tag (ProjectCollection.Elements.Element(PFD).PFD), add a process component with the egtaskID</div><div class=\"ql-code-block\">async function make_append_egtask_process_component(doms_obj, config_egtask) {</div><div class=\"ql-code-block\">    // console.log('line150', doms_obj)</div><div class=\"ql-code-block\">    // 1a. make egtask_process            </div><div class=\"ql-code-block\">    let egtask_process_doms_obj = await make_egtask_process_component(config_egtask)</div><div class=\"ql-code-block\">    // console.log('line54', egtask_process_doms_obj.prop('outerHTML'))</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 1b. append egtask_process to the corresponding PFD</div><div class=\"ql-code-block\">    // find all PFD Elements under Elements</div><div class=\"ql-code-block\">    let element_pfd_dom_obj = get_element_of_pfd_by_pfdid(doms_obj, config_egtask.Element.Container)</div><div class=\"ql-code-block\">    $(element_pfd_dom_obj.find('PFD')[0]).append(egtask_process_doms_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; // async function make_append_egtask_process_component </div></div><p>t///</p>","_substeps":{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","name":"substeps","custparents":[{"idx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}],"children":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02","name":"1. make process: make_egtask_ process_component()","custparents":[{"idx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make process components for a task</div><div class=\"ql-code-block\">async function make_egtask_process_component(config_egtask) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___z05_process_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line57', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    if (config_egtask.Process.Element.ID) { $(component_dom_obj.find('Element').find('ID')[0]).text(config_egtask.Process.Element.ID) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\">};//async function make_egtask_process_component</div></div><p>t///</p>","children":[{"idx":"MY2846a568-2da9-4dd6-bb01-03d1979585de","name":"2. append to PFD: get_element_ of_pfd_by_pfdid()","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}]}],"collapsed":0,"oldparentidx":"MY371a392e-c147-483a-b6b0-a0d03b3b351a","_substeps":{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e","name":"substeps","custparents":[{"idx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}],"children":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"MYb8850d5a-171d-4b1d-8c42-0311e8d4533e"}],"children":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33"}],"children":[{"idx":"MY298c0bab-dff2-4510-994a-2eca29e4be57","name":"3. config components","custparents":[{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}]}],"oldparentidx":"MY2f6fc480-3b4b-41ce-8f40-3d2fcc2acd02"}}],"oldparentidx":"MYe7ff03d5-a093-4257-ade4-cec16bca7fea"}}]}}],"collapsed":1,"oldparentidx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"630c4ddb-f0d5-44e9-a2c1-866d44e4577e","name":"Link Components","custparents":[{"idx":"MY70324ab1-25f5-4290-b346-1b3c8a9edfa6"},{"idx":"6f1ae1e0-50b4-4be9-a237-f221a0331e8d"},{"idx":"3b615910-dfc0-472f-99d7-4b1c125648b6"}],"children":[{"idx":"6ceb2e80-2dd3-4e75-8136-f96b2ae8ea06","name":"config_link_function()","custparents":[{"idx":"630c4ddb-f0d5-44e9-a2c1-866d44e4577e"},{"idx":"MY841ef4e7-d2af-4a86-9d4a-2fa4b0ec2b66"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// configuration of link</div><div class=\"ql-code-block\">async function config_link_function(link_input) {</div><div class=\"ql-code-block\">    // console.log('line91', link_input.LinkFrom)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let config_link = {}</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1a. configuration for the element properties for the  link's Element component (the properties of the link)</div><div class=\"ql-code-block\">    config_link.Element = {}</div><div class=\"ql-code-block\">    config_link.Element.Label = link_input.Label//'p1 to p2'</div><div class=\"ql-code-block\">    config_link.Element.Type = 'LINK'</div><div class=\"ql-code-block\">    config_link.Element.Container = link_input.LinkFrom_config.Element.Container // !!!</div><div class=\"ql-code-block\">    config_link.Element.ID = link_input.ID</div><div class=\"ql-code-block\">    config_link.Element.CreatedOn = link_input.LinkFrom_config.Element.CreatedOn</div><div class=\"ql-code-block\">    config_link.Element.ModifiedOn = link_input.LinkFrom_config.Element.ModifiedOn</div><div class=\"ql-code-block\">    config_link.Element.ModifiedBy = link_input.LinkFrom_config.Element.ModifiedBy</div><div class=\"ql-code-block\">    config_link.Element.ModifiedByEGID = link_input.LinkFrom_config.Element.ModifiedByEGID</div><div class=\"ql-code-block\">    config_link.Element.InputIDs = link_input.LinkFrom_config.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //1b. configuration for the Log components of ProjectCollection.Elements.Element(PFD).Element(element of the curreant link)</div><div class=\"ql-code-block\">    config_link.Log = {}</div><div class=\"ql-code-block\">    config_link.Log.Parent = link_input.LinkFrom_config.Element.ID</div><div class=\"ql-code-block\">    config_link.Log.LinkFrom = link_input.LinkFrom_config.Element.ID</div><div class=\"ql-code-block\">    config_link.Log.LinkTo = link_input.LinkTo_config.Element.ID</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return config_link</div><div class=\"ql-code-block\">}; //async function config_link_function(link_input)</div></div><p>t///</p>","collapsed":1,"children":[{"idx":"87deb7ca-4872-4467-8c83-842d9cd606a9","name":".Element","custparents":[{"idx":"6ceb2e80-2dd3-4e75-8136-f96b2ae8ea06"}],"children":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff","name":".Element","custparents":[{"idx":"87deb7ca-4872-4467-8c83-842d9cd606a9"}],"children":[{"idx":"c8f7924f-ef53-4e61-9a75-1e7fc01f4803","name":".ID","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"4c0a1ca6-3077-430c-bbd7-34aa5909f95a","name":".Label","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"4f54c4b2-4f81-4505-be5d-6c1588120c42","name":".Type","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"5bac35cf-c90d-4c1f-9f98-7cdb40ef44f6","name":".Container","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"8f8f6496-5c30-42f7-8500-8962f62c74a3","name":".CreatedOn","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"0956ab9c-e45d-4e37-881c-a76ca58930c7","name":".ModifiedOn","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"0d2d327a-a0a5-4d91-b396-4a009efeb118","name":".ModifiedBy","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"fc0aa8e7-fcb4-474f-95e5-25b8bbf857f5","name":".ModifiedByEGID","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]},{"idx":"MYfaa8eef2-d055-42e7-9d2a-c2ed79d42830","name":".InputIDs","custparents":[{"idx":"55fdd72d-18d4-438f-a352-7aaa4620c7ff"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1},{"idx":"MY6a4f13f8-1f14-4bfd-bdfe-f35555aaf3a1","name":".Log","custparents":[{"idx":"87deb7ca-4872-4467-8c83-842d9cd606a9"}],"children":[{"idx":"MYea26d853-7857-4094-9742-ea5b58168c88","name":".Parent","custparents":[{"idx":"MY6a4f13f8-1f14-4bfd-bdfe-f35555aaf3a1"}]},{"idx":"MY96cb430f-52bc-4709-95a4-f8e18b05691e","name":".LinkFrom","custparents":[{"idx":"MY6a4f13f8-1f14-4bfd-bdfe-f35555aaf3a1"}]},{"idx":"MY99525035-c256-4bcb-a89d-6777d01a1326","name":".LinkTo","custparents":[{"idx":"MY6a4f13f8-1f14-4bfd-bdfe-f35555aaf3a1"}]}],"collapsed":1}],"collapsed":1}]},{"idx":"1df5bc47-f139-46df-b5d5-12d59b9d3249","name":"make_append_ link_component()","custparents":[{"idx":"630c4ddb-f0d5-44e9-a2c1-866d44e4577e"},{"idx":"MYabcadb13-d1a0-4afc-8846-fb324022db5d"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make and append &lt;Element Type=\"SAS.EG.ProjectElements.Link\"&gt; to ProjectCollection.Elements</div><div class=\"ql-code-block\">async function make_append_link_component(doms_obj, config_link) {</div><div class=\"ql-code-block\">    // 1. make the link component</div><div class=\"ql-code-block\">    let link_element_doms_obj = await make_link_element_component(config_link)</div><div class=\"ql-code-block\">    // console.log('line98', link_element_doms_obj.prop('outerHTML'))            </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. append the link component to ProjectCollection.Elements</div><div class=\"ql-code-block\">    $(doms_obj.find('Elements')[0]).append(link_element_doms_obj)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return doms_obj</div><div class=\"ql-code-block\">}; //async function make_append_link_component</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7","name":"substeps","custparents":[{"idx":"MYc970d870-8bf2-4586-8504-088c92014bc4"}],"children":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec","name":"1. make Element: make_link element_component()","custparents":[{"idx":"MY603ea8a3-c741-4be9-950a-25eda4ea25c7"},{"idx":"9492796b-f53f-4d71-bef7-61dd517e7968"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// make link component</div><div class=\"ql-code-block\">async function make_link_element_component(config_link) {</div><div class=\"ql-code-block\">    // load the prototype xml for the target component</div><div class=\"ql-code-block\">    let thesrcxmlfile = 'data/in/prototype/__xml/egpv7/___f01_link_element_v7.xml'</div><div class=\"ql-code-block\">    let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">    let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">    // console.log('line104', thesrcxmlstr)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">    let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">    let component_dom_obj = $(thesrcxmlstr_cleaned)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // config the ProjectCollection.Elements.Element(of the link).Element</div><div class=\"ql-code-block\">    let link_element_dom_obj = $(component_dom_obj.find('Element')[0])</div><div class=\"ql-code-block\">    if (config_link.Element.Label) { $(link_element_dom_obj.find('Label')[0]).text(config_link.Element.Label) }</div><div class=\"ql-code-block\">    if (config_link.Element.Container) { $(link_element_dom_obj.find('Container')[0]).text(config_link.Element.Container) }</div><div class=\"ql-code-block\">    if (config_link.Element.ID) { $(link_element_dom_obj.find('ID')[0]).text(config_link.Element.ID) }</div><div class=\"ql-code-block\">    if (config_link.Element.CreatedOn) { $(link_element_dom_obj.find('CreatedOn')[0]).text(config_link.Element.CreatedOn) }</div><div class=\"ql-code-block\">    if (config_link.Element.ModifiedOn) { $(link_element_dom_obj.find('ModifiedOn')[0]).text(config_link.Element.ModifiedOn) }</div><div class=\"ql-code-block\">    if (config_link.Element.ModifiedBy) { $(link_element_dom_obj.find('ModifiedBy')[0]).text(config_link.Element.ModifiedBy) }</div><div class=\"ql-code-block\">    if (config_link.Element.ModifiedByEGID) { $(link_element_dom_obj.find('ModifiedByEGID')[0]).text(config_link.Element.ModifiedByEGID) }</div><div class=\"ql-code-block\">    if (config_link.Element.InputIDs) { $(link_element_dom_obj.find('InputIDs')[0]).text(config_link.Element.InputIDs) }</div><div class=\"ql-code-block\">    // could config more... </div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // // config the ProjectCollection.Elements.Element(of the link).Log</div><div class=\"ql-code-block\">    let link_log_dom_obj = $(component_dom_obj.find('Log')[0])</div><div class=\"ql-code-block\">    if (config_link.Log.Parent) { $(link_log_dom_obj.find('Parent')[0]).text(config_link.Log.Parent) }</div><div class=\"ql-code-block\">    if (config_link.Log.LinkFrom) { $(link_log_dom_obj.find('LinkFrom')[0]).text(config_link.Log.LinkFrom) }</div><div class=\"ql-code-block\">    if (config_link.Log.LinkTo) { $(link_log_dom_obj.find('LinkTo')[0]).text(config_link.Log.LinkTo) }</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // console.log('line129', component_dom_obj.prop('outerHTML'))</div><div class=\"ql-code-block\">    return component_dom_obj</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">}; //async function make_link_element_component</div></div><p>t///</p>","children":[{"idx":"b2c269f1-2ba1-4863-8345-c7998fb3c0b6","name":"2. append to ProjectCollection.Elements","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}]}],"collapsed":0,"_substeps":{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26","name":"substeps","custparents":[{"idx":"7d2d6388-6292-48ca-b1e5-7808ef1cabec"}],"children":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb","name":"1. read prototype xml: readtxt()","custparents":[{"idx":"f7eb411a-9d75-414a-9adc-362c35c22c26"}],"children":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58","name":"2. clean xmls: cleanxmlstr()","custparents":[{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"children":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7","name":"3. config components","custparents":[{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","children":[],"collapsed":0,"_substeps":{"idx":"MY0a1d2cb1-b24e-41f9-bfe1-59991ad07f85","name":"substeps","custparents":[{"idx":"997e9139-9175-4422-a8da-9f6c31a211a7"}],"children":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392","name":".Element","custparents":[{"idx":"MY0a1d2cb1-b24e-41f9-bfe1-59991ad07f85"}],"children":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437","name":".Element","custparents":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392"}],"children":[{"idx":"f147dd93-48e2-463a-845f-0afa2a3bbafb","name":".ID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"8ebf01fb-2ac4-4cee-be23-45517c8e7387","name":".Label","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"07b9949d-2fe3-4c5c-b567-3691382ecf80","name":".Container","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e807bf65-6f0e-49a3-beeb-fe24a3e9be34","name":".CreatedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"1383bfb3-6302-469f-9712-34cb27c0d236","name":".ModifiedOn","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"e391919f-8659-455d-9089-1814faeab06d","name":".ModifiedBy","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"ee9d61f0-c11f-4f02-9daf-fd66e1cc8e1a","name":".ModifiedByEGID","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]},{"idx":"MY156471fa-c538-4276-a6c0-76553352d293","name":".InputIDs","custparents":[{"idx":"b7d3a7ee-7049-40d8-ac9f-09ef4d837437"}]}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","collapsed":1,"oldparentidx":"997e9139-9175-4422-a8da-9f6c31a211a7"},{"idx":"MYb88dd02b-342a-4783-8a15-4d629e1aa29f","name":".Log","custparents":[{"idx":"MY39b320f9-9bb6-47cb-af27-408fac444392"}],"children":[{"idx":"MYf9bebb2b-b167-4b9b-81a8-14260e4057f1","name":".Parent","custparents":[{"idx":"MYb88dd02b-342a-4783-8a15-4d629e1aa29f"}]},{"idx":"MY813e0762-e783-45ac-90b5-05ee64f43a0a","name":".LinkFrom","custparents":[{"idx":"MYb88dd02b-342a-4783-8a15-4d629e1aa29f"}]},{"idx":"MY66f32809-4156-460b-b2c7-52e3b418140d","name":".LinkTo","custparents":[{"idx":"MYb88dd02b-342a-4783-8a15-4d629e1aa29f"}]}],"collapsed":1}]}]}}]}]}]}}]}}],"collapsed":1}],"collapsed":1},{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0","name":"Functions for xml editing","custparents":[{"idx":"MYd09b4d1f-f2df-4399-984e-02c46ba71d3e"}],"children":[{"idx":"MY0fd7d965-9476-4122-92db-acb6f5bdf71f","name":"cleanxmlstr()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MYd82540da-a82d-44ef-ba4c-6704395ef570"},{"idx":"MY67360eeb-68c5-4df4-a367-e6cda4bfab3f"},{"idx":"MY6a69f0dd-a07e-4efc-8e29-5ba25dfa1b17"},{"idx":"d228b883-182c-49ad-a2c6-72676d938640"},{"idx":"c8513643-c0f6-41ef-a04e-6febdf833f58"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// clean up the xmlstr</div><div class=\"ql-code-block\">function cleanxmlstr(thexmlstr) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // to cleanup the nonprintable chars</div><div class=\"ql-code-block\">    // let thexmlstr_remove_nonprintable = thexmlstr.replace(/[^\\x20-\\x7E\\s\\S]+/g, \"\")</div><div class=\"ql-code-block\">    let thexmlstr_remove_nonprintable = thexmlstr</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // the xmlstr is messed up with strange chars like &amp;amp;lt; &amp;lt;, etc</div><div class=\"ql-code-block\">    // 1. The following is to change &amp;amp;lt to &lt;, &amp;gt to &gt; ...</div><div class=\"ql-code-block\">    // let thesrcxmlstr_ampersand_code_normalized = normalize_ampersand_code(thexmlstr_remove_nonprintable)</div><div class=\"ql-code-block\">    // Note: second thought! do not convert ampersand symbols. These ampersand symbols are necessary for SAS EGP to identify settings within an xml tag from xmltag</div><div class=\"ql-code-block\">    // for example within &lt;DNA&gt;  &lt;/DNA&gt;, the html '&amp;lt;DNA...&amp;gt;DNA' has special meanings for SAS EG to identify (in this case, to identify the setting for location of an external file)</div><div class=\"ql-code-block\">    // If the ampersand code '&amp;lt;' is converted, SAS EG will wrongly consider it as an xml tag, and ignore the settings.  </div><div class=\"ql-code-block\">    let thesrcxmlstr_ampersand_code_normalized = thexmlstr_remove_nonprintable</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // jsdom does not handle the tag &lt;Table&gt;A&lt;/Table&gt; well</div><div class=\"ql-code-block\">    // In that case, it alters the html to '&lt;Table&gt;&lt;/Table&gt;A' !</div><div class=\"ql-code-block\">    // The following is to rename the tag &lt;Table&gt; to &lt;Table123&gt; to work around</div><div class=\"ql-code-block\">    let thesrcxmlstr_rename_table_table123 = rename_tag_named_table(thesrcxmlstr_ampersand_code_normalized)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // the xhtml self-colsing tags like &lt;Parameters /&gt; must be converted to &lt;Parameters&gt;&lt;/Parameters&gt;</div><div class=\"ql-code-block\">    // because the JSDOM does not read &lt;Parameters /&gt; well, it'll mess up the nested structure!</div><div class=\"ql-code-block\">    /**</div><div class=\"ql-code-block\">      e.g., the structure is like</div><div class=\"ql-code-block\">     &lt;Parameters /&gt;</div><div class=\"ql-code-block\">     &lt;ExecutionTimeSpan&gt;-P10675199DT2H48M5.4775808S&lt;/ExecutionTimeSpan&gt;</div><div class=\"ql-code-block\"> </div><div class=\"ql-code-block\">     JSDOM wrongly treat it as </div><div class=\"ql-code-block\">     &lt;Parameters&gt;</div><div class=\"ql-code-block\">        &lt;ExecutionTimeSpan&gt;-P10675199DT2H48M5.4775808S&lt;/ExecutionTimeSpan&gt;</div><div class=\"ql-code-block\">     &lt;/Parameters&gt;</div><div class=\"ql-code-block\">     2. the following is to convert  &lt;Parameters /&gt; to &lt;Parameters&gt;&lt;/Parameters&gt;</div><div class=\"ql-code-block\">     */</div><div class=\"ql-code-block\">    let thesrcxmlstr_selfclosing_converted = convertSelfClosingHTML_to_OldSchoolHTML(thesrcxmlstr_rename_table_table123)</div><div class=\"ql-code-block\">    // console.log(thesrcxmlstr_normalized_2)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    //3. remove the comments (code within &lt;!--  and --&gt;)</div><div class=\"ql-code-block\">    let thesrcxmlstr_removecomments = removecomments(thesrcxmlstr_selfclosing_converted)</div><div class=\"ql-code-block\">    // console.log(thesrcxmlstr_removecomments)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return thesrcxmlstr_removecomments</div><div class=\"ql-code-block\">}; //</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MYb0abc99d-9444-4304-b3de-76fda760e4e4","name":"substeps","custparents":[{"idx":"MY0fd7d965-9476-4122-92db-acb6f5bdf71f"}],"children":[{"idx":"MY1dc71759-bab6-4e34-92ef-5b2412b6570c","name":"1. rename Table tag: rename_tag_named_table()","custparents":[{"idx":"MYb0abc99d-9444-4304-b3de-76fda760e4e4"}],"collapsed":0,"children":[{"idx":"MYc9f6abdc-fa92-4c14-9dc7-4404b249a132","name":"2. convert self-closing tags: convertSelfClosingHTML_ to_OldSchoolHTML()","custparents":[{"idx":"MY1dc71759-bab6-4e34-92ef-5b2412b6570c"}],"children":[{"idx":"MYeb19608e-cacd-4e19-8133-3e8ce96ae5c4","name":"3. removecomments: removecomments()","custparents":[{"idx":"MYc9f6abdc-fa92-4c14-9dc7-4404b249a132"}]}]}]}]}},{"idx":"MYaf450c8e-f599-48ef-9872-6ec5211d4f6d","name":"rename_tag_named_table()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MY1dc71759-bab6-4e34-92ef-5b2412b6570c"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">function rename_tag_named_table(thestr) {</div><div class=\"ql-code-block\">    thestr = thestr.replace(/\\&lt;Table\\&gt;/g, '&lt;Table123&gt;')</div><div class=\"ql-code-block\">    thestr = thestr.replace(/\\&lt;\\/Table\\&gt;/g, '&lt;/Table123&gt;')</div><div class=\"ql-code-block\">    return thestr</div><div class=\"ql-code-block\">}; // function rename_tag_named_table</div></div><p>t///</p>"},{"idx":"MY3918a900-afd1-43a3-802a-a18865a26326","name":"convertSelfClosingHTML_ to_OldSchoolHTML()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MYc9f6abdc-fa92-4c14-9dc7-4404b249a132"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// convert &lt;Parameters /&gt; to &lt;Parameters&gt;&lt;/Parameters&gt;</div><div class=\"ql-code-block\">function convertSelfClosingHTML_to_OldSchoolHTML(str) {</div><div class=\"ql-code-block\">    let matched_arr = str.match(/\\&lt;(.*) \\/\\&gt;/)</div><div class=\"ql-code-block\">    // console.log(matched_arr)</div><div class=\"ql-code-block\">    if (matched_arr &amp;&amp; matched_arr.length &gt; 0) {</div><div class=\"ql-code-block\">        let seg1 = matched_arr[1].split('&lt;')</div><div class=\"ql-code-block\">        // sometimes the lastmatchedstr is like GitSourceControl GUID=\"x2K5fW8CFtZy3Ke7\"</div><div class=\"ql-code-block\">        // in that case, the part after the first whitespace (GUID=\"x2K5fW8CFtZy3Ke7\") should be excluded </div><div class=\"ql-code-block\">        let theLastMatchedStr = seg1[seg1.length - 1]</div><div class=\"ql-code-block\">        // console.log(theLastMatchedStr)</div><div class=\"ql-code-block\">        let theLastMatchedStr_tagName = theLastMatchedStr.split(' ')[0]</div><div class=\"ql-code-block\">        // console.log(theLastMatchedStr_tagName)</div><div class=\"ql-code-block\">        // replace &lt;Others /&gt; with &lt;Others&gt;&lt;/&lt;Others /&gt;</div><div class=\"ql-code-block\">        let xhtmlstr = \"&lt;\" + theLastMatchedStr + \" /&gt;\"</div><div class=\"ql-code-block\">        let htmlstr = \"&lt;\" + theLastMatchedStr + \"&gt;\" + \"&lt;/\" + theLastMatchedStr_tagName + \"&gt;\"</div><div class=\"ql-code-block\">        str = str.replace(xhtmlstr, htmlstr)</div><div class=\"ql-code-block\">        let matched_arr2 = str.match(/\\&lt;(.*) \\/\\&gt;/)</div><div class=\"ql-code-block\">        if (matched_arr &amp;&amp; matched_arr.length &gt; 0) {</div><div class=\"ql-code-block\">            str = convertSelfClosingHTML_to_OldSchoolHTML(str)</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">    }</div><div class=\"ql-code-block\">    return str</div><div class=\"ql-code-block\">}; // function convertSelfClosingHTML_to_OldSchoolHTML(str...</div></div><p>t///</p>"},{"idx":"MY749e1547-a501-48b0-8988-1be694d1933a","name":"removecomments()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MYeb19608e-cacd-4e19-8133-3e8ce96ae5c4"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// remmove comments</div><div class=\"ql-code-block\">function removecomments(thestr) {</div><div class=\"ql-code-block\">    let result = ''</div><div class=\"ql-code-block\">    // split str by '&lt;!--'</div><div class=\"ql-code-block\">    let segments = thestr.split('&lt;!--')</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; segments.length; i++) {</div><div class=\"ql-code-block\">        if (segments[i].includes('--&gt;')) {</div><div class=\"ql-code-block\">            let theSeg = segments[i].split('--&gt;')[1]</div><div class=\"ql-code-block\">            result = result + theSeg</div><div class=\"ql-code-block\">        } else {</div><div class=\"ql-code-block\">            result = result + segments[i]</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">    }</div><div class=\"ql-code-block\">    return result</div><div class=\"ql-code-block\">}; //function removecomments</div></div><p>t///</p>"},{"idx":"MY39f7266c-1330-49e1-bb44-37164f63d03e","name":"cleanup_targetxml()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MY49c544c2-a69e-4e5a-9572-c34b23586e2f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// clean up the target xml (e.g., convert standardized tag names and attribute names to original case form, etc)</div><div class=\"ql-code-block\">async function cleanup_targetxml(doms_obj, thesrcxmlstr_cleaned) {</div><div class=\"ql-code-block\">    // 1. get the modified xmlstr</div><div class=\"ql-code-block\">    let modified_xmlstr = doms_obj.prop('outerHTML')</div><div class=\"ql-code-block\">    // the program does not work well in identifying the tag names if there are two tags in a line</div><div class=\"ql-code-block\">    // the following is to force line breaking between two tags. </div><div class=\"ql-code-block\">    // the forced line breakers are with special marks ('___123456___')</div><div class=\"ql-code-block\">    // that way, after identifying the tag names, the target xml will be recovered to the original layout by removing these marked line breakers</div><div class=\"ql-code-block\">    modified_xmlstr = modified_xmlstr.replace(/\\&gt;/g, '&gt;\\n___123456___\\n')</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. make dictionaries to map out original tagnames and attributenames</div><div class=\"ql-code-block\">    // read all files in the prototype folder</div><div class=\"ql-code-block\">    // get all file names in </div><div class=\"ql-code-block\">    let thefolder_prototypexmls = 'data/in/prototype/__xml/egpv7'</div><div class=\"ql-code-block\">    let filenames_prototypexmlfiles = await getfilenames_from_a_folder(thefolder_prototypexmls)</div><div class=\"ql-code-block\">    // console.log('line274', filenames_prototypexmlfiles)</div><div class=\"ql-code-block\">    // loop for each file in the prototypexml file folder, concat the xml strings in the file</div><div class=\"ql-code-block\">    let str_all_prototype_xmlfiles = '&lt;Table&gt;\\n&lt;/Table&gt;\\n&lt;PFD&gt;\\n&lt;/PFD&gt;\\n'</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; filenames_prototypexmlfiles.length; i++) {</div><div class=\"ql-code-block\">        let d = filenames_prototypexmlfiles[i]</div><div class=\"ql-code-block\">        if (d.substr(0, 3) === '___' &amp;&amp; d !== '___sample.xml') {</div><div class=\"ql-code-block\">            let thesrcxmlfile = thefolder_prototypexmls + '/' + d</div><div class=\"ql-code-block\">            let encoding = \"utf16le\"; // the srcxml is directly from an egp file, remmember to read in using \"utf16le\" encoding</div><div class=\"ql-code-block\">            let thesrcxmlstr = await readtxt(thesrcxmlfile, encoding);</div><div class=\"ql-code-block\">            thesrcxmlstr = thesrcxmlstr.replace(/\\&gt;/g, '&gt;\\n')</div><div class=\"ql-code-block\">            // console.log('line282', thesrcxmlstr)</div><div class=\"ql-code-block\">            // cleanup the xmlstr (removing strange chars, convert self-closing html, etc.) </div><div class=\"ql-code-block\">            let thesrcxmlstr_cleaned = cleanxmlstr(thesrcxmlstr)</div><div class=\"ql-code-block\">            // console.log('line285',thesrcxmlstr_cleaned )</div><div class=\"ql-code-block\">            str_all_prototype_xmlfiles = str_all_prototype_xmlfiles + thesrcxmlstr_cleaned</div><div class=\"ql-code-block\">            // console.log('line287', str_all_prototype_xmlfiles)</div><div class=\"ql-code-block\">        } // if (d.substr(0, 3) === '___')</div><div class=\"ql-code-block\">    } //filenames_prototypexmlfiles.forEach(d</div><div class=\"ql-code-block\">    // console.log('line291', str_all_prototype_xmlfiles )</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 2. make a dictionary to map out the standardized and original tagnames</div><div class=\"ql-code-block\">    let originalTagnames_dict_crude = getOriginalTagNames_dict_crude(str_all_prototype_xmlfiles)</div><div class=\"ql-code-block\">    // console.log('line748',originalTagnames_dict_crude)</div><div class=\"ql-code-block\">    // Note: there is a bug that the SAS EGP project.xml contains tags &lt;Log&gt; (in &lt;Element Type=\"SAS.EG.ProjectElements.Link\"&gt;)</div><div class=\"ql-code-block\">    // and &lt;log&gt; (in &lt;JobRecipe&gt;)</div><div class=\"ql-code-block\">    // the dictionary must have a unique map, i.e., the standard tag LOG must be mapped to one of the original</div><div class=\"ql-code-block\">    // the work around is to change the &lt;log&gt; tag to &lt;Log&gt; (in data\\in\\prototype\\__xml\\egpv7\\___e03_task_element_v7.xml)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 3. make a dictionary to map out the standardized and original attribute names</div><div class=\"ql-code-block\">    let originalAttrNames_dict_crude = getOriginalAttrNames_dict_crude(str_all_prototype_xmlfiles)</div><div class=\"ql-code-block\">    // console.log(originalAttrNames_dict_crude)</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 4. replacce the standardized tagnames (all in uppercase) to original names</div><div class=\"ql-code-block\">    Object.keys(originalTagnames_dict_crude).forEach(d =&gt; {</div><div class=\"ql-code-block\">        let theoriginal = originalTagnames_dict_crude[d]</div><div class=\"ql-code-block\">        let regEx_normalized1 = new RegExp('\\&lt;' + d.toLowerCase() + '\\x20', 'g')</div><div class=\"ql-code-block\">        let regEx_normalized2 = new RegExp('\\&lt;' + d.toLowerCase() + '\\&gt;', 'g')</div><div class=\"ql-code-block\">        let regEx_normalized3 = new RegExp('\\&lt;\\/' + d.toLowerCase() + '&gt;', 'g')</div><div class=\"ql-code-block\">        modified_xmlstr = modified_xmlstr.replace(regEx_normalized1, '&lt;' + theoriginal + ' ')</div><div class=\"ql-code-block\">        modified_xmlstr = modified_xmlstr.replace(regEx_normalized2, '&lt;' + theoriginal + '&gt;')</div><div class=\"ql-code-block\">        modified_xmlstr = modified_xmlstr.replace(regEx_normalized3, '&lt;/' + theoriginal + '&gt;')</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 5. replacce the standardized attribute names (all in lowercase) to original names</div><div class=\"ql-code-block\">    Object.keys(originalAttrNames_dict_crude).forEach(d =&gt; {</div><div class=\"ql-code-block\">        let theoriginal = originalAttrNames_dict_crude[d]</div><div class=\"ql-code-block\">        let regEx_normalized1 = new RegExp(d.toLowerCase() + '=', 'g')</div><div class=\"ql-code-block\">        modified_xmlstr = modified_xmlstr.replace(regEx_normalized1, theoriginal + '=')</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    // 6. remove the '\\n___123456___\\n'</div><div class=\"ql-code-block\">    modified_xmlstr = modified_xmlstr.replace(/\\n___123456___\\n/g, '')</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return modified_xmlstr</div><div class=\"ql-code-block\">}; //async function cleanup_targetxml()</div></div><p>t///</p>","children":[],"_substeps":{"idx":"MYb51db30a-f264-477e-b423-ad37b000738f","name":"substeps","custparents":[{"idx":"MY39f7266c-1330-49e1-bb44-37164f63d03e"}],"children":[{"idx":"MY1f4b513e-28c5-49dc-9846-20b4f08f8c00","name":"1. get outerHTML from the DOM","custparents":[{"idx":"MYb51db30a-f264-477e-b423-ad37b000738f"}],"children":[{"idx":"MY2c69d0b3-0307-46a9-89e4-b827ccf22266","name":"2. force change line when a tag ends (e.g., a \">\" is encountered)","custparents":[{"idx":"MY1f4b513e-28c5-49dc-9846-20b4f08f8c00"}],"children":[{"idx":"MY1791cbd8-28a1-4e34-a541-67cd393900e9","name":"3. get xml from all prototype files","custparents":[{"idx":"MY2c69d0b3-0307-46a9-89e4-b827ccf22266"}],"children":[{"idx":"MYa75ceeb0-06d2-4768-a1f0-78f05e7dcec1","name":"4a. make dict of original and normalized tagnames: getOriginalTagNames_dict_crude()","custparents":[{"idx":"MY1791cbd8-28a1-4e34-a541-67cd393900e9"}],"children":[{"idx":"MY597e4597-0cbc-49a5-80da-13cb7ab1a80d","name":"5a. recover original names in target xml","custparents":[{"idx":"MYa75ceeb0-06d2-4768-a1f0-78f05e7dcec1"}],"children":[{"idx":"MYf014123d-bddc-4c93-86e3-71ade40524b1","name":"6. remove excessive line breakers and white spaces","custparents":[{"idx":"MY597e4597-0cbc-49a5-80da-13cb7ab1a80d"},{"idx":"MYf1650284-61af-4414-8cdb-82b58bc522d5"}]}]}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// get a list of tagnames in original case form</div><div class=\"ql-code-block\">// it is _crude as it contains tag like strings in submitted code (e.g., '&lt;note!&gt;' in submitted code '/*&lt;note!&gt; the dat set need to be sorted first!*/)</div><div class=\"ql-code-block\">function getOriginalTagNames_dict_crude(thexhmlstr) {</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    let orignalTagnames_dict = {}</div><div class=\"ql-code-block\">    // get strings between '&lt;/' and '&gt;', or between '&lt;' and '/&gt;'</div><div class=\"ql-code-block\">    // the matchAll returns all instances match a regexpress pattern, note: must use /g to indicate for repeating search</div><div class=\"ql-code-block\">    // the '...' in [... blabla] is to join the found instances into an array</div><div class=\"ql-code-block\">    // e.g., find all matched instances and join them into the array matched_arr1</div><div class=\"ql-code-block\">    let matched_arr1 = [...thexhmlstr.matchAll(/\\&lt;\\/(.*)\\&gt;/g)]</div><div class=\"ql-code-block\">    // console.log(\"line503\", matched_arr1[0])</div><div class=\"ql-code-block\">    let matched_arr2 = [...thexhmlstr.matchAll(/\\&lt;(.*) \\/\\&gt;/g)]</div><div class=\"ql-code-block\">    // console.log(\"matched_arr1\", matched_arr1.length)</div><div class=\"ql-code-block\">    // console.log(\"matched_arr2\", matched_arr2)</div><div class=\"ql-code-block\">    /** each element of the array is like the following, in which the second element is the text of the origianl tagname</div><div class=\"ql-code-block\">        ['&lt;Tag6 /&gt;','Tag6', ...]</div><div class=\"ql-code-block\">    */</div><div class=\"ql-code-block\">    // the following is to push such a second element into the final arr with distinct tagNames</div><div class=\"ql-code-block\">    matched_arr1.forEach(d =&gt; {</div><div class=\"ql-code-block\">        // console.log(d[1])</div><div class=\"ql-code-block\">        let theTag = d[1]</div><div class=\"ql-code-block\">        if (!Object.keys(orignalTagnames_dict).includes(theTag.toUpperCase())) {</div><div class=\"ql-code-block\">            orignalTagnames_dict[theTag.toUpperCase()] = theTag</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\">    matched_arr2.forEach(d =&gt; {</div><div class=\"ql-code-block\">        let theTag = d[1]</div><div class=\"ql-code-block\">        if (!Object.keys(orignalTagnames_dict).includes(theTag.toUpperCase())) {</div><div class=\"ql-code-block\">            orignalTagnames_dict[theTag.toUpperCase()] = theTag</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">    })</div><div class=\"ql-code-block\">    return orignalTagnames_dict</div><div class=\"ql-code-block\">}; // function getOriginalTagNames(thexhmlstr)</div></div><p>t///</p>"},{"idx":"MY5b606052-3265-4ec4-900f-d6fd4b97781e","name":"4b. make dict of original and normalized attr names: getOriginalAttrNames_dict_crude()","custparents":[{"idx":"MY1791cbd8-28a1-4e34-a541-67cd393900e9"}],"children":[{"idx":"MYf1650284-61af-4414-8cdb-82b58bc522d5","name":"5b. recover original Attr names in target xml","custparents":[{"idx":"MY5b606052-3265-4ec4-900f-d6fd4b97781e"}]}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// get a dict of attribute names in original case form like {\"egversion\":\"EGversion\"} (key is the normalized attribute name)</div><div class=\"ql-code-block\">// it is called _crude as it included strings in submitted code like \"a in the submitted code a=1;\"</div><div class=\"ql-code-block\">function getOriginalAttrNames_dict_crude(thexhmlstr) {</div><div class=\"ql-code-block\">    let orignalAttrnames_dict = {}</div><div class=\"ql-code-block\">    // get strings between ' ' and '='</div><div class=\"ql-code-block\">    // the matchAll returns all instances match a regexpress pattern, note: must use /g to indicate for repeating search</div><div class=\"ql-code-block\">    // the '...' in [... blabla] is to join the found instances into an array</div><div class=\"ql-code-block\">    // e.g., find all matched instances and join them into the array matched_arr1</div><div class=\"ql-code-block\">    // the regular express fails to identify strings betwen a white space and something</div><div class=\"ql-code-block\">    // for example: &lt;ProjectCollection EGVersion=\"8.1\" Type=\"...\"&gt;</div><div class=\"ql-code-block\">    // the expected matched strs are EGVersion=, and Type=</div><div class=\"ql-code-block\">    // however, the match returns ProjectCollection EGVersion=\"8.1\" Type= (two attributes are messed up in a single match result)</div><div class=\"ql-code-block\">    // let matched_arr1 = [...thexhmlstr.matchAll(/\\&lt;(.*)=/g)]</div><div class=\"ql-code-block\">    // To avoid it, thexhmlstr is splitted into segments by ' '</div><div class=\"ql-code-block\">    let thexhmlstr_segs = thexhmlstr.split(' ')</div><div class=\"ql-code-block\">    // that way, the EGVersion=\"8.1\" Type= are splitted into separate segments</div><div class=\"ql-code-block\">    // next, split each segment by = (if there is a = in the str) and select the first element of the split (e.g., for 'EGVersion=\"8.1\"', the first element of the split is 'EGVersion')</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    thexhmlstr_segs.forEach(d =&gt; {</div><div class=\"ql-code-block\">        if (d.includes('=')) {</div><div class=\"ql-code-block\">            let theAttrName = d.split('=')[0]</div><div class=\"ql-code-block\">            if (!Object.keys(orignalAttrnames_dict).includes(theAttrName.toLowerCase())) {</div><div class=\"ql-code-block\">                orignalAttrnames_dict[theAttrName.toLowerCase()] = theAttrName</div><div class=\"ql-code-block\">            }</div><div class=\"ql-code-block\">        }</div><div class=\"ql-code-block\">    }) // thexhmlstr_segs.forEach</div><div class=\"ql-code-block\"><br></div><div class=\"ql-code-block\">    return orignalAttrnames_dict</div><div class=\"ql-code-block\">}; // function getOriginalTagNames(thexhmlstr)</div></div><p>t///</p>"}],"collapsed":0,"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>","_substeps":{"idx":"MY59396d21-3f72-493b-811d-4b35319c9366","name":"substeps","custparents":[{"idx":"MY1791cbd8-28a1-4e34-a541-67cd393900e9"}],"children":[{"idx":"MY8c2d3078-1f99-4ff6-8598-d6b553987a11","name":"3a. get names of all prototype files: getfilenames_from_a_folder()","custparents":[{"idx":"MY59396d21-3f72-493b-811d-4b35319c9366"}],"children":[{"idx":"MY8384d42a-4288-4242-a672-d41b256afd5d","name":"3b. Loop for each file and make a string of all prototype xml text: readtxt()","custparents":[{"idx":"MY8c2d3078-1f99-4ff6-8598-d6b553987a11"}],"collapsed":0}],"NodeDescription":"<p>///t</p><p><br></p><p>t///</p>"}]}}]}]}]}},{"idx":"MY58f6fd0d-87c1-495e-91c4-e7d7d76d1ed1","name":"get_element_doms_ obj_by_type()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MY19a25acf-3d7d-4584-9a7d-6b62f56b455c"},{"idx":"50aec3b0-cc09-4503-9e6a-a6c910d56abc"},{"idx":"MY8eaf9dea-5fa1-4413-84fb-7e1601709547"},{"idx":"acc8f27e-1cbf-4f4b-bd0b-25a6f0f48485"},{"idx":"027be327-4e4e-4289-8a85-ac0d101551f1"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// get settings from the Project from the v8 doms_obj</div><div class=\"ql-code-block\">async function get_element_doms_obj_by_type(doms_obj, type_attr) {</div><div class=\"ql-code-block\">    // a1. identify the PFD elements in ProjectCollection.Elements</div><div class=\"ql-code-block\">    let elements_doms_obj = $(doms_obj.find('Elements').find('Element'))</div><div class=\"ql-code-block\">    // console.log('line85', elements_doms_obj)</div><div class=\"ql-code-block\">    let elements_of_the_type_doms_obj = []</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; elements_doms_obj.length; i++) {</div><div class=\"ql-code-block\">        if ($(elements_doms_obj[i]).attr('Type') === type_attr) {</div><div class=\"ql-code-block\">            elements_of_the_type_doms_obj.push(elements_doms_obj[i])</div><div class=\"ql-code-block\">        } // if </div><div class=\"ql-code-block\">    } //for (let i =0; i&lt;elements_doms_obj.length;i++)</div><div class=\"ql-code-block\">    // console.log('line92', $(pfd_elements_doms_obj[0]).find('Element').find('Label').text())</div><div class=\"ql-code-block\">    return elements_of_the_type_doms_obj</div><div class=\"ql-code-block\">};//async function get_element_doms_obj_by_type(doms_obj, type_attr)</div></div><p>t///</p>"},{"idx":"MY2d8cbdfa-cd19-470b-8981-384e1e5e3373","name":"get_task_or_ note_graphic_ dom_ by_id_v8()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MYb960a136-3377-44fe-8e84-64c7b50dcbbb"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// use the element id (i.e., a task id) to find the correponding TaskGraphic in doms_obj_v8</div><div class=\"ql-code-block\">function get_task_or_note_graphic_dom_by_id_v8(doms_obj, elementid, task_or_note_graphic) {</div><div class=\"ql-code-block\">    // unlike EG v7, in EG v8, the TaskGraphic tags are placed separately according to the parent PFD</div><div class=\"ql-code-block\">    // however, the following find all TaskGraphic tags regardless of under which PFD</div><div class=\"ql-code-block\">    let the_doms = $(doms_obj.find('External_Objects').find('ProcessFlowControlManager').find('ProcessFlowControlState').find('GraphicObjects').find(task_or_note_graphic))</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; the_doms.length; i++) {</div><div class=\"ql-code-block\">        let the_dom_obj = $(the_doms[i])</div><div class=\"ql-code-block\">        // console.log('190:', $(the_dom_obj.find('Element')[0]).text())</div><div class=\"ql-code-block\">        if ($(the_dom_obj.find('Element')[0]).text() === elementid) { return $(the_dom_obj) }</div><div class=\"ql-code-block\">    } //for (let i =0; i &lt; the_doms.length; i++)</div><div class=\"ql-code-block\">}; //function get_task_or_note_graphic_dom_by_id</div></div><p>t///</p>"},{"idx":"MYfb18f1f4-02ff-46f0-be37-308dbb7c4a6d","name":"get_egtreenode_ of_pfd_by_pfdid()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MY39a68023-b74c-4d3c-940d-72787dc43c81"},{"idx":"f3845914-454e-498d-874b-4378c1e4c701"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// find the EGTreeNode of a PFD according to pfdid</div><div class=\"ql-code-block\">function get_egtreenode_of_pfd_by_pfdid(doms_obj, pfdid) {</div><div class=\"ql-code-block\">    // find all PFD EGTreeNode under Elements ProjectColletion.External_Objects.ProjectTreeView</div><div class=\"ql-code-block\">    let egtreenode_pfd_doms_obj = $(doms_obj.find('External_Objects').find('ProjectTreeView').find('EGTreeNode'))</div><div class=\"ql-code-block\">    // loop for each of such EGTreeNode elements, and identify the one with the same PFD ID as from the input pfdid</div><div class=\"ql-code-block\">    for (let i = 0; i &lt; egtreenode_pfd_doms_obj.length; i++) {</div><div class=\"ql-code-block\">        let the_egtreenode_pfd_dom_obj = $(egtreenode_pfd_doms_obj[i])</div><div class=\"ql-code-block\">        // get the textcontent of .ElementID tag of the_egtreenode_pfd_dom_obj</div><div class=\"ql-code-block\">        let the_egtreenode_pfd_elementid_dom_obj = $(the_egtreenode_pfd_dom_obj.find('ElementID')[0])</div><div class=\"ql-code-block\">        let the_pfd_id = the_egtreenode_pfd_elementid_dom_obj.text()</div><div class=\"ql-code-block\">        // compare the_pfd_id with the pfd id in config_task.Element.Container (config_task.Element.Container)</div><div class=\"ql-code-block\">        if (the_pfd_id &amp;&amp; the_pfd_id === pfdid) {</div><div class=\"ql-code-block\">            return the_egtreenode_pfd_dom_obj</div><div class=\"ql-code-block\">            break</div><div class=\"ql-code-block\">        } // if (the_pfd_id &amp;&amp; the_pfd_id === pfdid )</div><div class=\"ql-code-block\">    } // for (let i=0; i &lt; egtreenode_pfd_doms_obj.length; i++)</div><div class=\"ql-code-block\">}; // function get_egtreenode_of_pfd_by_pfdid (pfdid)</div></div><p>t///</p>"},{"idx":"MY38c5e7f3-14a5-4f99-8cf5-250b21c75f35","name":"get_egtreenode_ of_program_in_ a_egtreenode_of_pfd ()","custparents":[{"idx":"MYd1671304-4031-4783-a807-766d87fdcab0"},{"idx":"MY8641f66a-ee15-4853-a65b-beda6dfeb821"},{"idx":"28354ec6-bcbb-4ba5-8ef3-297e4e6fbed2"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// find the EGTreeNode for Programs within EGTreeNode of a specified parent PFD's </div><div class=\"ql-code-block\">function get_egtreenode_of_program_in_a_egtreenode_of_pfd(egtreenode_pfd_dom_obj) {</div><div class=\"ql-code-block\">    // within egtreenode_pfd_dom_obj, find the first EGTreeNode of which the .NodeType's textcontent is 'NODETYPE_PROGRAMFOLDER'</div><div class=\"ql-code-block\">    let egtreenode_program_egtreenode_pfd_doms_obj = $(egtreenode_pfd_dom_obj.find('EGTreeNode'))</div><div class=\"ql-code-block\">    // loop for each of such EGTreeNode elements, and identify the program EGTreeNode, i.e. the one with NoteType.text() = 'NODETYPE_PROGRAMFOLDER' and Label.text()='Programs'</div><div class=\"ql-code-block\">    for (let j = 0; j &lt; egtreenode_program_egtreenode_pfd_doms_obj.length; j++) {</div><div class=\"ql-code-block\">        let the_egtreenode_program_dom_obj = $(egtreenode_program_egtreenode_pfd_doms_obj[j])</div><div class=\"ql-code-block\">        // console.log('line88', the_egtreenode_program_dom_obj)</div><div class=\"ql-code-block\">        let nodetype_the_egtreenode_dom_obj = $(the_egtreenode_program_dom_obj.find('NodeType')[0])</div><div class=\"ql-code-block\">        let nodetypetext = nodetype_the_egtreenode_dom_obj.text()</div><div class=\"ql-code-block\">        // let label_the_egtreenode_dom_obj = $(the_egtreenode_program_dom_obj.find('Label')[0])</div><div class=\"ql-code-block\">        // let labeltext = label_the_egtreenode_dom_obj.text()</div><div class=\"ql-code-block\">        if (nodetypetext === 'NODETYPE_PROGRAMFOLDER') {</div><div class=\"ql-code-block\">            // append the task_egtreenode_dom_obj to the current the_egtreenode_dom_obj</div><div class=\"ql-code-block\">            return the_egtreenode_program_dom_obj</div><div class=\"ql-code-block\">        } //if (nodetypetext_the_egtreenode_dom_obj === '' &amp;&amp; labeltext_the_egtreenode_dom_obj === '')</div><div class=\"ql-code-block\">    }//  for (let j = 0; j &lt; the_egtreenode_program_egtreenode_pfd_doms_obj.length; j++)</div><div class=\"ql-code-block\">}; //function get_egtreenode_of_programs_in_a_egtreenode_of_pfd(egtreenode_pfd_dom_obj)</div></div><p>t///</p>"}],"collapsed":1},{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f","name":"Functions for general purpose","custparents":[{"idx":"MYd09b4d1f-f2df-4399-984e-02c46ba71d3e"}],"children":[{"idx":"MY99e5b34f-1ea1-4785-8438-edd7791cc704","name":"readtxt()","custparents":[{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f"},{"idx":"MY957f64ab-1e37-40d9-9317-190a4fa57e29"},{"idx":"MY8384d42a-4288-4242-a672-d41b256afd5d"},{"idx":"MY8b3426c4-5bdf-44f9-a42a-686b708bde33"},{"idx":"44043051-8154-4983-a5c5-4afe7322305e"},{"idx":"b5e01322-1732-4a88-9e4b-8351c1a2acbb"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// read text from a local file</div><div class=\"ql-code-block\">async function readtxt(thetextfile, encode) {</div><div class=\"ql-code-block\">    if (encode === undefined) {</div><div class=\"ql-code-block\">        encode = 'utf8'</div><div class=\"ql-code-block\">    }</div><div class=\"ql-code-block\">    let fs = require('fs'), data;</div><div class=\"ql-code-block\">    try {</div><div class=\"ql-code-block\">        data = fs.readFileSync(thetextfile, encode);</div><div class=\"ql-code-block\">        // console.log(data.toString());    </div><div class=\"ql-code-block\">    } catch (e) {</div><div class=\"ql-code-block\">        console.log('Error:', e.stack);</div><div class=\"ql-code-block\">    }</div><div class=\"ql-code-block\">    return data</div><div class=\"ql-code-block\">}; // async function readtxt(thetextfile, encode)</div></div><p>t///</p>"},{"idx":"MYcce083f2-f2f3-48d1-9e9d-e26e8e68766e","name":"getfilenames_from_a_folder()","custparents":[{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f"},{"idx":"MY8c2d3078-1f99-4ff6-8598-d6b553987a11"}]},{"idx":"MY9fdb9327-9f4c-4ec5-a011-7515838039be","name":"remove_spaces_linebreakers()","custparents":[{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// remove lines only containing spaces and line breakers</div><div class=\"ql-code-block\">function remove_spaces_linebreakers(text) {</div><div class=\"ql-code-block\">    let result = ''</div><div class=\"ql-code-block\">    // read the str into lines</div><div class=\"ql-code-block\">    let lines = text.split('\\n')</div><div class=\"ql-code-block\">    // for each line, replace the white spaces with nothing and then concat</div><div class=\"ql-code-block\">    lines.forEach(d =&gt; {</div><div class=\"ql-code-block\">        let theline_removing_whitespaces = d.replace(/\\s/g, '')</div><div class=\"ql-code-block\">        // console.log(theline_removing_whitespaces)</div><div class=\"ql-code-block\">        if (theline_removing_whitespaces.length &gt; 0) {</div><div class=\"ql-code-block\">            // it is tricky here, for lines not only with white spaces, use the original string in d. That way, a string like 'PFD1 p1' won't be converted to 'PFD1p1'</div><div class=\"ql-code-block\">            result = result + d + '\\n'</div><div class=\"ql-code-block\">        } // if (theline_removing_whitespaces.length &gt;0)    </div><div class=\"ql-code-block\">    }) //lines.forEach</div><div class=\"ql-code-block\">    // console.log(result)</div><div class=\"ql-code-block\">    return result</div><div class=\"ql-code-block\">};//remove_spaces_linebreakers</div></div><p>t///</p>"},{"idx":"MY4fad7bb3-1e21-4f2b-bdcc-dbf1d7b162c9","name":"saveLocalTxtFile()","custparents":[{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f"},{"idx":"MYfb483152-aace-41d7-81cd-30d964db6582"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// save to local file</div><div class=\"ql-code-block\">async function saveLocalTxtFile(thetxtstr, targettxtfile, encoding) {</div><div class=\"ql-code-block\">    encoding = encoding || 'utf-8' // by default using utf-8</div><div class=\"ql-code-block\">    let fs = require('fs');</div><div class=\"ql-code-block\">    // use writeFileSync instead of writeFile to avoid async problems</div><div class=\"ql-code-block\">    fs.writeFileSync(targettxtfile, thetxtstr, encoding, function (err) {</div><div class=\"ql-code-block\">        if (err) { console.log(err); }</div><div class=\"ql-code-block\">    });</div><div class=\"ql-code-block\">}; // saveLocalTxtFile</div></div><p>t///</p>"},{"idx":"MYbaf0c8e7-d84a-415d-9cdd-cfd9ff5084dc","name":"get_filename()","custparents":[{"idx":"MY6daf011d-4fe2-492f-81da-8c23a67b016f"}],"NodeDescription":"<p>///t</p><div class=\"ql-code-block-container\" spellcheck=\"false\"><div class=\"ql-code-block\">// get a dict of path, name, and extention name of a file</div><div class=\"ql-code-block\">// Note: the full path string of the file must be give as String.raw``</div><div class=\"ql-code-block\">// let filename_with_path = String.raw`data\\in\\prototype\\__xml/egpv7\\__egtask_example.xml`</div><div class=\"ql-code-block\">function get_filename(filename_with_path) {</div><div class=\"ql-code-block\">    // console.log(filename_with_path)</div><div class=\"ql-code-block\">    // convert backslash to slash</div><div class=\"ql-code-block\">    filename_with_path = filename_with_path.replace(/\\\\/g, '/')</div><div class=\"ql-code-block\">    // console.log(filename_with_path)</div><div class=\"ql-code-block\">    let startpos_slash = filename_with_path.lastIndexOf('/')</div><div class=\"ql-code-block\">    let filename_with_ext = filename_with_path.substr(startpos_slash + 1)</div><div class=\"ql-code-block\">    let startpos_dot = filename_with_ext.lastIndexOf('.')</div><div class=\"ql-code-block\">    let path = filename_with_path.substring(0, startpos_slash)</div><div class=\"ql-code-block\">    let name = filename_with_ext.substring(0, startpos_dot)</div><div class=\"ql-code-block\">    let ext = filename_with_ext.substr(startpos_dot + 1)</div><div class=\"ql-code-block\">    return { path: path, name: name, ext: ext }</div><div class=\"ql-code-block\">}; // function get_filename(filename_with_path)</div></div><p>t///</p>"}],"collapsed":1}],"collapsed":1}],"NodeDescription":"<p>///t</p><p>Introduction:</p><p><br></p><p>Demo of converting an EGP v8 file to v7 </p><p>File location, structure, and GitHub repository</p><p><br></p><p>t///</p>","collapsed":0}