// 3. add process flow (PFD)
    let pdf_arr = [{'Label':'PFD1'}, {'Label':'PFD2'}], pfd_input = [], config_pfd = []
    for (let i = 0; i < pdf_arr.length; i++) {
        // config the pfd element
        pfd_input[i] = {}
        pfd_input[i].Label = pdf_arr[i].Label
        config_pfd[i] = await config_pfd_function(config_project, pfd_input[i])
        doms_obj = await make_append_pfd_component(doms_obj, config_pfd[i])
    } // for(let i=0;i<pdf_arr.length;i++)


    // 4. add EGTreeNode for wrapping all programs/tasks for ProjectTreeView.
    let config_programs=[]
    for (let i = 0; i < pdf_arr.length; i++) {
        // The EGTreeNode is to be added to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)
        // 4a. Configuration of the EGTreeNode    
        config_programs[i] = await config_programs_function(config_pfd[i])
        // 4b. make and append the EGTreeNode that is to be appended to ProjectCollection.External_Objects.ProjectTreeView.EGTreeNode(of a specific PFD)
        doms_obj = await make_append_egtreenode_programs(doms_obj, config_programs[i], config_pfd[i])
    } // for(let i=0;i<pdf_arr.length;i++)